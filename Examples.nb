(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    286886,       5409]
NotebookOptionsPosition[    278434,       5257]
NotebookOutlinePosition[    278882,       5274]
CellTagsIndexPosition[    278839,       5271]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["LieARTCharacters", "Section",
 CellChangeTimes->{{3.88401097970796*^9, 
  3.884010987393569*^9}},ExpressionUUID->"b661c40a-4385-4ae6-be4e-\
5d7f719fa41a"],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.8840110155713863`*^9, 
  3.884011023950601*^9}},ExpressionUUID->"29d58b42-35b8-495d-bf29-\
a9cd8fe45bde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "LieARTCharacters`"}]}], "Input",
 CellChangeTimes->{{3.884010936915288*^9, 3.8840109628442802`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1c573df5-af7d-4920-af24-0326480323d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LieART extension/modding", "Subsection",
 CellChangeTimes->{{3.884010990795101*^9, 
  3.8840110102941313`*^9}},ExpressionUUID->"868099ee-d77a-4353-8ef8-\
adb99d4bac0b"],

Cell[CellGroupData[{

Cell["Rank", "Subsubsection",
 CellChangeTimes->{{3.884011316485297*^9, 
  3.884011316971752*^9}},ExpressionUUID->"0b62021d-7957-402c-bbae-\
b0abbb5a78f4"],

Cell[TextData[{
 StyleBox["Rank", "CodeText"],
 " now works with ",
 StyleBox["ProductAlgebra", "CodeText"],
 ", ",
 StyleBox["ProductIrrep", "CodeText"],
 " and ",
 StyleBox["ProductWeight", "CodeText"],
 ", returning the rank of the underlying algebra."
}], "Text",
 CellChangeTimes->{{3.884011095810356*^9, 3.884011121809248*^9}, {
  3.884011170762121*^9, 3.8840112338187017`*^9}, {3.8840112768966007`*^9, 
  3.884011308137843*^9}, {3.884011395898981*^9, 
  3.884011396663286*^9}},ExpressionUUID->"dcce6ae0-d0c8-4769-a567-\
1f03955f8438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rank", "@", 
  RowBox[{"ProductAlgebra", "[", 
   RowBox[{"A2", ",", "A2", ",", "A2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.88401103316008*^9, 3.8840110465447903`*^9}, {
  3.8840110824829283`*^9, 3.884011083383575*^9}, {3.884011238853725*^9, 
  3.8840112684876328`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"dbf9e049-4076-4667-9cc9-ce6103aad4fe"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.884011046910884*^9, 3.884011083851695*^9, {3.884011261798167*^9, 
   3.8840112746491337`*^9}, 3.884012081405504*^9, 3.8840122904090548`*^9, 
   3.88401284108405*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"fb2e382f-6ab4-4d6b-a285-21252c8c1ece"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rank", "@", 
  RowBox[{"ProductWeight", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Weight", "[", "A2", "]"}], "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Weight", "[", "A2", "]"}], "[", 
     RowBox[{"1", ",", "1"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Weight", "[", "A2", "]"}], "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"128e6245-4034-4425-8826-73db089382b6"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.884011046910884*^9, 3.884011083851695*^9, {3.884011261800785*^9, 
   3.884011272888282*^9}, 3.8840122913428907`*^9, 3.884012842776554*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"68679287-e39d-418a-8602-98cdf52f25ca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Algebra", "Subsubsection",
 CellChangeTimes->{{3.8840113550059757`*^9, 3.884011355012158*^9}, 
   3.884011385331081*^9, {3.884012970332817*^9, 
   3.8840129709355793`*^9}},ExpressionUUID->"473735e5-61fe-4ef4-a905-\
35a260a119cc"],

Cell[TextData[{
 StyleBox["Algebra", "CodeText"],
 " gives the correct result for ",
 StyleBox["ProductIrrep", "CodeText"],
 ", ",
 StyleBox["ProductWeight", "CodeText"],
 ", ",
 StyleBox["IrrepPlus", "CodeText"],
 " and ",
 StyleBox["IrrepTimes", "CodeText"],
 " returning the algebra we are working with."
}], "Text",
 CellChangeTimes->{{3.884011404072083*^9, 3.884011408495973*^9}, {
  3.884011476540657*^9, 3.8840115800470123`*^9}, {3.884011730772943*^9, 
  3.884011731501114*^9}},ExpressionUUID->"65c57878-5b09-4275-988d-\
621d66362723"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Algebra", "@", 
  RowBox[{"ProductIrrep", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", "A1", "]"}], "[", "1", "]"}], ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "D2", "]"}], "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "B2", "]"}], "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.884011583008068*^9, 3.884011611158246*^9}, {
  3.884011657056391*^9, 3.884011665509986*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ed9a2da5-dd19-49f8-acf3-27e68cddc5c4"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubscriptBox["A", "1"], "\[Times]", 
   SubscriptBox["D", "2"], "\[Times]", 
   SubscriptBox["B", "2"]}],
  DisplayForm]], "Output",
 CellChangeTimes->{3.884011611725185*^9, 3.884011666290289*^9, 
  3.88401208331526*^9, 3.884012255724965*^9, 3.8840122923419867`*^9, 
  3.884012845296873*^9, 3.8840129661411753`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5a961c14-88a9-4316-8f67-66a464afdde2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"IrrepPlus", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ProductIrrep", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Irrep", "[", "A2", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A2", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A2", "]"}], "[", 
      RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"IrrepTimes", "[", 
    RowBox[{"3", ",", 
     RowBox[{"ProductIrrep", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Irrep", "[", "A2", "]"}], "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", "A2", "]"}], "[", 
        RowBox[{"1", ",", "0"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", "A2", "]"}], "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Algebra"}]}], "Input",
 CellChangeTimes->{{3.884011679640655*^9, 3.884011763547717*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"7b276194-24d6-4032-a47c-0884fbbb9bb6"],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox[
    RowBox[{
    "(", "\<\"(10)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{"3", 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(01)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm]}],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.884011694657383*^9, {3.884011756031642*^9, 3.884011763879632*^9}, 
   3.88401212031386*^9, 3.884012173230687*^9, 3.884012256612632*^9, 
   3.8840122934815397`*^9, {3.8840124826928864`*^9, 3.884012486043446*^9}, 
   3.884012739952858*^9, {3.884012795784227*^9, 3.884012874981475*^9}, 
   3.884012933400621*^9, 3.884012964623252*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"31f6cb21-2eb5-4fe6-9cf5-68c217fbf639"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubscriptBox["A", "2"], "\[Times]", 
   SubscriptBox["A", "2"], "\[Times]", 
   SubscriptBox["A", "2"]}],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.884011694657383*^9, {3.884011756031642*^9, 3.884011763879632*^9}, 
   3.88401212031386*^9, 3.884012173230687*^9, 3.884012256612632*^9, 
   3.8840122934815397`*^9, {3.8840124826928864`*^9, 3.884012486043446*^9}, 
   3.884012739952858*^9, {3.884012795784227*^9, 3.884012874981475*^9}, 
   3.884012933400621*^9, 3.884012964625716*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"6479d747-a092-43fc-95a2-4e1fde1334fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Algebra", "@", 
  RowBox[{"IrrepPlus", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", "D2", "]"}], "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "A2", "]"}], "[", 
     RowBox[{"0", ",", "1"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.884012508820093*^9, 3.884012535253869*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ca173b40-2b8f-4ccf-9a99-cbc04afc9e90"],

Cell[BoxData[
 TemplateBox[{
  "Algebra", "irrplusdiff", 
   "\"IrrepPlus contains irreps of different algebras \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[\\\"A\\\", \\\"2\\\"], \\\",\
\\\", SubscriptBox[\\\"D\\\", \\\"2\\\"]}], \\\"}\\\"}]\\).\"", 2, 3, 1, 
   20219588807880276487, "Local", "LieART`Algebra"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.884012876751007*^9, 3.884012892900065*^9}, {
  3.884012931675845*^9, 3.884012962265718*^9}},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"89f7a9f9-56b6-4c9b-aa44-364a1c9b113c"],

Cell[BoxData[
 RowBox[{"Algebra", "[", 
  TagBox[
   RowBox[{"\<\"(10)\"\>", "+", "\<\"(01)\"\>"}],
   DisplayForm], "]"}]], "Output",
 CellChangeTimes->{3.884012962284778*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2c0e1de0-9094-475a-b86f-ebfdae87d190"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Irrep / ProductIrrep and Weight / Product Weight", "Subsubsection",
 CellChangeTimes->{{3.884012997349537*^9, 3.884013011135583*^9}, {
  3.884013118784316*^9, 
  3.884013149715111*^9}},ExpressionUUID->"868981db-0d2f-462e-936c-\
2e7af404a16c"],

Cell[TextData[{
 StyleBox["Irrep", "CodeText"],
 "/",
 StyleBox["Weight", "CodeText"],
 " of ",
 StyleBox["ProductAlgebra", "CodeText"],
 " automatically expends to ",
 StyleBox["ProductIrrep", "CodeText"],
 "/",
 StyleBox["ProductWeight.", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884013023233449*^9, 3.88401305182836*^9}, {
  3.884013156472313*^9, 
  3.884013188552456*^9}},ExpressionUUID->"44040783-32a4-46aa-be33-\
5e6934d02587"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Irrep", "[", 
   RowBox[{"ProductAlgebra", "[", 
    RowBox[{"A1", ",", "A2", ",", "A1"}], "]"}], "]"}], "[", 
  RowBox[{"1", ",", "1", ",", "0", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.884013063225379*^9, 3.884013102142991*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b5a0fa3b-2043-461c-b957-eda786f8da88"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\<\"(1)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(2)\"\>", ")"}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.884013084912125*^9, 3.884013102371204*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"f82e110f-c3f7-4d11-b067-dcd98f67950e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"ProductIrrep", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", "1", "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", "2", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.884013084912125*^9, 3.884013102373934*^9}},
 CellLabel->
  "Out[9]//FullForm=",ExpressionUUID->"1c5e23b2-f160-42db-9a58-960c4287c0c3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["WeylDimensionFormula", "Subsubsection",
 CellChangeTimes->{{3.884012997349537*^9, 3.884013011135583*^9}, {
  3.884013118784316*^9, 3.884013149715111*^9}, {3.88401320706824*^9, 
  3.884013214301572*^9}},ExpressionUUID->"1f08ea82-80ed-4b46-b345-\
f17c7cbd86f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeylDimensionFormula", "[", 
   RowBox[{"ProductAlgebra", "[", 
    RowBox[{"A2", ",", "A2", ",", "A2"}], "]"}], "]"}], "[", 
  RowBox[{"x1", ",", "x2", ",", "y1", ",", "y2", ",", "z1", ",", "z2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WeylDimensionFormula", "[", "A2", "]"}], "[", 
   RowBox[{"x1", ",", "x2"}], "]"}], 
  RowBox[{
   RowBox[{"WeylDimensionFormula", "[", "A2", "]"}], "[", 
   RowBox[{"y1", ",", "y2"}], "]"}], 
  RowBox[{
   RowBox[{"WeylDimensionFormula", "[", "A2", "]"}], "[", 
   RowBox[{"z1", ",", "z2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "==", "%%"}]}], "Input",
 CellChangeTimes->{{3.8840132233881207`*^9, 3.884013307498105*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7fab4dd9-d7ed-44bc-a09d-e999a1a6e576"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "y1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "z1", "+", "z2"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8840132355048447`*^9, 3.8840133078880672`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"959bfddf-410d-47e7-98c4-98ebc4d5ba1e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "y1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "z1", "+", "z2"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8840132355048447`*^9, 3.884013307890596*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"03d78e57-447d-4f5b-ad84-6df4169e0fbe"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8840132355048447`*^9, 3.884013307892651*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"399291cf-4948-4820-98a5-de7b44f6d4cb"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Computation of characters", "Subsection",
 CellChangeTimes->{{3.884013332545327*^9, 3.884013344086482*^9}, {
  3.88401342795712*^9, 
  3.884013429317543*^9}},ExpressionUUID->"e8032ead-062f-4292-a277-\
68cd63f72543"],

Cell[TextData[{
 StyleBox["\[Chi][", "CodeText"],
 StyleBox["irrep", "CodeText",
  FontSlant->"Italic"],
 StyleBox["]", "CodeText"],
 " computes the \[OpenCurlyDoubleQuote]pure function\[CloseCurlyDoubleQuote] \
using ",
 StyleBox["WeightSystem[", "CodeText"],
 StyleBox["irrep", "CodeText",
  FontSlant->"Italic"],
 StyleBox["]", "CodeText"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "of LieART and saves it in the current session memory since the computation \
of the weights can be time consuming.\nThe variable ",
 StyleBox["$SaveCharacterDefinitions", "CodeText"],
 " can be modified if memory is a concern."
}], "Text",
 CellChangeTimes->{{3.884013023233449*^9, 3.88401305182836*^9}, {
  3.884013156472313*^9, 3.884013188552456*^9}, {3.8840134959102182`*^9, 
  3.884013683813949*^9}, {3.884013716423148*^9, 
  3.8840137515174093`*^9}},ExpressionUUID->"9871147f-6019-4d71-808c-\
fcc6cda8e7af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]", "[", 
  RowBox[{
   RowBox[{"Irrep", "[", "E6", "]"}], "[", 
   RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884013431735806*^9, 3.884013481911578*^9}, {
  3.884014037091353*^9, 3.884014044055287*^9}, {3.884014113066992*^9, 
  3.884014120375955*^9}},ExpressionUUID->"5ad76150-6782-4bb5-aa2f-\
79208a46e8e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "+", 
   FractionBox["#2", "#1"], "+", 
   FractionBox["#3", "#2"], "+", 
   FractionBox["#2", "#4"], "+", 
   FractionBox["#3", 
    RowBox[{"#1", " ", "#4"}]], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#3"}], 
    RowBox[{"#2", " ", "#4"}]], "+", 
   FractionBox["#4", "#3"], "+", 
   FractionBox["1", "#5"], "+", 
   FractionBox["#4", 
    RowBox[{"#1", " ", "#5"}]], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#4"}], 
    RowBox[{"#2", " ", "#5"}]], "+", 
   FractionBox[
    RowBox[{"#2", " ", "#4"}], 
    RowBox[{"#3", " ", "#5"}]], "+", 
   FractionBox["#5", "#1"], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#5"}], "#2"], "+", 
   FractionBox[
    RowBox[{"#2", " ", "#5"}], "#3"], "+", 
   FractionBox["#5", "#4"], "+", 
   FractionBox["#1", "#6"], "+", 
   FractionBox["#2", 
    RowBox[{"#1", " ", "#6"}]], "+", 
   FractionBox["#3", 
    RowBox[{"#2", " ", "#6"}]], "+", 
   FractionBox["#4", "#6"], "+", 
   FractionBox["#3", 
    RowBox[{"#5", " ", "#6"}]], "+", 
   FractionBox[
    RowBox[{"#3", " ", "#5"}], 
    RowBox[{"#4", " ", "#6"}]], "+", 
   FractionBox["#6", "#2"], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#6"}], "#3"], "+", 
   FractionBox[
    RowBox[{"#2", " ", "#6"}], 
    RowBox[{"#1", " ", "#3"}]], "+", 
   FractionBox[
    RowBox[{"#4", " ", "#6"}], "#3"], "+", 
   FractionBox["#6", "#5"], "+", 
   FractionBox[
    RowBox[{"#5", " ", "#6"}], "#4"]}], "&"}]], "Output",
 CellChangeTimes->{{3.884013435221586*^9, 3.884013482531439*^9}, {
   3.884014037581314*^9, 3.884014044430498*^9}, 3.884014115474679*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"5d79d71c-fcb0-4f14-89c4-366b587a24dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"Irrep", "[", "E6", "]"}], "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
   "]"}], "[", 
  RowBox[{"z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8840139520136833`*^9, 3.884013960416803*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"dd26873a-248e-479a-8823-de688f87fd9e"],

Cell[BoxData[
 RowBox[{"z1", "+", 
  FractionBox["z2", "z1"], "+", 
  FractionBox["z3", "z2"], "+", 
  FractionBox["z2", "z4"], "+", 
  FractionBox["z3", 
   RowBox[{"z1", " ", "z4"}]], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z3"}], 
   RowBox[{"z2", " ", "z4"}]], "+", 
  FractionBox["z4", "z3"], "+", 
  FractionBox["1", "z5"], "+", 
  FractionBox["z4", 
   RowBox[{"z1", " ", "z5"}]], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z4"}], 
   RowBox[{"z2", " ", "z5"}]], "+", 
  FractionBox[
   RowBox[{"z2", " ", "z4"}], 
   RowBox[{"z3", " ", "z5"}]], "+", 
  FractionBox["z5", "z1"], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z5"}], "z2"], "+", 
  FractionBox[
   RowBox[{"z2", " ", "z5"}], "z3"], "+", 
  FractionBox["z5", "z4"], "+", 
  FractionBox["z1", "z6"], "+", 
  FractionBox["z2", 
   RowBox[{"z1", " ", "z6"}]], "+", 
  FractionBox["z3", 
   RowBox[{"z2", " ", "z6"}]], "+", 
  FractionBox["z4", "z6"], "+", 
  FractionBox["z3", 
   RowBox[{"z5", " ", "z6"}]], "+", 
  FractionBox[
   RowBox[{"z3", " ", "z5"}], 
   RowBox[{"z4", " ", "z6"}]], "+", 
  FractionBox["z6", "z2"], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z6"}], "z3"], "+", 
  FractionBox[
   RowBox[{"z2", " ", "z6"}], 
   RowBox[{"z1", " ", "z3"}]], "+", 
  FractionBox[
   RowBox[{"z4", " ", "z6"}], "z3"], "+", 
  FractionBox["z6", "z5"], "+", 
  FractionBox[
   RowBox[{"z5", " ", "z6"}], "z4"]}]], "Output",
 CellChangeTimes->{3.8840139605396233`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"e0543beb-d823-4b50-85e0-751c72710af3"]
}, Open  ]],

Cell[TextData[{
 "By default, ",
 StyleBox["Algebra[A][n]", "CodeText"],
 " algebra family is used if a list of Dynkin labels is provided."
}], "Text",
 CellChangeTimes->{{3.8840141323679323`*^9, 
  3.884014193564559*^9}},ExpressionUUID->"8ea1185e-eb63-49e4-857b-\
f52cb60aa19f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.884014206789999*^9, 3.884014211179237*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"d5ed359c-86ac-4467-a781-b8c056d5dc3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "+", 
   FractionBox["#2", "#1"], "+", 
   FractionBox["1", "#3"], "+", 
   FractionBox["#3", "#2"]}], "&"}]], "Output",
 CellChangeTimes->{3.8840142115932827`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"0a7614f7-3b92-4956-8143-a0fc68c8820e"]
}, Open  ]],

Cell[TextData[{
 "There are different ways of calling ",
 StyleBox["\[Chi]", "CodeText"],
 ". Additionally, ",
 StyleBox["ProductAlgebra", "CodeText"],
 " also is compatible."
}], "Text",
 CellChangeTimes->{{3.8840142274545383`*^9, 
  3.884014285918055*^9}},ExpressionUUID->"22b1a6cb-7df2-4bb2-a7f1-\
77555bef841f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{"E6", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "==", 
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"Irrep", "[", "E6", "]"}], "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"e38fec6f-2eda-49a9-b22c-13260803b2f7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.884014123971818*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"ee347e0c-a2e5-4c20-a76b-0756e69ee072"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"ProductAlgebra", "[", 
     RowBox[{"A2", ",", "B2", ",", "C2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}], "==", 
  RowBox[{"\[Chi]", "[", 
   RowBox[{"ProductIrrep", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "B", "]"}], "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "C", "]"}], "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "]"}], "]"}], "==", 
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A2", ",", "B2", ",", "C2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8840142992751303`*^9, 3.884014400340033*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"8c353f3d-18f9-4145-8312-6effb0ccd62a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.88401437786381*^9, 3.884014401927328*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"caeba353-0d33-4415-b754-7eeb4de23f0f"]
}, Open  ]],

Cell[TextData[{
 "More importantly, ",
 StyleBox["IrrepPlus", "CodeText"],
 " and ",
 StyleBox["IrrepTimes", "CodeText"],
 " automatically expand and give the correct result in terms of character sum \
and multiplication."
}], "Text",
 CellChangeTimes->{{3.8840142274545383`*^9, 3.884014285918055*^9}, {
  3.884014446437587*^9, 
  3.88401452909198*^9}},ExpressionUUID->"f4078465-72c1-40f0-9a54-\
dd0e81779ebf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]", "[", 
  RowBox[{"IrrepPlus", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProductIrrep", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Irrep", "[", "A2", "]"}], "[", 
       RowBox[{"1", ",", "0"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "A2", "]"}], "[", 
       RowBox[{"1", ",", "0"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "A2", "]"}], "[", 
       RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"IrrepTimes", "[", 
     RowBox[{"3", ",", 
      RowBox[{"ProductIrrep", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Irrep", "[", "A2", "]"}], "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "A2", "]"}], "[", 
         RowBox[{"1", ",", "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "A2", "]"}], "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.884014425104817*^9, 3.884014432679089*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"6ced0bc0-05e4-46fc-927a-a0d6506207af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "#1"], "+", 
      FractionBox["#1", "#2"], "+", "#2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"#3", "+", 
      FractionBox["1", "#4"], "+", 
      FractionBox["#4", "#3"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "#5"], "+", 
      FractionBox["#5", "#6"], "+", "#6"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#1", "+", 
      FractionBox["1", "#2"], "+", 
      FractionBox["#2", "#1"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"#3", "+", 
      FractionBox["1", "#4"], "+", 
      FractionBox["#4", "#3"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "#5"], "+", 
      FractionBox["#5", "#6"], "+", "#6"}], ")"}]}]}], "&"}]], "Output",
 CellChangeTimes->{3.884014433141383*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"98f90d3c-832f-4dd3-aec0-ba489849762a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Character sum decomposition", "Subsection",
 CellChangeTimes->{{3.884013332545327*^9, 3.884013344086482*^9}, {
  3.88401342795712*^9, 3.884013429317543*^9}, {3.88401458263761*^9, 
  3.884014603647668*^9}},ExpressionUUID->"c85958a0-425b-4cc6-b012-\
b2ae8d4a1fb3"],

Cell[TextData[{
 "Assume a random ansatz for a product algebra of three ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "abccd0e4-0f98-4452-a9cc-36fe8807ad3b"],
 " algebras"
}], "Text",
 CellChangeTimes->{{3.8840142274545383`*^9, 3.884014285918055*^9}, {
  3.884014616646057*^9, 3.88401462862405*^9}, {3.884014677494151*^9, 
  3.884014713596581*^9}},ExpressionUUID->"06ae731a-70be-4dca-a85f-\
54f58ed8d30a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ProductAlgebra", "[", 
    RowBox[{"A2", ",", "A2", ",", "A2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"irrepSampleList", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", 
      RowBox[{"Rank", "[", "g", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"irrepList", "=", 
  RowBox[{
   RowBox[{"Irrep", "[", "g", "]"}], "@@@", "irrepSampleList"}]}]}], "Input",
 CellChangeTimes->{{3.88401463255737*^9, 3.884014675203121*^9}, {
  3.884014722465705*^9, 3.8840148323384523`*^9}, {3.8840153583371058`*^9, 
  3.884015389134953*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"b31750e3-a27f-48a7-8ff0-8d6bc3bdf9ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0", ",", "2", ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "2", ",", "3", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2", ",", "1", ",", "3", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3", ",", "3", ",", "3", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.884014664723146*^9, 3.8840146754032907`*^9}, {
  3.884014723175087*^9, 3.884014728278356*^9}, {3.884014777200972*^9, 
  3.8840148325646753`*^9}, {3.884015359029847*^9, 3.88401538930338*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"1ca44523-fa3e-49e8-87c3-5489985d5704"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
    "(", "\<\"(03)\"\>", ",", "\<\"(02)\"\>", ",", "\<\"(01)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(30)\"\>", ",", "\<\"(23)\"\>", ",", "\<\"(11)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(12)\"\>", ",", "\<\"(32)\"\>", ",", "\<\"(00)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(02)\"\>", ",", "\<\"(21)\"\>", ",", "\<\"(32)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(11)\"\>", ",", "\<\"(33)\"\>", ",", "\<\"(32)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(23)\"\>", ",", "\<\"(00)\"\>", ",", "\<\"(10)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(11)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(23)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(11)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(10)\"\>", ")"}],
    DisplayForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.884014664723146*^9, 3.8840146754032907`*^9}, {
  3.884014723175087*^9, 3.884014728278356*^9}, {3.884014777200972*^9, 
  3.8840148325646753`*^9}, {3.884015359029847*^9, 3.88401538930585*^9}},
 CellLabel->
  "Out[131]=",ExpressionUUID->"84813759-6e65-45d4-a9a0-14548c2506aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"irrepAnsatz", "=", 
  RowBox[{"IrrepPlus", "@@", 
   RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rep", ",", "i"}], "}"}], ",", 
       RowBox[{"IrrepTimes", "[", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"First", "@", "i"}], "]"}], ",", "rep"}], "]"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "irrepList"}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.884014882883583*^9, 3.884015039033518*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"6604e00d-ae31-458c-ac2b-a190f3f8cc45"],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "1", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(03)\"\>", ",", "\<\"(02)\"\>", ",", "\<\"(01)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "2", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(30)\"\>", ",", "\<\"(23)\"\>", ",", "\<\"(11)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "3", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(12)\"\>", ",", "\<\"(32)\"\>", ",", "\<\"(00)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(02)\"\>", ",", "\<\"(21)\"\>", ",", "\<\"(32)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "5", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(11)\"\>", ",", "\<\"(33)\"\>", ",", "\<\"(32)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "6", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(23)\"\>", ",", "\<\"(00)\"\>", ",", "\<\"(10)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "7", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(11)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(23)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     RowBox[{"a", "[", "8", "]"}], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(11)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(10)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm]}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.884014887494569*^9, 3.884014893802636*^9}, {
  3.884015008121768*^9, 3.88401503969662*^9}, {3.884015360817031*^9, 
  3.884015390890664*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"f21ad6b1-f2c5-456a-8384-0438e08adc63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ansatz", "=", 
  RowBox[{"Expand", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "[", "irrepAnsatz", "]"}], "[", 
    RowBox[{"z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
    "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8840150441394587`*^9, 3.884015080348651*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"3be6b673-e4c4-4c48-80ed-d802b4b9eff6"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       FractionBox[
        RowBox[{"a", "[", "1", "]"}], 
        RowBox[{
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"a", "[", "1", "]"}], 
        RowBox[{
          SuperscriptBox["z1", "3"], " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z1", "3"], " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z2", "3"], " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z2", "2"], " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"a", "[", "1", "]"}], 
        RowBox[{"z1", " ", "z2", " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z1", "2"], " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{"z2", " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z2", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z1", "2"], " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", "z2", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z2", "2"], " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{"z1", " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z2", "3"], " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], "z5"], "+", 
       FractionBox[
        RowBox[{"z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z1", "3"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z1", "3"], " ", "z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z2", "3"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", "z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z2", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{"z1", " ", "z2", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z1", "2"], " ", "z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{"z2", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z2", " ", "z3", " ", 
          RowBox[{"a", "[", "1", "]"}]}], 
        RowBox[{
          SuperscriptBox["z1", "2"], " ", "z5"}]], "+", 
       TemplateBox[{"13898"}, "OutputSizeLimit`Skeleton"], "+", 
       FractionBox[
        RowBox[{"z2", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{
          SuperscriptBox["z1", "2"], " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", "z2", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z2", "2"], " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z1", " ", 
          SuperscriptBox["z3", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"2", " ", "z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], "z5"], "+", 
       FractionBox[
        RowBox[{"z1", " ", "z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{
          SuperscriptBox["z2", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z1", " ", "z2", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z1", "2"], " ", "z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z2", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z2", " ", "z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{
          SuperscriptBox["z1", "2"], " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", "z2", " ", "z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], "z5"], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z2", "2"], " ", "z3", " ", 
          SuperscriptBox["z4", "2"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z1", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z3", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", 
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{
          SuperscriptBox["z2", "2"], " ", "z3", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z1", " ", "z2", " ", "z3", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z1", "2"], " ", 
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z2", " ", "z3", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z2", " ", 
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{
          SuperscriptBox["z1", "2"], " ", "z3", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{"z1", " ", "z2", " ", 
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z3", " ", "z5"}]], "+", 
       FractionBox[
        RowBox[{
          SuperscriptBox["z2", "2"], " ", 
          SuperscriptBox["z4", "3"], " ", "z6", " ", 
          RowBox[{"a", "[", "8", "]"}]}], 
        RowBox[{"z1", " ", "z3", " ", "z5"}]]}], Short[#, 8]& ], "line" -> 
   133, "sessionID" -> 20219588807880276487, "byteCount" -> 6546896, "size" -> 
   8, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.8840150808013163`*^9, {3.884015368999968*^9, 3.884015392804146*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"b25960d6-fdde-4e78-baf1-70cfce122c12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomp", "=", 
  RowBox[{
   RowBox[{"CharacterDecomposition", "[", "g", "]"}], "[", 
   RowBox[{"ansatz", ",", 
    RowBox[{"{", 
     RowBox[{"z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8840151014955482`*^9, 3.8840151538422537`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"31d52b63-1799-4455-82b5-86e505d404c9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(02)\"\>", ",", "\<\"(21)\"\>", ",", "\<\"(32)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "4", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(03)\"\>", ",", "\<\"(02)\"\>", ",", "\<\"(01)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "1", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(23)\"\>", ",", "\<\"(00)\"\>", ",", "\<\"(10)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "6", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(30)\"\>", ",", "\<\"(23)\"\>", ",", "\<\"(11)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "2", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(11)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(10)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "8", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(11)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(23)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "7", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(11)\"\>", ",", "\<\"(33)\"\>", ",", "\<\"(32)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "5", "]"}]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(12)\"\>", ",", "\<\"(32)\"\>", ",", "\<\"(00)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    RowBox[{"a", "[", "3", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8840151216155653`*^9, 3.884015145434812*^9}, {
  3.884015372442933*^9, 3.884015396657662*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"9b562023-5feb-4a1a-8792-361007ab4555"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"KeyValueMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#2", " ", 
        RowBox[{
         RowBox[{"\[Chi]", "[", "#1", "]"}], "[", 
         RowBox[{
         "z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
         "]"}]}], "&"}], ",", "decomp"}], "]"}]}], "-", "ansatz"}], "//", 
  "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.884015270791093*^9, 3.884015350220532*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"18d75325-db77-4f5c-ae4f-ebce898ede3c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8840153097916327`*^9, 3.8840153986157207`*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"fa528121-1898-45ee-8c28-5275662071f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Highest weights", "Subsection",
 CellChangeTimes->{{3.884013332545327*^9, 3.884013344086482*^9}, {
  3.88401342795712*^9, 3.884013429317543*^9}, {3.88401458263761*^9, 
  3.884014603647668*^9}, {3.8840154239375973`*^9, 
  3.8840154317888393`*^9}},ExpressionUUID->"17697f98-b914-4fc1-896b-\
ef20324aa0e8"],

Cell["\<\
For the computation of the decomposition it is necessary to order the \
dominant weights and extract the highest weights from a given expression.\
\>", "Text",
 CellChangeTimes->{{3.884015467337222*^9, 
  3.884015524667067*^9}},ExpressionUUID->"29abf6a9-19fa-423b-8991-\
45fdec7e7437"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "B3"}], ";"}], "\n", 
 RowBox[{"irrepSampleList", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"Rank", "[", "g", "]"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"irrepList", "=", 
   RowBox[{
    RowBox[{"Irrep", "[", "g", "]"}], "@@@", "irrepSampleList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"WeightSystem", "/@", "irrepList"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.884015521853207*^9, 3.884015548449753*^9}, {
   3.884015606029909*^9, 3.884015687673534*^9}, 3.884015745475643*^9, {
   3.884015837624578*^9, 3.884015846781291*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"936a9579-9d30-4bb9-bc32-276b255144fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8840155401950903`*^9, 3.8840155548924303`*^9}, {
   3.8840156359715567`*^9, 3.884015690623682*^9}, 3.88401574572849*^9, {
   3.8840158378888083`*^9, 3.884015848867319*^9}, 3.884015884507325*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"dccd830f-334f-47ae-a711-3355fcb38686"]
}, Open  ]],

Cell[TextData[{
 "The highest weights can be computed as the  root nodes of a relation graph. \
We compute the well-known weak ordering using ",
 StyleBox["DominantWeightOrder", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884015467337222*^9, 3.884015524667067*^9}, {
  3.88401587047622*^9, 
  3.884015961224642*^9}},ExpressionUUID->"97a453d2-9e9d-47d1-86eb-\
159b6c14ae4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelationGraph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DominantWeightOrder", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], ">", "0"}], " ", "&"}], ",", 
   RowBox[{"Union", "@", 
    RowBox[{"DominantWeights", "@", "weightList"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884015783817086*^9, 3.8840158285849*^9}, 
   3.884015888820827*^9, {3.884015948673883*^9, 3.884015952273016*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"1ab32007-7b29-48f3-ad61-739d5206e474"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       LieART`Weight[LieART`B][0, 0, 0], 
       LieART`Weight[LieART`B][0, 0, 1], 
       LieART`Weight[LieART`B][0, 0, 2], 
       LieART`Weight[LieART`B][0, 0, 3], 
       LieART`Weight[LieART`B][0, 0, 4], 
       LieART`Weight[LieART`B][0, 1, 0], 
       LieART`Weight[LieART`B][0, 1, 1], 
       LieART`Weight[LieART`B][0, 1, 2], 
       LieART`Weight[LieART`B][0, 2, 0], 
       LieART`Weight[LieART`B][0, 3, 0], 
       LieART`Weight[LieART`B][1, 0, 0], 
       LieART`Weight[LieART`B][1, 0, 1], 
       LieART`Weight[LieART`B][1, 0, 2], 
       LieART`Weight[LieART`B][1, 1, 0], 
       LieART`Weight[LieART`B][1, 1, 1], 
       LieART`Weight[LieART`B][1, 1, 2], 
       LieART`Weight[LieART`B][1, 2, 0], 
       LieART`Weight[LieART`B][2, 0, 0], 
       LieART`Weight[LieART`B][2, 0, 1], 
       LieART`Weight[LieART`B][2, 0, 2], 
       LieART`Weight[LieART`B][2, 1, 0], 
       LieART`Weight[LieART`B][2, 2, 0], 
       LieART`Weight[LieART`B][3, 0, 0], 
       LieART`Weight[LieART`B][3, 0, 2], 
       LieART`Weight[LieART`B][3, 1, 0], 
       LieART`Weight[LieART`B][4, 0, 0]}, {
       SparseArray[
       Automatic, {26, 26}, 0, {
        1, {{0, 19, 24, 39, 40, 44, 61, 64, 72, 83, 84, 102, 106, 118, 132, 
          132, 135, 140, 155, 156, 162, 170, 170, 179, 180, 182, 185}, {{3}, {
          5}, {6}, {8}, {9}, {10}, {11}, {13}, {14}, {16}, {17}, {18}, {20}, {
          21}, {22}, {23}, {24}, {25}, {26}, {4}, {7}, {12}, {15}, {19}, {
          5}, {8}, {9}, {10}, {13}, {14}, {16}, {17}, {20}, {21}, {22}, {
          23}, {24}, {25}, {26}, {15}, {10}, {16}, {22}, {24}, {3}, {5}, {
          8}, {9}, {10}, {13}, {14}, {16}, {17}, {18}, {20}, {21}, {22}, {
          23}, {24}, {25}, {26}, {4}, {15}, {19}, {5}, {10}, {16}, {17}, {
          20}, {22}, {24}, {25}, {5}, {8}, {10}, {16}, {17}, {20}, {21}, {
          22}, {24}, {25}, {26}, {22}, {3}, {5}, {6}, {8}, {9}, {10}, {13}, {
          14}, {16}, {17}, {18}, {20}, {21}, {22}, {23}, {24}, {25}, {26}, {
          4}, {7}, {15}, {19}, {5}, {8}, {9}, {10}, {16}, {17}, {20}, {21}, {
          22}, {24}, {25}, {26}, {5}, {8}, {9}, {10}, {13}, {16}, {17}, {
          20}, {21}, {22}, {23}, {24}, {25}, {26}, {10}, {22}, {24}, {10}, {
          16}, {22}, {24}, {25}, {5}, {8}, {9}, {10}, {13}, {14}, {16}, {
          17}, {20}, {21}, {22}, {23}, {24}, {25}, {26}, {15}, {10}, {16}, {
          17}, {22}, {24}, {25}, {10}, {16}, {17}, {20}, {22}, {24}, {25}, {
          26}, {10}, {16}, {17}, {20}, {21}, {22}, {24}, {25}, {26}, {22}, {
          22}, {24}, {22}, {24}, {25}}}, Pattern}], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxMW3lcjF8Xb9dGSWidZqammqZp2jctp33fkyJJIrJFlrJWlpIiSooo/Wwh
RLYKB0m0WAqpJKUFhZKE8D55eeb5az7nc+8953vOvfdszx1GxHL/+UICAgLA
FBAY+42fcTZgtoM7uN7i5gsJKKGr/tmMXWfVYdg34qtggi2+SOxLflhvD0fb
s30EBdSxyWg/8cuA9dolPwTADi/YKJwUSLD8O87FffkPZNuE4S/NQPP6AuJX
6//zEfD2kinEfIu/4xw8FiAbSPD5S7Oxa82ql+n77cE/puaEQIIBfgul4qNh
zoriP/j+Lx/wS/2HAOL373otXMGulm3b4v6XZmGc4sGx37/y7bDoi2Qg8fuX
vz7OLhqj/+nHQ78Q7q8vST6kvleFMsZ+SX3dgkUIvK6kvjs8RIn17qQ+K9pE
/4z/n78hhsiPzfci9VvRSh03wFwTzdrlvR4kHomFwsS4D8m/RHiB54EYV1L/
bZ06fb05jqR9i4MXvxqqsSfHDXlnl9TaTiPHoydVG3TIGZH6ROoXbg8S1iPt
U1poeXp9KZu0X2l43h97/cNbuS5zTC9Sv+KMqsRRmhMp73pm0qlMAUeSvl0T
HHHzkTUpX1Lk++oaJTNSfkdsV9lAlSEpP/pn3ZidSPnfr9dQaDYuUinVrzB3
JvmvKDq8IirWnuS/wqS2v/swkPzdLbMYFeOsSP4RCc8IflYk/449e+JSF1iQ
/Cp/KeRmZ/JIfkM9I3VsaxbJb2tdkfRxLzrJz9VW9dWPiSokv7/3hsSbEsWj
0Bw8WXLXP1WHRu6nyLOuxkItdfK8Ddnd/HX6J4fc/yLbHbp7PV1IfPEz13oM
nXYg8X1jOveL/rQj8cnN3kfoa0PiWxE20JOR40Guf/vxe41fuxe5PvL2lN/r
bvmS6y9c0ZigY25Lzu9425Oq+sSYP59RIvxrKYecr7GK1ij4VIOUF3mksTl2
MYNvjwTjMT6kPQJn7vvjL/7ZQyRJ35fQm7TH7eQx/2FC2oOxWdLMN8qOxFNo
52i71sucxJNlNRCjUsIj8TQu220h667Nx4PXuPkBGiSeLNUcinw2yi/f98cf
/cMTvXjMH5mTeHZMGt00LdOTf94WbVtXxfAh5U88bF9VvMqHHIcdRUEfcvzI
cfFCuPdGPoDEd/LO8SulNoEkvg2bx+kIhAeS+BRC5KfMMw0k8WUM6My7zggk
8U28rnk1Z703KU9236cv3my+vIS2m5u+n/Un5YVzZjg4fA8g5YlLiekI0Pny
Ks79fF7wKYCUVxsaf/a5eADJX19ZTvzR9UCS/8Kd74zisqaT/KsdXr5nCAWR
/Nu7xAn+QST/kYa3o18Ugkj+jWdm+USIB5H66K6ypIfcnU7au9qnfYu1y3Ry
/9+Ip9j5uAeS94F+sflqzhJ/0l+6bbpYdHe7Fx/v0A3zkhm+JF5f7/45HT1+
JN7zLsHqcbF8e+jTRHQECgJIvIHSSxkhtr4kv8jT9fBb2p/k17t85crgTfz9
lHfOGH9oK38/5V8R+9nOt++qAk7nrxv8/Ryd+aak8zh/P7V7LnvlSgSS+osk
Gidtigwg9d9w6eAX7xY/Uv/zx19p6130I/G19oq1Hy8PIPGVKu6cNvw+kMTX
NNrcPuX0dBJfuAOxP+3TSXyh1UYzCh9NJ/H5Os/XsCqbTuKTV95Yc9uevz+l
jqZn9mQFkvhEUm+dT3vBt5dsVs1yg2S+vU4+yelV/8i3V8qCn+9nTuLjSUkg
8ITz8ZgvkYzscebjMa681yPP5ePRb10dtj1ShYz3vn/97b98ovrTwUcTf7DI
cYWYsirVRdokfXVS/hhfcr75rEN8mojn4sG6nMfCDHL+o1DeH//1b/5ebjbh
X61J/BdkGk7w8xctLMsc2ycjEn9zJZXm4EuLGiIfAXL93m2txLg1uX4w/MEJ
vv9h45dJY/Ptyfleif0BBA5+fDw7hmcaOV5m8JhYb8Yfd/pzT0h+QylZPnx/
y8Ek/TF/q0/ub9K4/U4D7gbk/n6vT/iarGRKnr/0c2P5HB/PO50x+bYknWQ3
Fl+nkfJn0sfWGZPy7YPG9NMn5fvvHpNvRMoXGlKg5IM8fHxqTJ4dyV/HpI1Y
b0PyX3n2AUUeG+Xyqfbj4PcPE0/y7cvFu/+N8XMg+c0uHcsX7Uh+RVMn/skH
//Gzs5Mh8i8Hkt/GJWP5pAu5/lbxN2I/XMn1E5+PrXcj11+w20/Yx5Kc/93+
IYHPlJzvH3OfYg/ivDuMxSMu//5Vj8VHLol/KHiesU0Vj7SPfaiK57mNxuT+
yIkd6uwynUb6x/u7CbzC/Pz32uwfBF4PUv7PbWPni2+PpQ19AXz9tXD80YmU
fJiN9y0IeyDfHvEVY/mrI4nvUC2V5qG1YGZC+AxnEt+KeYT9tziS8u7vHSDs
70TK23dNjuDvRMobv2aMdiHl+X0l8mESPxfjf4zlxx6kvGu3FC18p3uQ/L+p
/grg59taqNg5ln97k/y/pY7x8yH5rwsYi/9WJL+V1q/fS3nZkPiTeqZSzhMP
m5crUeodHhY+v2OZJGVNzl9UUlmxJhfI/dCRGeNvQ87/piT1p975N//Crp6W
tkf/8h8in7v46oTCbgNSH/lcz08hk3ikPqvU9v/xX//0Sf1Gve8cTH1Vnx2U
b8HnZz5TRq/PmOS3cnst5X5q4SmVsfUmJD9rf33T25b8/PJI+tj+8e/jqYxX
xHxbcr3Q5Am85euNyfmSl1Xo4K1Pzs9qV/98L1SXnK8ReMCHn38R+dissfOv
TuKv3H8mYkBEi9zvQIGh614OuqT99mo2q/XdNSTtZ1FKrTfV8fFVKs3C+N57
BH43cjx6ZKLSmTnmJL33Qkh49Qsjcn5Es5HUlhF9Eq+j5Fj+yCHxNm4eq4dY
JN7bemP+y4DEW/Z5jDYj8TIzDJ2kWy1JeeumzVHS/G7Clze9jhIvtPBoXybF
X7Nx5h9/Z0rKS+oa82/TSHlKNVNUh6Za8fnbjvlnM5J/c1DTCf551ULJkTF8
tiR/UekJgfz4wsF9JvcJezmT/OabUWkWco2HiPvlQvJb9Ggi5b4S5zErtHZP
tgG5vnK/PbfIhUOuj8xjnIiT1iLXR9YeoOw/G6sVOJT6gYOlCySnKWiok/qW
Vu0YXm2hTdr3gdo47e8H9MnzYCg9L6Uo2oy8f6/7if0X5u//XPdqCs1CxVff
CX3cSTyDQ6sE3k+3JudL/vHn5uR8w8E6yn0h7uOW/RT/zUaRkizK/STqHXvH
+MJEHRJ/YTA1/vHwJ3PMHwCJvyMAGj3ybEj50R5j+2lByncvfEaJd0Q8FFWk
+Cci3jYqUGgOhtAJ/4fOpPyXt6k0DxXjx+63EylvtgiVJuJHxSBhH2dS3vTu
iZT1bBQ8IkeJfxy8evagD9nvIfIr/1hqv4eLzCsKlHqLh0+a1n8OuDWN1P9d
70SKPybm906lnFce+n+eSKGJ/CVsCuW+cdG9eYy/KTk/2njGQdGFliT/J8u+
mP/aYUuejwcDEyn+mYtuZ6Qo/SiiHl0uSdD25HovORHKeefitX4xCk3o06FE
4cdBQxUlCl4OJvIkKPeNi0/jJCk0D3dESf2h/8kL6RsfyO9vcXD+XAlKvsLF
iYeoNA8vBcpQ8HNwx5dxlHjOxdWNEyg0B90DFCj25qCEqgRFHhedrkpRaB5K
/tlPW36/asm4eeLBdqQ9jxRP+GOvf/wYwmKUfGrMvlSah+NPj+F1IvkdmitD
OV/E+pvClPPFRcaasXzDjVz/Ol2IGPck569wFLtpE/Xv/DJQUUCk5ALbmaSd
Nh9qnBj2Lx9Rx3QHIh8S5ucnElVj+ck//FpYd2YiBS8bcxkylHyHyA+VvwxG
tvH5M06MxR/+fYrvoNIsTDf8GMC3vxZeXyBHya/Y+Lbwv4iCaDeS34vfY/HL
leT3WqaaQrNw35KxfNaR5MfY3C/vZOTK13c7a0Q+zIVcv+eP/+PnswY+hL6k
fC3c9nEMjyOJZ0fA//fnn77bzopSxrk4d5BK87B/RPoP/W8/GZ8Twr0f8/FM
HIvHwnx9/G5RaRbaeVL7tww0mEyl1dFpd5FRy04XPr/nRHwS5ser12lUmoWr
q4j6Cfj6mYyTo+wfG+cvlaHgJ/QbEqXsBxdZF8QoNA9f0Kn5NQMX8ai0OiYe
qabkGyzceGXMvvz9mb1FjmJPNnLHzjvwz3vJgChlnIuC8c/d/J09SHkDdziV
qdb8fl7cgym/1yXy+3lxM98tbFvkT8pvVRPWESjwJ+Ub3xSi0Gx8c4ZKc9Ct
/5xgfq4nyb8RCf52fP5NOdGrjLr9SP6VscR6Op+/55zv2Vsn8/k7HtVZUjOO
36+I+dLz1HcBv1+x1Uf6edJsfn9A4KI4gYffH8jwltGZtZPfH9D/7WpybCW/
P/Bp3b6H0xsp/ZS2jMW+mvx+hed161E/hQDyPOr+6mr+IeBH+qv4jawI2c98
+366SegryNe3gFayKOUoX9+cA4S+7X4kviL2aYVXb/j9wZFnR4L0t/H7Tzk1
wW9K9Pn9pzPvRHQEwvn9pw2nhSk0GyGBSnNQOyJ1s9ECf1I/gRZBinwe6k9s
/2Gg7Uvq92bVr1Oy1/n9sARX7cSP7vz+oHGAlUXeZT6e3nhRgh8fj9XJkFN6
Z/h4NOKFKf0yDvYKxsoUt/PxyEpOEb222J/Ec0035v1Agjcpv31S99oiJt8e
Kc5+NoYf+Ocz5zJhDzpffmS2MIVmo4oldZyDCt//8CX7M+LcIh/+9x1AbbE8
Pk3kHwo7xvIxdXJcZ88DSv+GjXJHHlDyOQ5+H6DGQzZ+P/OA0l9hY2HWA0r9
RNSPp8fmG5P2kIuh0jwsY5wMOUDkb2T+8YefJclv8C6VPweblaZQ8hciv38r
T8n3ifrzqwIlv2Bj2dKplHqUg5cyJSjxn4v9O6Up+QUbL3VMoOQLHJzIG8vn
XMnxB4o1lHqDjREXqd9jiHxh+ph8Q76+1lSaqIcfCfodyTIj9dWxevdSKt+a
vG/padKUfIKNT64pUvTjoOgxCUr+wMX7i6k0D+daSP6Jx//4vxSdSBln4+QI
GUo/gYPf1EQp+nFR0ZtKE/nD5YmU73dsLIkVofQXiPypnsh/kd+vKOLKUfw1
Gwc2jNH8fsXqV58D+PkLEd87qeNsnNv5NYCfv2jhxHdj9RS/nyRxdSIlv2Gj
wXw5Cl4OmkwWocjn4sZEcYq+PGS/Ef5D/7PP/ezhAH5+qoXx4nKU75ds3BhD
pTl4V0SEwo+LP1eOUvo1PBRUI/AjH7/dmjG8fPvl5slR8HPwWKAIRX8urrAi
6i3k11srzk2k2JuNfiYiFH4c9DMYk8/vX/k9m0jpB7GxIm8c4Z/4/fetAuMX
vFvH77/Xbi24YRLJ77/3HYrdmFAUQOLJUXSvvzme33/vvaG+f2ARv/++p37w
6NXv3uT5nav/k8DjScoT3Po7gJ9/amGi3pj9+N977R5Sv+dycK7y2Lg3Kf/t
T2FKf4qHbmFX1Evc+d+DxXMECP/HjzeRu78PL/DwI/mPVozFbz+S/8kXRHwI
9yX5X+0iaLovyX/g0q8APj4tVPwlTMFDxNe31PkczL3pKeAoxv8en6j3/+/l
//Bx90n8yY/+0d+YYObS60TOPyY2/k++9W9cvoTKn4WRl6k0kT9Ypx/+aepL
4tFtouozlp+M9fe8yfUv5AUo9tPCuUtFKPZm47crghT9WPjWQYBCE/GufLX+
5wh+fPe9KUixJ4EHm4a8nvDt7dpBzXc4SP89Fo/59m7/Nraeb+8i/2aOjYcX
qf/Ex4u/zVzgScrbEEs/toLBl986Y0xfvnzpIZeMoV18+QmHqfkHBx1/UOVx
0fMz1V48rFxKHWfhVVMqrYWuxWKh3Dt8e/s+EKKcNw6mPaHuD3FfjlH5szCl
lkprIZ2nVvFlI5+fdrEQxT4cHEij9l9Z+K2aSmvhNXVBCs3GDcbPzgvX8L+3
vblI3Hc6Pz9UgLWj74T4+WFBmVx341v+fY+TMnjeFs3PD+W/JqVr3OLf9/al
k7oNovzJ/ZGdP25BmKYvv569LkQ5TywM2UultTDl7o+OYS1+PiM+Qugbzs+H
pZFKE/drE5Xm4NCwIMXeXFzVQT1PhD+4fjL+0zhvEl9gW8rqd6f58gpCiXyp
nS8vw0mEQrORfkWIQhP7OUw9X1zc0EileWiuQJXPQo1TVFoLazfGPtoxjn8e
464LUdZz0ElTlOLvifPfsPWF1wf+9wDFKFFK/OKhVQdVfx5a7Ln/sv4+X98j
xqwd8a/dyf142UJ9f8PDSxXU9zREvfnHn3qS49cChCnxnfC3jqKU+MLDeLGw
mMrn/PUht4Qp40T+4SNK6T/wcMd9YUp846L2V6q/4GJaE5Um4uVn/6866T4k
/x27OpPEX3uQ+pSsoH7P4OJAFxUvD2/5ZXhVxrqR69kFwpT3RFw0cKC+L+Jh
yHohSvzhYOKf+8Wfv0JahNIv4aGdeZn/HBl3Pj5nKn8i/zknTJnPRYuP1O8x
xH45Uu3NwaKnVJqLtwqFKPM5WOsvTKk3OJjh87bFx5kfj0fsdHwVy/n1xCi7
YPvVH/z65pu3RKdWpxc/HolT4ycH7Z5TaS661VP1J/avW7Enqpivb2gD1R8S
+UYM1R9x0W4zlSbsK0mNl0Q8MrVauL/SjcTz6Z4gJT7wUCB9X4F4Bh9/4qXf
4vdeeZLzJR5Q+fHQ74dhqG62Jzl/xUFq/sDDhiV6mWu57nAoxK5CWl8JVTQX
33CY7A4fVRjzWPOVcPqWyKe3vruBtVRdpme+Eq7bqtQ08NINtms4eSe1KeFu
dnpVww03eLBwx94qpjJmrqwoiDrkBpJNueGKS5Rx65yTC4rj3cBp5Zqr68qU
cf4nX4VjAW6wwUztwLvxKmjMunzJm+MGZ7WyRBctUMFpA3MOoaAbKFYfrH5+
QwUrXZ5xJza5wu9Do+cV5FSxXlsxCs66wuyiyzc44ao4M0vbzXurKxi8uz8g
W6SKUakijZYzXWFTuKl7dZ8qfpUsHiem7wqO0qP3/Dg0HDeF+eacqCsk9Cst
Lo6kYe7peYvMW1zAVCTTqCWHhoLhZW2Z052AfUPSu/4QHa3sZfuvcJzAcO+8
ooFSOrJCRt1/CTqBQhXv+eV6OpYf3TSyoMkRmkOWP1d9T8efGvu/DJx1hLVe
zFOakgzsf+Fkn7/NEQYLXH0ecxiYdie1bVmoI7gEdlSp+jLw2ev5D8KNHCEu
6qOs9FoG1hs/F10t6QjJzcu5eQUMjK1oyzj92gFWFM9Tqa9lYIOcTKN8mQOk
smj+478x8Mfj72a3shyAlTJof5fJxLffjlScX+EATk/bP3xxY+LhVJGITl8H
eCP9dnr+MiYqb2Vqhxg6gBhPKu5WBhPDu39MkJviAKemuUwPPc/EJSUZUyaM
2sMjw0P9y+uYaNvVbuP1xh7i5cfbjfYwsfK+pNzDbjc4rt8VmmOghI6JPbFS
691gUvz5roDFSvh1o2O8nIAb7D6w28KkWAlbbjKYb1a7wpR9ScFWX5Vw0Hnz
soRWFzizcIf9IjdltJk0O6zHyAV8Jx/9Wv6fMpZplA8obHCG3weerDUWU8HF
63O1J19yghvf5O88iVFB76kjQq1tjpBqsPhFdqcKtl/ryepa6AhHPr5pC9JQ
xV8FE22+DjpAzazjLL2FqnisdvUv2Y2EvmvOFaucU8VGK/lnhuOI/NJGYC3z
myruHuirDN1jDxdKcxJtnWn45N3vB7uU7YH5Iq4uNpuGBdpevdXH7ODY6YKZ
N9/S8OupRhUpfTuw1JVlM0ENj7a7+rgn28DhD4I7SmbTccByRe+dWmuYv5ue
5pZEx7IcORNPOWv4vLaa/uEEHX980zXpnGEFLie/OecT5+dyGPamHJoGc+il
v0KH6fiuqtbHutMSbNq/umipMTDH0D9agG0JHT2VzF+uDMQjvuZPllmAp5ny
7texDIyQr752odQcNtR/T3ucz8Cj4Hgit8IYbmo+0mrdz8R7ud0uKmHGMPS9
9psNsb+FEzLtXvw2As91KE6rYaJhvlvWoyNGUH30VGB8LxPjPCRByNEI5q3b
+dJXXB1XT3rquKzbEJg/Iv47qqNOxKeiQvkdhiCkZXB8lY867hlOCfnCMQSR
X1+6cI06lkxcuUj2oQGwE0oidhSoo3vh1eLCFh5Uhm4U7dipgUv8bp2SjeVB
y8VPIdXHNbC2uzrbQYoHbQ2zTF/d0cBFEQ9XTDuqBw8qbhzQ7NRAm8rGaSPW
enB4mWLyYREin5Z+MRTfxIVZbxf/cNZm4WHL1jyM5YII9/JXNW8Wavq0GdXK
cCHTYmQ9ew0L+9xeXcs7owsTZAxT5hWwUO/kT6GCpRx4PulBkrGRJiYJ7t26
RYoDL6/ELdkRrolO8331bYp0wP4wOz4pXRNXN5iLPXLWAZF7rSfVyjRR1tND
zOING5iGe3+Ed2ui8sNk/fhENuS/clvhLKeFe0M/bM2gsSHuobDkI2stjBva
JLy5XBvOCeLdnwu18EG2xRnHYG2wX7Pp6MNMLVRaf7K55rXmXzza2Ofy6L+H
SZrwlHnPa1q4NlZHFtJHp2kCy33eL7c0bTz/mObnN14Tbu84nBV+RRuP7HIy
eTjMgrOv42Q3v9bGvINT6laPsOCt3+CKY5JsLBzZo+AkpwmxzZLXGgzZeOHY
lanWjprgvv52l8RMNtYVJj+YvUsTVhorjrgksDH1P/23B3K1oekPHh28+rMp
djuTDT3xMXJ1YTqonXFbyPwMG6KOi0/cs10HW2b27ztnqgNBuXs3JZzSwYez
Q7j9t3Tggv+EWQcf6KBYrtj9T14cSHiy/vjrbh3cLP1lYVkzByoUWsIDfuug
xVWN8e4LdSGKpZv6aRIHzfL2Xcof1oWkkWXMaxocXHPVJaJ8Gxek9/7HLjbg
ICvveqvCZX2I/Rykv34TB/eHFyr+3mwItaJT5vZXcjCT/SQqg24MCvfby4VF
dXHqV897tftNwN/6Ctyw0UWN+3LmpV2mkBCR+1FlpS6W5auXOUuaw2Hz5Gq1
fF1sWrfZa6uoBZy7mVBTdVcXE2dqDi55bgElX7eNTOzWxbDUCQYZou7wrWD+
rclEvJzJFi3l3HKDOZYX1roR8XKx8d5W3ho3iEufdPsQES93n750Kk/DDRwP
7CiQe6WEtbuW01bWusKdcPlJJ9WVkdZ20+z8UlcYbr+oGLaUiJe5x4eDxF2h
VWlhqXGFMgreUp+1IM8FVk8w6OTIqmBmoNn8NrYL3C6fcNxhkQqK/HrmfeaS
M8wQEfx97g4RL4/XxKyzc4YTLdMi9Giq+NB7co1rnRMU2918eCNOFdWHL86e
GuIEi0x3usxtUMW7eSe0u984Qvu1/PuT9WhYYv+JcynGEaRrR6e3ptDwXU96
1NZRB/i0pLCvtJOGy9ISWgJSHCA9LyM930YNrfWrk9XlHeD1zHvmeblqqPXx
ZCr3P3uY5GF1VGlQDX+/WSB0xtweNP/EJzriRKGPhxvtwPFPfKLjktXrfMXW
2kHHn/hER1HZR5odanYg+ic+0THltdBKw4fwNz7RcfitnOHXrfA3PtHRly0Q
Rbjjv/GJjpu2t1tdGnYDhtRFg1Fif6b0VXqY5LuBQGePeedCJbROmZXw0soN
OlxrS6+cUMLPM482Fz90hXtW4cfi+5XQMjJ/5vEZrnD+xn+SbEtllD3qKXCv
0QXy6rPf3E1XxjVKZ2pkXFwgbYmFkW+vMi69d70i4awzJObsHL7npoKfTyU2
KEo5Q5x/uh73ggomCloW/8p2gohds+Q8f6pgQ2Rjcy/TCYK441+7uatib6Nv
aBORLwTyCg9o5qriTb9zBnWWjjA9S8m24y2R37R8nHmvygEiQtfUb7Ci4dUV
ck1V/g6wJvmS63AGDZvlpxbVtNnDnslNxd49NLxR+bPuabQ9XBJr+7nNVg0l
B7xeKtgDrE/iWLjGEfnJ7KHM/e9sIde59bTHfjr+11I0T8HPFkz15W8JX6Xj
uFkV7NIrNhBo2xAX00xHrVZOdzTNBj7GKjbs+UVHkTkjOVbbrEGyvvthlAYD
CzoZ9uw+KzjmNW35oAcDvy46+Vo/wApuDk4pMVjNQOnBnWsDyqZB8PX4fSwi
n/nw7QjnWKs5TLs9vvJjPBF/ZCd33o4zh2eTNvgfyGHicPRTEanJ5hC84/iI
8DUmmkh2ZmwsMYMqZvpl3RYmDvZbJyt5m4FSOy9N/jcTdad097x+Zwozb+2K
L9dQx86klgsNyaaQVFW0ieGpjgrGtN6PGqaw92PCQefV6ljDPptsetsE0q3k
H+kQ8SlAQu9YvJ4RnLp9MFT7kQYaBXIWzVcwgvU1HfPLWjUw1OaSha6IEQxx
E5N1+zWw5l7NlPoBQ5j0bs2tTYIsTPq0TMDjtSE0/b4zqUSRhYlXDw8XPjEE
h+ULN90xYWG12qxvT+8aQpB5pODl6SycoXlU/E2ZIUyYdSUvJZ6IR7XxGnUl
hrD0+VzfaUdYuMnviV3IQUM4GW2ed9RSEzc4l/86uM8QwgMMG/cv0EROwazs
nRmG8HvisEzZXk1MC7sorp1mCFuPb/GRuqmJBxJvT1+RYgj9si17d77XxJkS
OzZGbTMEa7/RF5YKRPz5IpYgucUQVkb1aCg6aeF7Z6vZMxMNIS0gL1ZzpRZW
jGpPnpFA0JOVqyLytVDraO2ffv2/+HSdtlvCjph/98nl/J1hRHwaeqYnRPDv
kmA679ymjV6aR6c67jQEw2tSa4xOaqPrxeE7YlmGUNwey9tapY1lB+uN3PMN
IThh5sqN7dp49BUnakIxMT/npo3asDaKbZ4QFnDdECy0/8taNI6NbfFrFBQf
GUKMvuiqUHk2ch/Ny57TZQhPz3e1flVhY3iDRNMCQWOYy+lPpC1j4xpe5Y4I
URM4LJ6+eMFVNi5/s/e0/wCx3653cx/+YKPr4Gprs7umwHm/T3qmuQ4KhSy1
lU00g3Wfft0RXaaDBQrxJS81iHwqWACf5OkgzSA3M/+8OeipHxC4VamDCYV1
XdM1LGCPb+22R106uP3Sbd+Ncu4Q1lY5JYLwN9eOBL5obHGDQR6vbt0CJZRT
ieyfR/gfkctLbnsWKuFejYE0ndlusDdm4/DzTiU0L/9xRXuyG+TNmbtIhaOM
ou1bloXdcwXNLQrKSnHKOLJ3x/maWFfQaSmUevxAGSc2Sm+KUXKF4iiBaXbq
Kuj73/jnnuVEPq1tUBSdqIJdZac/L5jvArtnPwq6+0wFN68Jrt0i4wJfDq65
9kBXFZWeTZr73zVnaO1Uf7xuiypee/Gy5O48Z3AwaTr0tFkVQxMv33g33hl0
MzLVWgxpKFR3KFnuqhPkDE0P2rmThqcqMqWtI5xga4SaffcbGs7wzfGKlnaC
wRcfO94T8UAqbXfDqJEDJMGvla25dNznNjTDTsIBxmc5YEMJHXu7Ow4fJ/zV
FpeLnwJq6SgWOeukbqk9dM/0Epn9lo59OHtVww57MKif+OODOAPzfr4VOjjH
HhYeEXgqQdRPU5QEAreY2ENqo+LeYh8GzpxSEJUmZQ/ZUbMNm9cwMGrwvvXl
13awa2bNpd2Evzmq35/iNdPu7/ll4mkji/pDRMBY/cu379ccJnp0cU41idlB
wdXUuOCdTNzqdFflVytAsP1aLbtLTAwMFNWccBEg9+CUb1dfMrF8Yt9d8R0A
CysX9t8UUcfyjfGj/WEAlRVLRYKI/Ng/p/j+dWOAM1tZNuu91XHL3BRunCQA
XSXjAG+FOr5VP+HTtMYKnFPm3A19qoG+c9yzaeFWYPUsRud5O5HvXnjgFOBl
Bfoffqb7f9LASyraYWtsrID+SOxTvTALzx+OeJVsZAVSG3b6eiqz0Mh83f1k
XSsYGth57oEpC23eLlNZw7aCFwbi492DWFhfAk3+OlZQNk1g0QPC3/Tu+Tiq
yrOCHJlVdzwIf6Np8NGmy8eKzIetxm0/FTbLCjpbkk8cC9PE60nTFy1aaAUz
9RbM/7xNE4//N3u96ForMJeaX6FapIkjiw63GyZbwaaVW89oVGvixadTcwdy
rIAXWWki3qmJTd33j9qdIeqddo3g6m+aOP9QqbD6LSuo7j42ab60FoZ+e35p
33MrKF3rsrBNSQvLvxuV5360ArFMiSBjlhbaKJUot720hqMreWsKVmlh8JHW
OOZVG9C7t/vd3OtaKJ5x+cmCTbZQmKFzMe63FrJi87OmKwAIPPz98I2lNso+
sbyxNgrAM0nG7vhybayK5HbnngFIOhUidv2QNjpz1kpX9AAUurSpse9q4x6W
gkGbgh2cDTmU/q5LG5fPO2u/fJ8bLDQ9He5tpIQx519sdEZXUM6oHuKsVML1
NvqinXdcILx+26yDFUqYPv5Ck2OBM5gOdGTlySnjKdU5I4unO8GhkVcFvFXK
+GiZWWRwpwNkv9mwOfC1MgoITlORdLcH+qVr+lIzVdCycRE9kThf1tHZpQFt
Kvj9UfLrdQ7W8E54kpTeMlWc3L6m+26UFaiFL3j0fI8qxrFDQS9tGrxfnd4m
UkHc72KzjxfPW4KXU4rJpT5VFFos8TnoqQXY1wc97VWnoe68xx5Tv5vDI9lv
1/Pn0vDgvt3fhmjmMCS9/OOLYzT0EnIc/ehgBmduX120/xMNHYs+BIgvMoVR
g2e6TXZqSJvl+vX3awMY8PltHUPkZ5f3PjrfH20ABzJdHs49RccNn9zZ44b0
QXeGYWlBFR1jV10J99yoD0cP3OzT7aLjftqUGdfF9EEk7GOcmBgDn7ysUyil
88DjyK1gLpuBTx8ECDoZ68G6SNO0I94MNBa5EcV15cLuE16T5hH3e2CHtOfS
UF1Iix73YQVxv6eFTtHdHagFD6wtbJcQ+UPowluvPr/UhNOlCxvOE/XuYszW
mLJQEzaUzjJaTdS70ZHZ378MssDWWm7ONaLenRGIczM3seCDd1rQRqLeNc6Q
n/lBkgW73t5XvEXc519TMzvFcjSAPr7m5Fai3r32ftqvVpYGFFzbLVxN1LsR
UjKnYkrVQfbjVJ2dRD6hZ58mc3QJA27lSLRfIupd6yfc2alcBqxqmB93jKh3
D0idz3vwkQ4yCcWJlUS96/hBrj7yIh12H27/IUfUu5brggaC4+jwRe93dwZR
7246t07shA0d7AwkHGyIeldm1+bxPmJ0WH3sl4wyUe82cx5IFx5Wg/Sdr7y0
iHrXYFdQR4gRQXeeHo0g6t1xy5zXvFusCsOMDdkbozTRaEu64gW6KniMHzYb
l0rUu27C86qbVCC4b0ZwS7Em2uAJf26WCijePPL12xNNVOxd19vurwLp2xom
zyPubxtu0OiUV4Grtv0XpjC0cLt7sZhxszJk93+ol3fXQvlt0rsbCpVBZ3fT
otnEfU2JOXD91jJlWKVxassnIp9I2T9llUuFEiyb7SSh5q6NSk1nJlZmKYHw
ytWFT1ZqY8Lk52XdK5Rg9erXk6fmaeNVn33LzwUowc2oHfP6iPt5c3sPj2ap
BF2uS3f6f9LGnLK6H4YsJehWSE93U2aj43uXhn55JcDnvYseO7MRFYIue0sQ
/LYl0N+tZOMEh5Gj04WUQIwZWJKZT9THN/T+/P/nX71rrbxr6UlhJXDd2xr2
aY4O/u463ZQ7QQn6x12zp+3UwW5aSvszuhLcXjVH70apDg7eZW6bQ+CpbnrI
eNSqg6yW9VVGs5RAyFhSNVCYgxvDMo8GbCH03T6B7q7NwVGfRWo3LyiBFDH5
ggcHC879NF3zVgmaZVdbpy3loFDWjqP9m1X++mNd/LJrcKtIuwpULntEq52j
i1/vyemdtVeFlvgU+/RUXRS3fZf/7oQqKJkM9q+9qIuaQ3HN12RosLVgPCOt
WRf9e268VF5HgykVzS33f+viboWKItkeGjxJDqEZqHOxKTnGJidIDa4Kp/be
cuSioUnrwQvVanCPt8RyQyQXgyU9Ms5vZ/zFo4e7C7bPeNDJALi234AwAUKf
28pqOybU/3csnbtDDxf1Z7WfKmBCYsPn7PDzeih5NKpwhYA6zHBN8hr/VA+Z
srevqMxVB18hvxKjr3pYanCUfua2OiwRDL/dMIWH18UnvFQj7lex07mEfiMe
wr7ffWtTNEDuoU1fgjcP9TYeTG5ZpQ19EvPtDijqY2X3LTEjGzaEhW03nsHT
R/la8VuTxXWgranCRMpBH1W4MZe3PNGBJfHiTpcD9bFVYqR7wyEOiMGiiOBI
fQyKKPAXXKQLZ3VfpQ+s0Mdk00XfZE24EGEbfS9xoz6u3O7fclpQD9TjJGUk
kgn+/qEjj+v14POzm5HJu/QxJne775Y8HjyclVo9mqmPnJNxVqHhRrC48eLi
heX6qKYTZjl8zBSCFm5el/xKH7OefD4ik28BGVP7h0IEDHD7EYvYkx5WMKVj
tPmVqgF+z+adxdM20HfvrK6iuQHGvYhmn5kDIHtf6J2ojwGWfN933szBDpK6
RuSORxggh5fblyRgDw6qe058W2mA6wd9fSrV+P38R4fUxi0ZcSP7+WtClNYH
1vH7+UtYdqc3Hub38y8IZu3vWczv53t+kIO9Jvx+vsn760c3/nAl+/krRrLu
Fl13Jfv5o5NzCqdscCX7+RYiHUvyzV1hVCXj5XZUwfQt6dPVvrjAzoE6kacK
qvgl80BodokLBB/zWh+wXBWXmkgkiSwj4qm5jJ1QpSqORr24u0jHBY6fkgt6
PYWGhzlS2lXdRH46OqPsUxQNAxMOn1T8zxk+6L5aqn+FhrQFmS6Rc5zhk9XJ
mAIRNfSz9RqaHOYIunEP1z84RMfj+1RX7TV1hHPKa49+KKVjvZLkLCMZRwgt
j04urafj/Xq5opEeB9CfcUpD5T0ds0rMwjrQAXQ/mmxgSTLQ8E7cuk+5DuC7
ZfyuR0Q+Wij87Ccz1gHyJhnMHOvnd6306Y33dADZgoJ2qbUM/C7bZfGF5QDF
2qGMsX5+Zr6m8/wiezIfFdE5kTpuiz0snqkkV0Tko1cEijanhtpDvPZ5GcFU
Jp5V12V9IPJdwU0711tdYGLPXv31hjL2IDDrzPRZTUyc5305cUavHcTdlDs8
e5SJjKDr5rNv2UH06RuBDjR1ZJ5yKnA4YAdPaefjpW3UcYG7z1XJWDsoU+yR
vjZLHY/r3Wyol7cFtxd1g4nHNHD/yavOq1/ZwOiBnoRx5Rq49swVrd+XbaCh
VT9jToMG2ltWrFly0AZqDxfRUz9o4IhfldH1NBvobvczTJZmYd7np2EDqTag
8R/7bhCXhVy191/Fs21ga5f+ixFfFp5qFP0tfNYGxE5GLVu6loWT5DVXdTyx
gdPv6raWEvFq0UuPGUdFbP9+72DhyJdDbq7TbP9+72DhFHWHvtpltn/7SZpY
HjnN1jDf9m8/SRPflW23j6u1hc4//SRNLGSxhg8P2/793qGJsf5S3IYJ//pJ
mhiSxzW7R//XT9LEbTHxuRyDf/0kTXx52l91TgD/PmlK7LaVnc//Pua7fF5Z
TJw7eZ9C2x6mJ6S7k/fJPajxmu1Rd/I+KT+PsTlb4U7ep/rwY8q1z9zJ+zTv
8wq/3EF38j4173r2arKsB3mfVD5oVG7Q84Ctts92r76pglNrz/4Q9/KA0+u7
63bLq+I97VXbyxZ7AL218uaV+aqoI7I6ck+qB7SHr5jff0EVHcNK9qUXecAn
ib4b+qOqKG/GVjpX7QHez41rE+1omLurdeBLjweMVHuktyfRsDGyRiVinCcM
tukLeSEN+3rvxDwe9vx7ful4U/7u7ps6XgCsha01c+iouq/2xO0wL6gP6DFP
S6WjSHTz1ea9XrAp3yVn9UU6rsr8cHvcPS/wF9/xPbmZjjETJarcfniB667T
c+78puO3TvbtAp43RBicu6elzkBJKb8r0pHekD+QaXjJkYHHtm86lp7jDb/r
QwoWRzLw8XNb7ZnjfMn75BIlbKuk6wtPyq+UJhH3ybvbAY64+MKUs6wDUTuY
+CZQUPdjiC8ceTfJqJPID8UvThMSmecLK1Ykbf7ylIkVAp9vv4rwhVT7FZsP
jzBRwEZrWRIx/93sdsM2BXVsjG4S7nP2hT13HuaWmqqjabLYVhWOLyTE2pYy
/NVRO7PkwyQxX7i0lJfEWqyOC8MmBJ1m+0DMMq3bnafVcY/4sl1rgr1h+L9r
MSU96lirkbR9R44XOE/oTt9F00D5i+42b956QljxGcX1vhq45OK9S9s9PcE2
cbz82o0a+Iz1rS8GPeDdDvGNScR99ZZ81Vno5AFh9w4FHqrWwKbw+AMqrcR5
tag7cK9bA0Unpd7eWeEG6z9JOB0xVEKx0GsdW5TcYFGcw/a1y5Vwo6FVqdNs
V5AJaY7YdlkJo7LlzB5vdYEle+ubH4xTxvvJVos19zhDkgb9g8s8ZSwQK/N1
SnICX5mHeaPVyvhObmcPN9gRnvm3dPeaq+DpM+d47XIOMPmjY630RRV83aDF
Dr1gB9JvpLwWmqli+SHb/Sem2cHIG/nejAWqeEJ/WuOvSoCCSeeyOg6oYkGa
UvtcbwCxmGb/2Y2q6D2vfPWRc7ag9T2bKTiJhhtsJe5n37YB8QtvhOuDaFhd
TCv776k1FO6/M3wnn4aGZ3+4VvdawfdTRj86+mlYBgWrRUangUyf8UQOUb/0
6r8W3F1sBlM0NksHxNIx7Ps9IVkpM3Ba2/UyPJOOr0PiBYsWmsI6i3k/hC/R
caXPl58hVSZwOXok0qqJjuNbpo0wNUzgs+QxJcmfdCwd9fwknGQMpkqLVJYS
53VhqXb36Csj2JTjGD3fg4FsoYcvxtsYwYNtZiKfVzFwuMu2xjTPEJQ77N5N
JuJB0flxlyew9UDT1+dIwSEmil6Z8OJ3OhfyX53bW1fKRDvNLcHbPutCmEG9
ycF6Job8ijTOD9GFKKdTqRLvmehuW7rECzlwSdlxj4KkOk59GyOYocUBz9KD
btUcdbz148Dggt06oCNTclHBVx2d1xrCk69s8NHd+lBirTqemGX27nE4Gyqk
Jh86SNQvb2GC6cFgTYi8OSqblKqBAkGS9weENKEjfrHDBeK8DR7YVmxxlgXr
G1S9JIn65YZMQufKmSzg1k7SS+3QwHml36IPjWPByDyvbgOifnmTMuhw7ZIG
tB54sFqQqF8gPXpZVSRBx+xsHfFi4epbc99VymvAUNduJQWiftnOarpSelcd
NL8/580h4sHZvIC6+wlMKGySOrJqtiaGfhx+s82ByC+T05coJhH1DG3no1Ex
JrzrOuh6/wRBs2Uz9GqIfPWzqcnWek2cKbtdXTmDAe4lYYbuw5p4qqEv9fZ0
BjjRJoGymhaqxzpWaagwoMoyMOyrqxbe+ZD21K6TDvVizPS2WC1Md666qnia
DrOTNtQ+IuoXTOiq2HxDDTrF1r5d76KN5Se5Wi/mq0HXyV9G12O00XzN7zfT
mWoQt8W7eNMBbbR4O3P4y2caHM5eMB0rtfGaIMy61kyDwA5n3aSP2lh28+yk
gmfE+IKPBpVKbLRRP6F2isjP49TDF2wn6hdHXfbm5+MJeQq596uJ+qW22dhQ
200NXjsfmLWTqF8mbPnjh8n65fyRAIeyuXSI2GybWhKmg3XPshqd9tLBr8Lx
E3O7DkYyd5k+r6TD0QcvSlOKdDB2q+2iZd/oEHLq1/OOaqLeGT25REqfAatn
XQwxeKODwmkP4OxCBgy9/Gqx6ocOJhkc7Qr6j7CvQW3c6Qkc3NBvMku0nQG0
GfpTnqtyMOfH+twqPR0wEJg6s9FHF6s/vD12FziQHsWwm75WF/PTOi+c9NeF
laqzp+7M10WlpwtxeSQX2hgPWldX66JpdXy90ho9eLhq4Z7Jg7o4Mn/Ky6Jk
HrhOMTeJVuGi/gy1Nbs89cFVzKI61oWLpb7fflo81Yd6x8XuhrFcTFNT3P58
tgG8fFxffiyfizKiF4g6wYisX2Y0LN1rXmgEL1uDcl2J+iWNnhErxDEGO8NC
3c0peni2T6Hr60VjEJE/Y9V0Vg/LzMR7FKxNQD1p1f2AJ0S9IhgWP5/wB/kb
fjwZGNTDXHelvJc+phAnbBdyQZaHS+SsfRJfmMK5KU6h+zg8ZIdU7fWdZwaO
l8e1HnDgYQPt8gKPfjMw6Uhpuh3MQ4dl29oT6yzAuOTj29BDPGwRgdfDydNg
8lc9o72tPMzr6Fp4SsUa3oeozzSQ0sekcWvX5u20gWuxB02jWPqYEftZuq7R
lojXv8++s9LHeZnF8rQNACdCfO+U++njXtkZ3UPfAapY6bHN8/Qx0GDNj3cL
7CCQe/mmc6w+KgrkPV3c6AaBYdezFIn48Lk6VM3Qzw3qeBPvBi9VQvELn/TP
X3OF8yZsfSxRQr/yGZLd44l8frnoM5/fSvj0zZ7TDV4ucKHt2OVxQcq4Vy9f
Pj7eGRoTJZ/0XFLG7TmbnZ5lOEF4iJH2J5oKXmIa2bzPdISg+fRr9D0qqFx3
7deVJAe4fOzx1nhpVRQwMa9pk3QA81mfGo86quI+1dgdMpn2oKM07tnbBFV8
vj3awl3ZHtI6Jqe43lLFuzG0ll3/2cHMUpX3KErDiJZdy15y7CBnt/Jvf28a
nqkq/2xSCuC4Sq7y1wEaHjU8Fp1jBRAWIWhZ+Z6GGTbZxyVSbaE3pDf8P1DD
Ye6P3h0l08B9WOJC2Uw6xh+0eXXykyWEqi4YGdhMx82LetlPeZbw39XiSerH
6SiRM1I9YbkFMKvbhb3r6Cintbxi+llzaPT4Xb3yCx0PT/EUOUXsd4WDxLw9
NAYWL9hdIMU1gxfnfj0ucmWgzVSLPeuWmAIn49XkilgG+mq7PRs+bQKlb07r
VeczMFZcTzcmzADaf7/3rf2PiW/DddM+jDOA+zHeV4uvMfHhh/PHS0r0YUvO
wSdBT5ioeaF8/bVZ+iCztiH/Xj8T35/ylBIT04do6WE1AWl1tLtw75TeXB5k
BwsHCHDVMT1eqLT5sh5kzfphXk3Ehyun3Qxlx+tBxOS2xzOI+FDpeoj1cB4X
BLafVj1HxIf61GDHVgEdKNnEKY7doYEtN45+vpXPBuX3ZvmtRzXQ8kXRrDhb
NnBmLihfcFsD372I2vD7lTa01VwWlCPiw1tsmz4jURsMgb2yTZiFlrsm9G5W
1wbOlevStVosbLX7ahhfpQXV+qseNxPxob4lx9QhWgvGFXuiJBEf5EI/D76c
oAXvOS4vZhHxYdkG3/zVl1mQUGHJfOepiWG+HzSro1hQExV+fNxqTVzyQDJi
lSILCkNen7l3SBMPvDvmu65GAwT3XjfRuaeJHedvDr7YqAE9sl+AN6CJbqrB
rpn6GhD8LLn+mbIW1vOW+x3vVAffjtVtdBctXNkrMmHSfnV4YnwzZjwRHwxd
FDe9cFeHtrp52/KI+NCz51jL8UAm+b2MvWCq0aOJTFh+2Wb69TnaONmo2uYC
4S935dip+Kdq45mRK788bzGAW/bk+eAFbXx3uXtlwUUGeCsPJue/0MaGpYEH
z1wh/G95vm7wL21coCoYt6KOAap5LXdVGGwsvNsn/nGIAdXlxwL67diYsmCq
N0uPCcNKv57eD2eji/LYew4NMj6sF3oRu53JgoPr/v+eYxLjjpD5GRaYFf3/
PYfM2g/7zplqwqn8/7/nWCIyi9t/SxMGZ///PQfvvvj9T15aIP/m/+85/O9+
XVjWrAXjDf//nqN1RGu8+0JtaHX5/3uOe/NyL+UPa8NW1vI/7zmmretcVedp
BHlV9X/6W/HWUoP5q4xB1OvHzCvhupj923D5yjwTYA5oGVnu0sV0nNnnWGkK
gxcCpa6X62JYQtKiqX1msHJvYqftW12Utj3V/XaSBRzffbb89hQuZo8+nlcx
zRLST7VkOjly8fvVb+275k0DzU7xJdUruDhtFSNs7k4riLUwdfQg4sMMPbcW
o4vWf+tNLl5lbrtaT9Sj/683uVif9nb699f/6k09dDctD5kVA3/rTT0Ueb2v
N7EH/tabephTtfV5TJDd33pTD0V7kjW1r9v9rTf10M0+/+kJ5X/v6/QwqunB
m48r7GHdn3pTD0uqeNmMOfx6Uzo6e/KTjfx6M8Wu4/GyfH69qe41qebrHX69
+SqNLbj0Pb/evCHAWlU/2YOsNytOimqoOHiQ9Wbr1hrZoFgPst5U2bfGcsNx
fr25seFEpnKLB1S0qqV/RRUUtBSQuSXjCamfpO/sV1LFY9Wbzyxx9ISp82ad
cItVxejNmkto8Z4wx1jKcnyNKvqGDXk9K/aEBZEq6zsYNAye/9Yvq8MTdD7v
ir6/loYJWaJxwVO94Ex7hPjtWho+eO+KTE8v6NfNCaylq6GYR7XLuQ5vYH6P
X36ino6+TqHdUZ+8gffawj61hY49pSdWJv/0hr3NRmcc+uhYk3uqb7ykD7h2
RxU3CDDwy+fIwB+TfcBf5JmTpSIDo+88K/Jh+MB5402r15owUFdcoF9S1wci
1oZb7ZzOQPPb7apcUx9YWLvhwOp4BmYMxFldtvWBO0YNu02PMNAgu9r1uKsP
+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
rODQV1mUmLqYdCPLHdou3lqqwpZDt0UC0sr+HDBXOL5PIVseHxWq5N2L5gA9
LbN7a5U8Nuq1xm5KJ+KrQnWuTbs8jnY/rR/NJ/icGKWW/VYeEzaHuG+o5cBF
sRDbgHmEPheMdey8xQENH9GVNXQFPF01UyL3iOCzj5/XdmcFZC+f9lrziQPz
xH3db0QqoObsyLB9s7iwce9C09QCBYy4Q2F1rOMC6edQz7s0RQySfP0lI5gL
fWqKe+6UKuLpXx9MmTFcgAunhoeaFVE7Tk+lbjcXAvbHitCHFHHOkdYL0plc
YF8/9LlgDgllrfOf+mVz4ZH1RKINjYTx+5tKMou4QFcsuS/vREKVrTILciu4
oOl67KlyJHH8yA2hpDoujPc+Klj3+36gi+Lnmt5xIXXLr1SxTDJ+406umfWZ
C9U8x/32lpPR6quy97dRLhhiUp32TTJKpp4qOT7BBcVTV+MVXpIxTD5a79sU
FzZctmh2mEtB1/OHRWfN9oDF02JxdTQK1lnyGDbN8YBl63WrvZ0oWNB7+bTS
PA+Inynysoyk4OK1rf6WCzzADr3igwoouDd55J3UUg+Q0L631NGSiq/Zj7W8
xD2AXqV3ijeEinqjZf2WyzxggZpQvmoOFbfmrOjvl/SAutMe31uaqVik80lz
qbQHqCkL19wfpuKVFv+3P4jtkHKTLq6kErY5X59IkfGAONqAk42VEjZ38vhd
J7ZXnPrIOBumhBUsJXoxsT1LJWTrnnwl5Ao1P74l5fG33iT/uKYkRWxX8olu
LV1Dw73jt4NXEJ+f/vDAsW8ZNHT89agqjljfhnTbb+QmGj4RH/+UIeEBNnJ6
icy3NNQ3k6Du/f19DnjaSC9VRq+tFisDxTxA6FWd2SuWMto1xiQxie8/Jm67
MT1YGXmELla9FPWAAbpIu/AxZaz8/KOFd5HHX70VcOyp8DpBD5CpfNsx7UPH
nXYC3uHE+TTd9u6Hexqhp6ZiK7QFPEA/umOh3gU6dtRoTZfyEeevdD9P2RM6
8mzScmnj9YBLcwwGTs5RwaO02JITszzA8tD1HDW6Cqa/5Z8mTXPhFEfdyMJJ
BZ+fGfBYNcmFt5bb8c0WFTT+Gpuj/Jz7936gB7OebpJ/RMRLro5tv48qKhcc
bvl8jwsXlGQ+Xk5VRZWuwlNHO7lgfil+46ta1d/zzEQlWrjwfvmaFqfHqmgz
UM8bilwo+dH0a3KWGq5rvLatqIELkcUHl7whqyGTJr+tooYL3tw3c8Ws1bCa
cm/2vjNcWC1Yf29voBp++X58/FwM928/vUs7ZMNGIr88v88azvRRx97nL0QX
EvlnmGe3MztFHX/9HB/LWs6FCJ4yXddqdXTee2bhD3su8NPFljT0qeONnTye
1sCFUZFs8e5JdVzz9sezaG3i9ZdVWUckNZBwxMcyaUT+0XqzFhho4Dz+7oxk
aS70cjP5GFwNfHhF2GtbJefv/UA8C7rzJ7I5cOTMT8MWDQa+I9kcDEwgeCl4
wLndgoFZArG6rRs5sIZB21m6goFjTf4pkoQf2Cl65faKjQwUN1qQ7k3oe6l6
d43B7Qz8sTfI9BChtzWl3lWyMxiYm7+7oIng9S2zOPvYPAZO7vGo6SX4/4As
ypNymoFF8+RTzqm4/289TNzquX1Gc7Y77J1wr4nWYGIeuerE2T432MEaVd1v
zkQxv6YNshVu0P2SXT3EZeLzZSd8Ene5wc5BttmWACbOWK6IH/RwgzTD0T7d
rUwMefuuXUfVDUY/ukfrJTCJ+ufO3jnbDeon/UhhGUy0zTo4dKXPFR6uofa/
PsLE6sNnKsfOEP5WMfvI4RNMvKa/7WXJNRdw9ZZ81tLMxA2oeXak1xnev3uY
+eUVEyUkFi586uAECjf7ShbN1cS06IRXgh8cYPzzYjJFQRNvvThskFBpDwFB
yQJMQ2Lb3WqeUa4dbNU28dBy0cTMOwdd9c/YgoKTxnzVdZoo4xa3NHbQBjbW
e1OkwjVxsKU8ozLIDlzlpm11CL0eltQt7HfEDq5oLc5t8ZdE+hHK89hbdpA5
E7CvoUAS54yVTYz+sAPcOZu+4IUkzitc7tmlZQ+c+mcbLlGlUPO49jzBUHtw
KJnt3BkqhQlvTX9V1NhDqW3gQ5PrUjiZEAmVE/bgV7xYQEiC4Oemx+2i5g6w
58L0E5NwaaxZdad4dpoDWOY+Jx9ol8ZLs+LffepxgND5Rkl6ZBms9v6S0y/p
CHP4BOeq75DBrAi5umu+jvAj3ePE1j4ZXMUWND112hFW5Yu7CzEIfrY2MPeN
OIKiiQtpIkUWa+dS9ocbOoFLwKxFWi9lEX46eXkkOMFLSZrYVVM55M0v3kgN
cYbJtLfvjXXk8f2awhHnOmfIHY9KdfOVR6rjzW/R086g7bubd+s+eXzInHfJ
RdEFbtyd71F8SR6t3VhNLy1dwMFCKOH5O3l8yi8UE73BBdobMpKUxRUw3y14
fEGGC7A1UwJ2WihgsqYvI7/KBSrPzpIbDFXAY2XvlDV7XWCJ6liVK6HXF8d4
nsy1dYVsgcPD8TqKyCdw/fmtTa4QofzAOtlXEfkP+twb2ecKry3jaSf2KeJi
ce1tsrWu8Nk7K+v6JUUkHzbrtyXiLyOCP378nSKCYML7iElXuLb31TddcRIG
7PxZnS/tBumH6eN7LUh46MMZ9TYzN/hY0Bf7KpSEd1wPrhnzdYOh8ndJboRe
t7tyruIcxx2aj5DDaP0EP+ePSa72dIcXdyknFw6RsYritbdhrTs8ilsfxztC
xmihN8PNge5w9vhHXkGCl443D3G2byb0p3qNlrI0BZl2/vWDYe4wwGgQXKFH
6PfjK8S/R7mDccnsAzmEXle4EhzRsN0dItLS8BOh1zXOlt1R3kXk75BHDofQ
60d+rlBiZLr/1eu91NNXU/e7wxLx65HLvanotKZ5oPIgoV+lnIsa91CRp7w4
Lv+QO4zIhc71LqXix2nHkpXEdhaFVsAieCrie9Xl6QF3mFKJCPN/TMWw3ol4
NUJfMbS4228TfF3A/aFjne4OTKP2y5unqfh0qDlEJYk43rxP141fCd/Hc9Uf
xbvDQcfIN5ELlTDXUeGmy1k3+GR6xWLJWmL7vt70xAdXOCJ14VDQOSV8K5HT
12PsCmlDqx7EjCnhHnFL16f5LnDnSOVCNsHfkLtGm6WWuoC3Tq12cxANXTJ+
cJYYOIPxVX/n6Vwarh0WEeFuIvSzdovXl2YaCt1C4clmR3h26IFX3isaxibH
sHfut4OaDVauypqS6OFf6S82bAfs1Tr1RzdLovCw82XFlfbw/diPbscaSSxR
9LQt7rGHbsqRE/azpFCC967AsVUOcOcHv/z+5VIYsK96ho/w118lXbiyF6Vw
X8uU0tvDjqC/N9h0VEEaD5+pSTS1dYIS43WPFx2Wxkije+LzFzgT/lpdNUJY
Bjd3ej/KWe0MezW1vh+0kcHVkTP3Jaucgcea/fHjbhlUlFqZaDXbBcq3eS7Y
2SyD+/lMjKPpLhDRHcex45fF2OnT+4rcXSDIsqLFyVkWn/8q2nlzuwukPhry
Sz8miyhIWfiixAV691FUeT/KoowSU2f8jgtY+YfK1IIcPh0U4omNdoU81xm6
rac8fvYKPx+d4wqRyimpvvHyuKrlYWRYoyu8zcgyjymVR1lFtm3gY1f4ErfE
I6NTHg03V6gsnyL89tSS6yfG5bGyXEKWLeMG1/kOJJ0l/Hhc7155mimRT8fT
ShsIP17y5ZumgA9x/XG2XDPhx6nT67mvCH/wcsvYl9tEfkdtPD1/RNQdFrfW
YMImRdRq2up4gODV0Q738pkMQh/rHpNXNneHjhqftpdVivj4ieSeulXuUBvb
R9W5r4jNVWNRhkT+WJEvXv78QxH9K2lT51PcIbVyzr4liiS8/rBuMbXQHbZL
X8o9aUfCPo38CxkXiXzY+PR5XgQJS6pfvP/Q5Q5bjm1cO4vQx2v7bi9lr+SA
4E7LodVnyGh3YB9/ly8HTorPLy6/SsY4zx9TjE2Ev7AQ//y+j4wzzPnfArcS
fnjO5hvkr2RsWXp1JDyOA9krF5A9hCj4mG/ZKCeJAw7sEcGd6hQ0mCvxfX4W
BxZeVUjId6Xg4OJLM4cJfdDdlRNfH0XBPuW5878VcOB4xCqBFkIfe9+8x1rf
yoEvdonxPduoaHy9la7ZyQGvSOcr4rlU1JSLiBO9y4G2Ndq/lAj/DQP3jRf2
ckBrvrY57wAVfSc/+Uv3EesJc0o99YuKxyMvTZo/4MBUzu5eSYoSfnZnTSQQ
217x9xSWOyjhiv3b1z4kjr9EMQ3z3qqE/erBOtb3OSCR2nyTUaCE233Fzie3
c+ARs0Ew3oSGkZ91s1qJ9bn1brz+cD0NJ1gejZKEX7oosSo14hANZ6+K0NzZ
TJzPX7v9XZCGWXr7J8aROB9J79w3f6Rh6aOKhTuvcCCmOpXbLqGM5uYtwZKX
OHBgR2BQkKUyBoY+l21t4EDuh50H7MKUUcR/Qjq5ngP7ft7r3JhP+O0ns1ST
q/71I0s9Cnk1z3Eg6k5Sszahj9XSPIqjz3CgbML/vkYy4Zdj5YW8yjngd8Dv
IuUcHb0ov2CgmANVx3ZvErtLxzlpI8aTxPnPWNL8dfZXOl4882N2bR4HJqYU
bd4KqmB0kniWAHG9vnJOhtxWUkG2rO2bqQMciJW2WF9iqoJD2zQGdttw/urj
m5MnnZIMOZAaK9GVt0YVn8zXk01W5cBYeTlvdwahlyvf2u2V5YBIfqz8nUZV
LH99sXcXoefeemVSjr5RxdXVZU2xPBwIGxwSUVmihlaLLvzaMuYONRrb3qaA
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
3tOvrm2LAdj6c7XB7X4uFnXSDOd+ACBbzb46KsDDwdc3A9oXm8BON7n54ko8
1GWVzlAsN4ENajFqFD0eZh5vHP04agJj7baLVBfz8Mfa+fq2GqagBH7tDG8e
bllc9pyxhdBvAe+XyxF8r+vta0OhEr3/6V0WPjg/50JXs97/9C4Lc44dVAgZ
14PCP3qXwMP6TVt6aPpg9kfvsjC1Lzd/3kr9/+ldFl7jKp8TT9H/n95l4fW8
35+nD6Q/epd4P9OhxE/Y4H96l43sjleB9+wNpvBR7ZraEp0UAxBb+Ps8Cxv1
5qS7f3hkAKKc3+dZ2Gh6Vijni5wh3LX3WdR2io32Vw4JWnsagkNQZ8rDR2xc
pqx6dKDUEA4dkw7f9JWN3h+6trUPG0LWa6VnKTIc3CGV5ztHzQg8OeM19loc
jDqy43BGiBG83Zs1eXgJB1MjV41tumwEui+nX961mYOSkvefiu01hqcRkSKr
j3Ow8ub3irdyANfnvoyzGSDyMdjn5NqtALua0xYozeXiz2zq7g1nAWrjlUXI
DC5qsIykfv4AOHCVl1ZpxMUm9epgqo4JiOw8cbrBmYt1J4KKu31NQKXksK+t
DxenZadn0nJM4J39t0teBD7OWCFzjG/Pv/WR3/k3/m99JjP+xv+tT+HZv/F/
6yP8/G/83/roCMr+if9bHxXe3/i/9Xm95m/83/r4HPwb/7c+hot0XrCi9MBg
Rfi9hcT6zPJOizkTowcXyTqTrfvZeN1TJTsrQQ9WBEyKO1axcZsUn1x7qh6I
Wd8VyWplo3CMuPCWPD3oKSp5U0ns7+wKj42rK/Xg3p7Y6nhhDs7f/0bj2Dk9
aH+1fbk6oddiFtZucyTyceze+v5yHQ4qVMvyDQoaTO3n6JALC8aI+nFyCBkD
xH5+t62vwiHMACiC5YJ2BB9xS0+pfH/GAKw9pJ/eWMHFG/03Fj35YAALv4iX
Ld9K6D+fPfyzVQ2h8GbmBr49XDw298qqhA2G0P64VAFTuCg/uJ+25KghNJCM
WzKLuZj1rt177QtDsDvuFRBTy8XElK2eB+ONp/xX3wnx/bqDxtC44pHODg4P
w5LAIYMM4Nn01TLYjIepAe4OvKUALU6tWypcCX12+sW1D3sBZo25lQsRekzL
/uaph7UAEucyvqUH8vC64fz5Xb0Ag9n7vByjCL0W1/SOf54JHMhg9Gok8XCl
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
T5uRusRPFd1jaYU1dy2BfbXPezJXFQXXjhtIeVlBePmCzw+vq+Kvskzy09/n
WWpOmD7qV8XmDVduxRDPJ2vC7ecqQu96jovXHmwi9Pa97WpDhN51drx496et
CZxa+nL4mA+hj3xR5sFrE2hPLmceIfiDvbN85qwcUxCKvP7+cjPBF349Mi/1
MQM7io6OtDAJzwUMUEotzaFg9/SZRU4kDDvprDULLGB6MnmVey4Jj9RK77q/
2BJ2Oh/RsP9Awrgj2WZxqyzhc5zIJoUxEp74ddJjwscSBDzedufxkZH/hfs9
1lZLKG83TLs5l4xJusVJCwMt4enQr7hcMhnt5kbk3dplCUX5apcXGpDRyPP9
L95uS/g++kjTegUZfVTHTrtFWcKr10Nv5cPIiAHp5wyiLWFtqN+rQkLvHte6
LfY82nLKHxnNPtjlHWMJkl9qOLkeFNx1uVf7yz5LkEubE3svntBLlVcZqXGW
MPzuxb5bNUS8glOll2QJe2fQOAeI/b77LuPG+0PE73vSE7XgBwV/8J/0r860
hLlbxHYHLKRi/a8rJ3flWQL/uTpyhj4VT15eu3dxqSXgtXs79rhR8ejRCw0k
ASuoWH3hz7yG6+L1M1zFrUDm/Jw/8xocqdikxfJWUNqW8GdeQ+2LnIOkihXY
F3L+zGusfEexOqptBbOVJ//Maxz/eTT0u5kVDG/+9Gdeg6ycPSC32AperZP4
M69x1XdassBqKxiXXflnXiPh9outDRusgL7/77yG/I3f8xpWU3zCb7wSt2YT
n4+NqU1rGLg6XlojucQKpl82kQiOZeBgqEwYu8YK6sSWTrOsJPTT3aoMx0Yr
IJ0Z9VC/w8AH4R3R75utwOmEItv4NQPVDmRYzOmyAt2xZ1s2/WQgZ3Kgq2rQ
CnpS6bK1Esp4526L2b1xKzDfy6clS1ZGvgmbPb4zrWH99Q1X8znKeIUVb2oV
Zg2aEYNmT8OVcU/f9esx/dZgHiD+ofqaMhovmhSkWtpARllvk6wAE7938WYx
8myAJL361gIjgm8s9G4+8MYGPlyP+Fy3nYm+vYcclrFt4edJK7v+fCaSVC8c
jNpoC3ad5+6euMHEx99epsw9bAudhu0hIq+Z+CvU/RjTwRhq9yXHdcgq4evm
bzay641AeNRqVYeuEnbwNgvGORtCOfXaTT5PJew8Ud29U8IAEhX5WpYmKeGA
wc3W/lI9qO/9ubWtUQkFe08/axfVBbrv5fKd40qolhsoYG6lDT0XTcIstUjo
t2WWlbqrJrxo3zdoHEbCBqcdJcWEPqfWJY54NZHQU0rF2blLDdpat45Ne0TC
hEuz1tvvVgOLPBVnswESalvM6TlEUoPohTem0ydJ6FOlgwo3eRDvoCdUJUXG
eWNxgt+28MCNm+j1SJ2M5gq/aheK84jn0yBe6ELGMcaRGwn1hP4WQcnZu8jI
nOduZLaaC+H8JX4Lif1UuP0jW1+GBaOnp51dlkDBq5M/1NbWqIKazzb+Q6UU
1EkZF3SwU4WeB4rzP1ylIJ/qq8qf/Srw45fkm529FJRtuSK/M0oFIocd91EE
qLgv+JDX6UUqsD2juf8rnYqmjMU7688zoW0yUeSzAxWX9vCtjHRjQjbl0Jgk
wc/rC4pnzxlXhrZZnWVrCLzsdYqJiqtmgL0pKXSdHg1vXfXYdGIJA6rJ9NF1
62kY/m2RzevPdAiP6n+elkrDyU+NilrZdKhZ5Q4jjTS0rTX9cESfDva1yVIh
wzT00ahokH5BgyX7dq1ly9DRNnR0Z8VeGlxsX6QkYUHHn9Hy7CU0GhwqDHMl
7yDwcQmre84dKrQMpv5cS+wnsXUZcZk5FGAYD99jazLw1ZZPQquNKVB/66q3
lRcDZ2g9uEx/RYb24z27fA8yMOAar+pbHBn2DZqL5V9kIHO+xP37LDJc2z1C
ezbEQBYjQOXUAxKk+vVcokkrY8Qvl4vpwST40CD9KMJcGWVyGqIjF5KgZ2WG
78vtyvhrPCfK/4oSrF2+ImZJgTJmG/OGcg4rTuFlWPp30QvWisA9Mi2p1JOJ
AQdmP6GJKkKCisP46G++7tqec/GmAry6fuL6wgtMtO1QbL9aoABGGxQ/kwaZ
eLGIb41noQLkSBzbN4PAP7e6AJ2M2wow1mS267qJCqbMvFRzarYiLI351OLh
p4IiT+K39doqwinbhtiOHBVkP5sjNjdcaYqfV992ubmzSwlye69+Xeypip8r
RiR0dElgZONcWZikitMiXow6Z5PgnFVIFvmsKt43pWy4OU4Cseca+KRXFTf+
uLQtYzkZQDSOck2UhdfLToheaiCD/YPt119osrDf/IOhkQwF1LijBZw1LLz3
KI5fdhcFPlNnNdTuY6Hc1g/ib7i0KX/izIfGgYESGvSOrFc+5cFGhn/VnVhZ
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
i2dJpB1NPPBsI3e9naSBUwsUe24/4sF+X1MmWUoDtxSuu/kkkQuL3s4YzF2l
gW4RcjemuRP6q8N+5vNzGlghr9sdYc+G6u2fdt/r0cB9yQVL5i5nQciJj2vD
5mtia03c1w8xTNjqbpPXsV4Ti5/WVLTfZUDticmW07M0sf/cpgoZEgM2RlJN
fldp4hWX7V2BJwE8PxSnHm3XxIW5bZf9uLaww/CJaRrhF06mDc17y7eFsBRv
14VrFfGPdW9Eub0t6N9p+0POV0THzMdNXxbZwpn3i7XIHxQx5+Qek8SlttDa
cu7ZApoSfvfWSY13s4U3Vf3iqTuUEJ4Vff7gaQuHE2m3hp4qYUrfNOZZH1sQ
n0P5y56jjC/qnA43+NmCxhsDTwW+MlbPmJt0OtAWfs+QkZoUpIwrPhS+7Aqx
hRL1GOPwLGXM5YvF5YTZgu2MmLdht5Vxjyk15VaELdxumiE6oVsZNS/Jf3Pc
YQtq0QanZOep4IbK50UO0bawWuRDTTlXBZe7uddUxNhC3Ery2jdBKtgTXWR1
aKctJKUPx+w7poImFIE+tx2bh1OiKcSj+54+qwrx6L6n90pCPLrvKU1BiEf3
PUnKC/HoviereUI8uu9J9z88uu+p+T88uu/J7r/fN7q/Z8p//97o/p4SZSEe
3d8D/32+0f09JWpCPLq/R1JDiEf399j99/8b3d8TqCXEo/t7IrWFeHR/zx6S
Ta094R9P318aoE3o4fqn6U3f+wn92xmqd3CjIl72yEng1/LhtOz/mDrzeKj+
748rhUpRFKmYMRjGYMi+HmuMbRZrtlJJm0SflFQqWaKNtFhChBBRqSSdiIqi
RRJaKEtaUcpWv8t86ffn68HM3Hvf73PO85z7fr/P0beWJdJodd+73inRBqyc
U/YZ8clg+LzGIrGVNjCYlSGy21UGfTX56JGEv7o189yxP9dl8LPue7OCJ4R/
ufXg73tREpKW7vlx6ACRMI/dLtrEJOHo68cgpmoNJvcLXU9Fk3AJjfRdYjbB
s78v3FbJIuGDyLBu464VoJZS0vTuLgkFf3QoRFeuAP0rjeeL2kn4bBu3cODc
CnAwEpZN4iejCl/9nv27V0CgvrtTOpWMkmmcRHW3FXAu75ZepT0Zjzu0/+DX
IvjyyPJnfwl/d3ZeaMrv+StA5gMucyf8XchwRn2MphVcfP+zMwBlUX609BGH
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
nzQ93y9NJb/v3ojnRjukGRgzz//yZ/L7TX89LtQZz8DpB9QPntstANXDz70E
pB5l1ctOPXURwOxbMUffEb17I2rTI3mGAKTiQ6z3E71rUMNkWY0QQOjklK0M
DyY+f/pxzbdcPqTNl9J9SvTuq7L42z7L+LBT/tSiMKJ3/b1dVz1U4INMmJ/0
bKJ3D15husNNHsxL3jyzh+hdo6vqZ7J8eaC5Kq8llehd09LtBoVOXDidvFf/
ngoLB1KrmNMluRCqX1Ztz2Jho0rm1YhsDnh/HdNXb8PCpyqT83uXcMBGyjtu
uQcL+1PHL3CV5QDVGYt/bmKhcWkitzTPHsZ16a5I3M/CuFW5TfrL7WGw5GS0
5TkWqpx2/3hsnD20Nk427stnYZHnkQiRfnlglOSdXsPC0KxFyWvWsv/5tYV6
DmYzprD/+TXjjdrC9XVDfk0r8kmLMGrIryn7+XRXEX7/69cmqz3Y0ETq+a9f
mxavGLC3dsivsV6zem6dHPJr3EHa62Nrhvyaa1rqCYnyIbxjRey5eL5qCO+U
3sXFdj0awrsftZ12tc+H8K5njv9Dl7YhvHujZUDd0zOEd2+P0hbxvw3h3ddw
b8ciCft/eCfzo/b/5mNQ8aK+aL6PPegcEfeb9eOqDt85lejT0eJ+s9ZeIn6z
hxPbxf1mjVc+qJugbQ95HaF/+NHSUxzfsRP3m11rJ/77shRxv9lsLfH5rgyO
/MOPcp99/3xfjK243+z5t4Sv+4b03Tc3/UlnOtlQJplKDST67toSdcNk8vuf
V7YGLoik4/Pucc/n17BBfdWO1QcvE/8gJ62wuZQN+19t+bXkMR2X3uivNr9O
fj+zZtZl4h9w4K1KeirRq4vCx+6bxMCIuy8+pcaT+7/oVHTLTAYWalYvnL+f
6EGG4uUSPgMHWJPX03vt4FhxbeOMaUx8FqJ2+wDx+zkVo0zDCL/5LLJb0pdv
ByXmeW/H2jMx9sZpE+9EO7hObWy/s5SJyzPVPBp3EX4OX087v4WJL7Vvl7us
sANPQdCtzANM/EWL3fSKbQcTogbOviD1dAsjV/oz7CDXsKfaqICJ+s3pZ2SU
7MCc62xbSOrJJPKTWnr/kH98HX3CeuzLIf84Fav2/Cgb8o9v1WLr114a8o/m
KZ3GPieG/KO+64PLzbuH/GOKsYXpq/VD/jHLwu75co8h/2gb1HzQnzfkH79c
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
Pamnyw4f3sT28uHnyiUvzUqoWF1eS/fqIL+neUL5khoqll+ICPZu4oO1nW5j
bysVT3ycWHP8MR+cUo5MGhwgejg1mPKrmg/pfYt2bVOiYdnd3Ki4Sj5Yztw8
0c+AhtMcKz4tv8MH7ZXvGuodaehsd9lrRSkfeAcKS69uo6FPxron8ciHouTW
xhFnaWgb+P/9IOi4/zajSdR/IXl+S+Ie0fyzM9e2hRTxwbXo/rw1xL+VjInV
XlLIh+8HIpe/I/4tc0xFR/91PoRlqYyTKqdj0JmFBU6X+fBteqjl9WY66t82
O70+nVx/Z+6PX5/pWLxtxzG7s3xI+HXLpGUEA41wwpnWE3y4tzLplxupr+h4
6RsmB/nQOkNou16FgfZLt58T9PKgwDtCbqofA+e5332Zt5QHv19mKr7MZeCK
mM71/i+5kH3i5qLsQQaWDLxwDlrFheXW7h8qiH/jxafGPJbgAqVZ+KiU+Lfx
622m7U7lwIyJJYusiH+TDb4ptXMxB4Tvzm4XEP9mXCQ9r0aFA3ke3xe0Ef/W
e+DhtrGOXPD8jw/MulXvTF3NhcLtYj4wNXhlrB/GhdxEMR988FCvn3We+Hd7
MR84BTQen3eXCxFhYj5Y5ye/y+o9F7w4Yj4w5RbHspUJXp4R88FNpa77XFse
9IaK+aC3NJrKD+bBhW4xHyxqfJ3jFsWD5iAxH1ybNT1jII4H83aK+WDkU2sF
SioPin5k/OEDe3R63XWNB269Yj7Y956tbVrKAzU3MR/ke1OeqtfwYJiZmA9e
qPX2H33OA6n/+OCr2pmIk5080PuPD6SXGf2Z3/d33o7mqJT/NXXt8VDme9iy
R+O6liHlcuQjysnMO64nxJfjMmPGXJRLUnRQEs0sinLb43YoSpIRJeQWYTtE
bNrfVuuSWzZtUpEuqCjtYsulzq/mM2b//H7e98/nfX7P836fz+/Z9q+P7JW+
Hf7GYe5lkqRv5+nNe7HxqpK+ncQh4b1KLUnfjstevV2EgaRvx0rAV1+9SdK3
s+2PlMUdZpK+nTMzASqfNkv6dvRe+nI/9TLBZhRF78gkEOJLBwbUMyEz9Ghs
dQGBIru0vz6VyQRn1Q0N09UEsp2/aCYMZmK9c0Z3fRvm5/mL7z7/v59qGm3j
DhCI3KVtR1ZgwoOGD9mCCQLp86XXZN3H/Nw7IUz5RCCXSd+k++fd4LV09a+Z
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
8PF1T8ArrOf+D0QB5YY=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.005533635140180003], 
         ArrowBox[
          BezierCurveBox[{1, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
            646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 
           659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 3}], 
          0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0FlWAWAAgNFf57QQW7IEC6glVWjUJDRTaS6KNI8iiWgNbg/3fO9fND4e
G4uEEGL8d2IkhEmmSJAkxTQzzDLHPAukWWSJZVZYJcMaWXLkWWeDTbbYZodd
ChTZY58DShxyxDEnnHLGORdcUqbCFddUqXFDnVvuuOeBR5545oVX3njngwaf
NGnxRZtvOvzQpccvfQb8MerhELSdQLQ=
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
            761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 
           774, 775, 776, 6}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
            787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 
           800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 
           813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 
           826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 
           839, 840, 841, 842, 843, 844, 845, 846, 847, 8}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
            858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 
           871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 
           884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 
           897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 
           9}], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0bVRBFAAQMHPkNEFLVECOdAJeri7u7sd7u7u7hKyBDuvgBefmJKQHBNC
SOK/qbEhpJFOBplkESGbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZ
Flppo50OOumimx566aOfAQYZYpgRRhljnAkmiTLFNDPMMsc8CyyyxDIrrLLG
OhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsffPLF
Nz/8EufXH5xwVO4=
           "]], 0.1206844257742101], ArrowBox[{1, 11}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
           1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 
           1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 
           1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 
           1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 
           1069, 13}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 
           1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 
           1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 
           1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 
           1111, 1112, 1113, 14}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0VVSAlAAQNHnjAtwC27JT8FCFBNEFLC7W1Ts7u7AzXn8OHMXcCtjqapk
WQghzn+ry0OIEKWGWuqop4EYjcRpopkELbTSRjsddJIkRRdpusnQQy9ZcuTp
o58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZY50CG2yyRZFtdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb34o8UuFF3+d0Di2

           "]], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0Mk6AmAABdAfZYhQvIBXsrXzALxgkqKMyTwWQjLPhMRpcb773c1d3LHJ
6fGpjhDCBO1MRUKYIc0sGebIkmOeBfIUWGSJZVZYZY0i65TYYJMtttlhlz32
OeCQI44pU+GEU86ocs4Fl9S4os41N9xyxz0PPPLEMy+88sY7H3zS4Itvfmjy
S4s/QtQvdNJFhCjd9NBLHzH6GSDOIEMMkyDJCKPtbvYfexI/Qg==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 
           1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 
           1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 
           1331, 1332, 1333, 1334, 1335, 18}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0Fk6gmEAgNGvi3bQBuyiTA2IyPQLDabKEFFmRckQtu10cZ73/p1qdKNO
LIQQMWkyHkKKaWaYZY550mTIkmOBRZbIs8wKBVZZo8g6G2yyxTYRO5TYZY99
ylSoUuOAQ4445oQ6DZqccsY5F7S45Io219zQocstd9zzwCNPPPNCjz6vvDFg
yDsjPvjki2/G/PDLHwkP/wFvPSGD
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 
           1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 
           1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 
           1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 
           1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 
           1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 
           1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 21}], 
          0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0EN2RAEABMAfTWzbts0j5Ag5QLLLNWPbtp2aRb3ednf51MzkdEQQBLOE
cy4mCOZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXP4KQLUQSRTQxhIgljngSSCSJZFJIJY10Msgk
i2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItueuil
j34GGGSIYUYYZYxxJsKd3fEPLa05og==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{1, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 
           1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 
           1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 
           1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 
           1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 
           1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 23}], 
          0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0bVVBFAAAMFPQg2ktEQJ5EAN6OHu7u52uLu7u0sTDMG8LWDjE1MSkmNC
CEn8NzU2hDTSySCTLCJkk0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNAI000
00IrbbTTQSdddNNDL330M8AgQwwzwihjjDPBJFGmmGaGWeaYZ4FFllhmhVXW
WGeDTbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0++
+OaHX+L8+gMDslDO
           "]], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0McyA2AABOCfkOgR0QlClOi9E5LoXDyCcebF9d7jy+Gbve3Mbvri+vyq
IoRwSTlvoiHccsc9DzzyxDMvvPLGOx988sU3P/zyR4kQ00slEaqoJkqMGmqp
o54GGmkiTjMJWkjSShvtdNBJF9300EuKPvoZIM0gQ2QYZoRRxsgyzgSTTDHN
DLPMMc8CiyyxzAqrrLHOBptssU2OHXbJU6DIHvsccMgRx5xwyll5k+v+ASaS
I7U=
           "]], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0MlagWEAgNHPyj3YdUPUn1ApRQMqQxONmmcVkTTca8fiPO/+nSrWo1os
hBAxaTIeQoppZoiYJc0cGbLkmGeBRfIssUyBFVYpUmKNdTbYpEyFKltss0ON
Og2a7LLHPgcc0qLNEceccMoZ53S44JIrrrnhljvueeCRJ555ocsrb7zTo88H
A4Z8MuKLMd/88MsfCQ//AUwAKQk=
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{2, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 
           1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 
           1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 
           1980, 1981, 1982, 1983, 1984, 4}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{2, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 
           1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 
           2004, 2005, 2006, 2007, 2008, 2009, 2010, 7}], 0.1206844257742101],
          ArrowBox[{2, 12}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{2, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 
           2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 
           2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 
           2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 
           2052, 2053, 2054, 15}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{2, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 
           2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 
           2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 
           2085, 2086, 2087, 2088, 2089, 19}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 
           2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 
           2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 
           2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 
           2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 
           2142, 5}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 
           2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 
           2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 
           2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 
           2184, 2185, 2186, 8}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 
           2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 
           2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 
           2217, 2218, 2219, 2220, 2221, 9}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0GlSAWAAANDP+NO4RVdyBAeom0loU6nQvtJeJNpXSirFjPfjXeCNJsbj
Y5EQQpwoyZEQJkgxSZoMWaaYZoZZ5sgxzwKL5FlimRUKFCmxyhrrbLDJFtvs
sMse+xxQpsIhRxxzwilnnHPBJVVqXFHnmgZNbrjljnseeOSJZ1545Y13WrT5
4JMOX3T55odfevzxT58BMYdD9v1HSw==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 
           2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 
           2321, 2322, 2323, 2324, 2325, 2326, 2327, 13}], 
          0.1206844257742101], ArrowBox[{3, 14}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 
           2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 
           2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 
           2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 
           2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 
           2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 
           2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 16}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 
           2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 
           2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 
           2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 
           2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 
           2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 17}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 
           2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 
           2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 
           2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 
           2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 
           2513, 20}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 
           2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 
           2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 
           2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 
           2555, 2556, 2557, 21}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0NciAlAAANDbQEVGtqxQWdlkZEW2UPLirQ/Q/7/g9HB+4OTancZPJITw
TYzfZAh/hFQIEaLEiNNDL30kSJKinwHSDDLEMCNkGGWMcSaYZIppZsgyyxzz
LLBIjiWWWSFPgSKrrLHOBpuU2GKbHXbZY58DDjmizDEnnHJGhXMuuOSKa6rc
cEuNO+554JEnnnnhlTpvvPNBgyaftPjqHuj9BzS6Fjo=
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 
           2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 
           2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
           2677, 2678, 2679, 2680, 2681, 23}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0ElaAWAAANDfZ9cJbLuSIzhA7SU0qVRoHmkuEs0jJZXiVt7iXeCNJsbj
Y5EQQpwoyZEQJkgxSZoMWaaYZoZZ5sgxzwKL5FlimRUKFCmxyhrrbLDJFtvs
sMse+xxQpsIhRxxzwilnnHPBJVVqXFHnmgZNbrjljnseeOSJZ1545Y13WrT5
4JMOX3T55odfevzxT58BMYdD1D83uQ==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 
           2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 
           2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 
           2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 
           2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 
           2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 
           2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 25}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{3, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 
           2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 
           2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 
           2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 
           2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 
           2885, 26}], 0.1206844257742101], 
         ArrowBox[{4, 15}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{5, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 
           2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 
           2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 
           2916, 2917, 2918, 2919, 2920, 10}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{5, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 
           2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 
           2940, 2941, 2942, 2943, 2944, 2945, 2946, 16}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{5, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 
           2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 
           2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 
           2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 
           2988, 2989, 2990, 22}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{5, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 
           2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 
           3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 
           3021, 3022, 3023, 3024, 3025, 24}], 0.1206844257742101], 
         ArrowBox[{6, 3}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 
           3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 
           3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 
           3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 
           3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 
           3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 5}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 
           3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 
           3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 
           3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 
           3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 
           3140, 8}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 
           3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 
           3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 
           3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 
           3182, 3183, 3184, 9}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0EVWAlAAAMDvhgWPS3gltu44gD7FwMJOwMJWDCxUTGzFQoxbOYu5wDQm
WuLNDSGEJiK0xkJoI0k7HXTSRYpueuilj37SDDDIEMOMMMoY40wwyRTTZMiS
Y4ZZ5phngTyLLLHMCqussc4GmxTYYpsddimyxz4HHHJEiWNOOKXMGedccMkV
11S44ZY77nngkSeeeaHKK2+888EnNb6o880Pv/wR9fwPrMQ84A==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 
           3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 
           3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 
           3304, 3305, 3306, 3307, 3308, 13}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 
           3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 
           3328, 3329, 3330, 3331, 3332, 3333, 3334, 14}], 
          0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0NdCgWEAANDPTSoJadEiJLSM9lBpaKq/eAAPUO9/1+nivMApjn+jn1gI
IWKCeDKESaaYJsEMSWZJkSbDHFnmWWCRJZbJkWeFVdZYZ4MCRTYpUabCFlW2
qVGnwQ677LHPAU1atOlwyBHHnHDKGedccMkVXa654ZYed9zzwCN9nnjmhVfe
eGfAB59EfPHNkNH/jcM/I70UtA==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 
           3423, 3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 
           3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 
           3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 
           3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 
           3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 
           3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 17}], 
          0.1206844257742101], ArrowBox[{6, 18}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 
           3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 
           3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 
           3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 
           3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 
           3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 20}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 
           3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 
           3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 
           3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 
           3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 
           3600, 21}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0Vc7AmAAgNHPjUvPE9lC9sjOLHuvkBXJSDaF/3/huDh/4H3jxUq2XBVC
KFFNpCaEWuqIUk8DjTTRTAuttBGjnQ46idNFNz300kc/AwwyxDAJRhhljHEm
mGSKJNPMMMsc8yyQIs0iSyyzwiprrLPBJltss8Mue+xzwCEZjjjmhCynnHHO
BZfkuOKaPDcUuOWOex4o8kiJJ5554ZU33vngky/KVPjmh9//5l78AZkbIKM=

           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 
           3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 
           3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 
           3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 
           3740, 3741, 3742, 23}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0DVCAlAAANDvwsjM6pVY3TiAHkkxsLATsLAVAwsVE1uxEGP1De8CrzHR
Em9uCCE0EaE1GkIbSdrpoJMuUnTTQy999JNmgEGGGGaEUcYYZ4JJppgmQ5Yc
M8wyxzwL5FlkiWVWWGWNdTbYpMAW2+ywS5E99jngkCNKHHPCKWXOOOeCS664
psINt9xxzwOPPPHMC1VeeeOdDz6p8UWdb3745Y+Y53+rfk2e
           "]], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0Nk6glEAQNHzhwxRJHOkEKLMSYOp6L5H8AB6fUppdbHu97fzX/3edxRC
6BHnJxnCLwOG/DFizD8hFUJEjBlmmSPOPAssskSCZVZIkmKVNdKsk2GDTbbY
Zodd9siyzwE5DslT4IhjTihyyhnnlLjgkjIVrrjmhlvuuOeBKo/UeKJOgyYt
nnnhlTfeadPhg0+603aLJieiGKU=
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{6, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 
           3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 
           3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 
           3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 
           3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 
           3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 26}], 
          0.1206844257742101], ArrowBox[{7, 4}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{7, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 
           3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 
           3993, 3994, 3995, 3996, 3997, 3998, 3999, 15}], 
          0.1206844257742101], ArrowBox[{7, 19}, 0.1206844257742101], 
         ArrowBox[{8, 5}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{8, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 
           4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 
           4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 
           4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 
           4041, 4042, 4043, 10}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{8, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 
           4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062, 
           4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 
           4074, 4075, 4076, 4077, 4078, 16}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{8, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 
           4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 
           4098, 4099, 4100, 4101, 4102, 4103, 4104, 17}], 
          0.1206844257742101], ArrowBox[{8, 20}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{8, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 
           4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 
           4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 
           4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 
           4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 
           4157, 22}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{8, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 
           4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176, 
           4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 
           4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 
           4199, 4200, 4201, 24}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{8, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 
           4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 
           4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 
           4232, 4233, 4234, 4235, 4236, 25}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 
           4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 
           4256, 4257, 4258, 4259, 4260, 4261, 4262, 5}], 0.1206844257742101],
          ArrowBox[{9, 8}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 
           4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 
           4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 
           4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 
           4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 
           4315, 10}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 
           4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 
           4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 
           4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 
           4357, 4358, 4359, 16}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 
           4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 
           4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 
           4390, 4391, 4392, 4393, 4394, 17}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 
           4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 
           4414, 4415, 4416, 4417, 4418, 4419, 4420, 20}], 
          0.1206844257742101], ArrowBox[{9, 21}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 
           4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 
           4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 
           4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 
           4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 
           4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 22}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 
           4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 
           4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 
           4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 
           4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 
           4535, 24}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 
           4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 
           4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 
           4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 
           4577, 4578, 4579, 25}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{9, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 
           4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 
           4599, 4600, 4601, 4602, 4603, 4604, 4605, 26}], 
          0.1206844257742101], ArrowBox[{10, 22}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 
           4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 
           4625, 4626, 4627, 4628, 4629, 4630, 4631, 3}], 0.1206844257742101],
          ArrowBox[
          BezierCurveBox[{11, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 
           4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 
           4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 
           4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 
           4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 
           4684, 4685, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 
           4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 5}], 
          0.1206844257742101], ArrowBox[{11, 6}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 4703, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 
           4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 
           4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 
           4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 
           4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 
           4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 8}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 
           4773, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 
           4784, 4785, 4786, 4787, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 
           4795, 4796, 4797, 4798, 4799, 4800, 4801, 4802, 4803, 4804, 4805, 
           4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 
           4817, 9}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwVz9c6AmAAgOE/IspI2StZ2Rl34hI8jrlXWzYhe8vmdfCef192YXl+KRJC
WCTBSiqEVdZYZ4NNttimwA677LHPAYccccwJRU4545wSF1xyxTU33HLHPQ88
8sQzL7xS5o13Pvjki29++CWkQ4hQQSVRqqgmRg21xElQRz0NNJKkiRRpmmmh
lTba6aCTLrrpoZcMfWTpZ4BBhhgmxwijjDHOBJNMkWeaGWaZ+++09AfhJjg6

           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 
           4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 
           4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 
           4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4956, 
           4957, 4958, 4959, 13}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 4960, 4961, 4962, 4963, 4964, 4965, 4966, 4967, 
           4968, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 
           4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 4989, 
           4990, 4991, 4992, 4993, 4994, 14}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0EVWAlAAAMDvmg3vcQKvxNYdB9BDKAYWdgIWtmJgoWJiKxZiXMZZzAWm
MdESb24IITQRoTUWQhtJ2umgky5SdNNDL330k2aAQYYYZoRRxhhngkmmmCZD
lhwzzDLHPAvkWWSJZVZYZY11NtikwBbb7LBLkT32OeCQI0occ8IpZc4454JL
rrimwg233HHPA4888cwLVV55450PPqnxRZ1vfvjlj6jnf/EbRZw=
           "]], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwVzlkiAlAAQNGXOWVqMkshDbtpCS0gG0aGkjIUIiF1+jjf9+ZqF9V6JIRQ
JcZlMoQrrmlwwy133NOkxQNtHunQ5YlnXnilR5833vlgwCdfDPlmxA+//DHm
nwkhFUKEOeZZYJElllkhyiox4qyxzgabbJEgSYo0GbbZYZc99jngkCOyHJMj
zwmnnFHgnCIlylRmLctTcoktVg==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 
           5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 
           5183, 5184, 5185, 5186, 5187, 5188, 5189, 18}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 
           5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 
           5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 
           5220, 5221, 5222, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5230, 
           5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 
           5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 
           5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 20}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 
           5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 
           5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 
           5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 
           5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 
           5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 21}], 
          0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwVz8VVA1AAAMEfHIIESHAL7k4jlMAdKBQL7u7ursNhzvs2OTY5OhEJIYwT
ZSoewjQzzDJHinkWWGSJZVZYZY11Nthki2122GWPfQ445IhjTjjljHMuuOSK
a2645Y57HnjkiWdeeOWNdz745ItvfvglJEKIkEY6GWSSRTY55JJHlHwKKKSI
GMWUUEqcBGWUU0ElVVRTQy111NNAkkaaaKaFVtpop4NOuuimh1766GeAQYYY
ZuS/b+0Ptvc/1A==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 
           5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 
           5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 
           5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 
           5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 
           5482, 23}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0UVWAlAAAMDv2rXvsfVKHoHnTgXFbrGxwO7EVlDs7tZDOYs5wZRG42Wx
ohBCOcVUlIRQSRUx4lRTQ4Ja6qingUaaaKaFVtpop4NOukjSTQ+99NHPAIOk
GGKYEUYZI02GcSaYZIppZphljnkWWGSJZVZYZY11NsiyyRbb7LDLHvsccEiO
PEccU+CEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/6IuPgH7MxF
zA==
           "]], 0.1206844257742101], ArrowBox[BezierCurveBox[CompressedData["
1:eJwVztc6AmAAgOG/MlJmlD1CN9RpZy6AKzXKjGRL2TNEvB28h9/zfNmVtfxq
JIRQIMl6OoQNNtmiSIltdthlj30OKHPIERWOqXLCKWecc8ElV1xT44Y6DW65
454HHnnimRdeeeOdD5p88sU3LX74pc0fIRNChCgxuuimh17i9JEgST8DDDLE
MCOkGGWMNBnGmWCSKaaZYZY55lkgyyJLLJPrNNb+Ac6cOjc=
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{11, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 
           5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 
           5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 
           5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 
           5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 
           5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 
           5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 26}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{12, 5741, 5742, 5743, 5744, 5745, 5746, 5747, 5748, 
           5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 
           5760, 5761, 5762, 5763, 5764, 5765, 5766, 4}], 0.1206844257742101],
          ArrowBox[{12, 7}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{12, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 
           5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 
           5786, 5787, 5788, 5789, 5790, 5791, 5792, 5793, 5794, 5795, 5796, 
           5797, 5798, 5799, 5800, 5801, 15}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{12, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 
           5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 
           5821, 5822, 5823, 5824, 5825, 5826, 5827, 19}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 
           5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 
           5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 
           5858, 5859, 5860, 5861, 5862, 5}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 
           5871, 5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881, 
           5882, 5883, 5884, 5885, 5886, 5887, 5888, 8}], 0.1206844257742101],
          ArrowBox[{13, 9}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 
           5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906, 5907, 
           5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 
           5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 
           5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 5940, 
           5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5950, 10}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 5951, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 
           5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 
           5970, 5971, 5972, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 
           5981, 5982, 5983, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 
           5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 
           6003, 16}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6004, 6005, 6006, 6007, 6008, 6009, 6010, 6011, 
           6012, 6013, 6014, 6015, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 
           6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 
           6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 
           6045, 6046, 6047, 17}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 
           6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 
           6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 
           6078, 6079, 6080, 6081, 6082, 20}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 
           6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 
           6102, 6103, 6104, 6105, 6106, 6107, 6108, 21}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6116, 
           6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 
           6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6138, 
           6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 
           6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 
           6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6170, 6171, 
           6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 22}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 
           6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 
           6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 
           6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 
           6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 
           6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 24}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 
           6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 
           6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 6270, 6271, 
           6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 
           6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 
           6294, 25}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{13, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 
           6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 
           6314, 6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 
           6325, 6326, 6327, 6328, 6329, 26}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 
           6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 
           6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 
           6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 
           6371, 6372, 6373, 5}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 
           6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6391, 6392, 
           6393, 6394, 6395, 6396, 6397, 6398, 6399, 6400, 6401, 6402, 6403, 
           6404, 6405, 6406, 6407, 6408, 8}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 
           6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 
           6428, 6429, 6430, 6431, 6432, 6433, 6434, 9}], 0.1206844257742101],
          ArrowBox[
          BezierCurveBox[{14, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 
           6443, 6444, 6445, 6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453, 
           6454, 6455, 6456, 6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464, 
           6465, 6466, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, 6475, 
           6476, 6477, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 
           6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 
           6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 10}], 
          0.1206844257742101], ArrowBox[{14, 13}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 
           6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 
           6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 
           6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 
           6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 
           6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 16}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6568, 6569, 6570, 6571, 6572, 6573, 6574, 6575, 
           6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 
           6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 
           6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, 6606, 6607, 6608, 
           6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 
           6620, 17}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6621, 6622, 6623, 6624, 6625, 6626, 6627, 6628, 
           6629, 6630, 6631, 6632, 6633, 6634, 6635, 6636, 6637, 6638, 6639, 
           6640, 6641, 6642, 6643, 6644, 6645, 6646, 6647, 6648, 6649, 6650, 
           6651, 6652, 6653, 6654, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 
           6662, 6663, 6664, 20}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 
           6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 
           6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 
           6695, 6696, 6697, 6698, 6699, 21}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0NdCgWEAANDPC3Tpwp37lJGmBg0JjZ/2pKnxK4XGy3cuzgucdLcfxYkQ
QsQEk6kQMkwxTZYceQrMUGSWOeZZYJElSiyzwiprlKmwzgabbFFlmxo71GnQ
ZJc99jkgokWbQ4445oRTzjjngkuuuOaGDl1uueOeBx55osczL7zyRkyfdz4Y
8MkXQ0aM+eaHX/5IOvwHTFskYg==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 
           6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 
           6799, 6800, 6801, 6802, 6803, 6804, 6805, 23}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 
           6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 
           6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 
           6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 
           6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 
           6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 
           6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 24}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 
           6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 
           6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 
           6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 
           6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 
           6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 25}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{14, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 
           6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 
           6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 6966, 6967, 6968, 
           6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 
           6980, 6981, 6982, 26}], 0.1206844257742101], 
         ArrowBox[{16, 10}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{16, 6983, 6984, 6985, 6986, 6987, 6988, 6989, 6990, 
           6991, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 
           7002, 7003, 7004, 7005, 7006, 7007, 7008, 22}], 
          0.1206844257742101], ArrowBox[{16, 24}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{17, 7009, 7010, 7011, 7012, 7013, 7014, 7015, 7016, 
           7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 
           7028, 7029, 7030, 7031, 7032, 7033, 7034, 10}], 
          0.1206844257742101], ArrowBox[{17, 16}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{17, 7035, 7036, 7037, 7038, 7039, 7040, 7041, 7042, 
           7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 
           7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 
           7065, 7066, 7067, 7068, 7069, 22}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{17, 7070, 7071, 7072, 7073, 7074, 7075, 7076, 7077, 
           7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7086, 7087, 7088, 
           7089, 7090, 7091, 7092, 7093, 7094, 7095, 24}], 
          0.1206844257742101], ArrowBox[{17, 25}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 7103, 
           7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 
           7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 
           7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 
           7137, 7138, 7139, 7140, 7141, 7142, 7143, 7144, 7145, 7146, 7147, 
           7148, 5}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7156, 
           7157, 7158, 7159, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, 
           7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 
           7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 
           7190, 7191, 7192, 8}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 
           7201, 7202, 7203, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 
           7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 
           7223, 7224, 7225, 7226, 7227, 9}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0EkigmEAANCvbcvWbdwjRMiQ6VehwVAhoUiEzCTq0t7iXeBN1TpROxZC
iEiQSoYwzQyzpJljngwLLLJElmVWWGWNHOtssMkW20TskKdAkV322KdEmQpV
DjjkiGNq1GlwwilnNDmnxQWXXNGmwzU3dLmlxx339HngkScGPPPCK2+888En
X3wz5IcRv/wxZkLc4T/2mCn6
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7308, 7309, 7310, 7311, 7312, 7313, 7314, 7315, 
           7316, 7317, 7318, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 7326, 
           7327, 7328, 7329, 7330, 7331, 7332, 7333, 13}], 
          0.1206844257742101], ArrowBox[{18, 14}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7334, 7335, 7336, 7337, 7338, 7339, 7340, 7341, 
           7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7351, 7352, 
           7353, 7354, 7355, 7356, 7357, 7358, 7359, 7360, 7361, 7362, 7363, 
           7364, 7365, 7366, 7367, 7368, 7369, 7370, 7371, 7372, 7373, 7374, 
           7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 
           7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 
           7397, 7398, 7399, 7400, 7401, 7402, 7403, 7404, 16}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 
           7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 
           7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 
           7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 
           7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 
           7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 17}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 
           7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 
           7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 
           7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 
           7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 
           7519, 20}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 
           7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 
           7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 
           7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 
           7561, 7562, 7563, 21}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0MVBAlAAANDvChy4cXAlrt4YQBdRDCzsBCxsxcBCxcRWLMQYxHd4C7zG
REu8uSGE0ESE1lgIbSRpp4NOukjRTQ+99NFPmgEGGWKYEUYZY5wJJplimgxZ
cswwyxzzLJBnkSWWWWGVNdbZYJMCW2yzwy5F9tjngEOOKHHMCaeUOeOcCy65
4poKN9xyxz0PPPLEMy9UeeWNdz74pMYXdb754Zc/op7/AbdgTEQ=
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 
           7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 7671, 
           7672, 7673, 7674, 7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 
           7683, 7684, 7685, 7686, 7687, 23}], 0.1206844257742101], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwV0MkigmEAQNGvXSkihVJRhtBgKiTzECLyC3sPwPvvnBbnAe6t/PxFv7EQ
QkSGeDmEBFMkSTHNDGlmmSPDPFlyLLDIEnkKLFOkRJkVVqlQZY11Ntikxhbb
7FCnQZMWu+yxzwGHtOlwxDEndDmlxxnnXHDJFdfccMsd9/R54JEnBjzzwpBX
3hjxTsQHYz754nvS7+E/09oaaA==
           "]], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 
           7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 
           7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 
           7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 
           7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 
           7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 
           7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 25}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{18, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 
           7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 
           7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 
           7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 
           7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 
           7891, 26}], 0.1206844257742101], 
         ArrowBox[{19, 15}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{20, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 
           7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 
           7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 
           7922, 7923, 7924, 7925, 7926, 10}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{20, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 
           7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 
           7946, 7947, 7948, 7949, 7950, 7951, 7952, 16}], 
          0.1206844257742101], ArrowBox[{20, 17}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{20, 7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 
           7961, 7962, 7963, 7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 
           7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 
           7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 
           7994, 7995, 7996, 22}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{20, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 
           8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 
           8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 
           8027, 8028, 8029, 8030, 8031, 24}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{20, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 
           8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 
           8051, 8052, 8053, 8054, 8055, 8056, 8057, 25}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{21, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 
           8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 
           8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 
           8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 
           8099, 8100, 8101, 10}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{21, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 
           8110, 8111, 8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 
           8121, 8122, 8123, 8124, 8125, 8126, 8127, 8128, 8129, 8130, 8131, 
           8132, 8133, 8134, 8135, 8136, 16}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{21, 8137, 8138, 8139, 8140, 8141, 8142, 8143, 8144, 
           8145, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, 
           8156, 8157, 8158, 8159, 8160, 8161, 8162, 17}], 
          0.1206844257742101], ArrowBox[{21, 20}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{21, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 
           8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 
           8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 
           8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 
           8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 
           8215, 22}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{21, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 
           8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 
           8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, 
           8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, 8256, 
           8257, 8258, 8259, 24}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{21, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 
           8268, 8269, 8270, 8271, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 
           8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 
           8290, 8291, 8292, 8293, 8294, 25}], 0.1206844257742101], 
         ArrowBox[{21, 26}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 
           8303, 8304, 8305, 8306, 8307, 8308, 8309, 8310, 8311, 8312, 8313, 
           8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 
           8325, 8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 
           8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 
           8347, 10}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8348, 8349, 8350, 8351, 8352, 8353, 8354, 8355, 
           8356, 8357, 8358, 8359, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 
           8367, 8368, 8369, 8370, 8371, 8372, 8373, 8374, 8375, 8376, 8377, 
           8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8388, 
           8389, 8390, 8391, 16}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8392, 8393, 8394, 8395, 8396, 8397, 8398, 8399, 
           8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 
           8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 
           8422, 8423, 8424, 8425, 8426, 17}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8427, 8428, 8429, 8430, 8431, 8432, 8433, 8434, 
           8435, 8436, 8437, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 
           8446, 8447, 8448, 8449, 8450, 8451, 8452, 20}], 
          0.1206844257742101], ArrowBox[{23, 21}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8453, 8454, 8455, 8456, 8457, 8458, 8459, 8460, 
           8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, 8470, 8471, 
           8472, 8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8482, 
           8483, 8484, 8485, 8486, 8487, 8488, 8489, 8490, 8491, 8492, 8493, 
           8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 
           8505, 8506, 8507, 8508, 8509, 8510, 8511, 8512, 8513, 8514, 22}], 
          0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8515, 8516, 8517, 8518, 8519, 8520, 8521, 8522, 
           8523, 8524, 8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, 
           8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 
           8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 
           8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 
           8567, 24}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 
           8576, 8577, 8578, 8579, 8580, 8581, 8582, 8583, 8584, 8585, 8586, 
           8587, 8588, 8589, 8590, 8591, 8592, 8593, 8594, 8595, 8596, 8597, 
           8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8607, 8608, 
           8609, 8610, 8611, 25}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{23, 8612, 8613, 8614, 8615, 8616, 8617, 8618, 8619, 
           8620, 8621, 8622, 8623, 8624, 8625, 8626, 8627, 8628, 8629, 8630, 
           8631, 8632, 8633, 8634, 8635, 8636, 8637, 26}], 
          0.1206844257742101], ArrowBox[{24, 22}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{25, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 
           8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 
           8657, 8658, 8659, 8660, 8661, 8662, 8663, 22}], 
          0.1206844257742101], ArrowBox[{25, 24}, 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{26, 8664, 8665, 8666, 8667, 8668, 8669, 8670, 8671, 
           8672, 8673, 8674, 8675, 8676, 8677, 8678, 8679, 8680, 8681, 8682, 
           8683, 8684, 8685, 8686, 8687, 8688, 8689, 8690, 8691, 8692, 8693, 
           8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, 8704, 
           8705, 8706, 8707, 22}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{26, 8708, 8709, 8710, 8711, 8712, 8713, 8714, 8715, 
           8716, 8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 
           8727, 8728, 8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 
           8738, 8739, 8740, 8741, 8742, 24}], 0.1206844257742101], 
         ArrowBox[
          BezierCurveBox[{26, 8743, 8744, 8745, 8746, 8747, 8748, 8749, 8750, 
           8751, 8752, 8753, 8754, 8755, 8756, 8757, 8758, 8759, 8760, 8761, 
           8762, 8763, 8764, 8765, 8766, 8767, 8768, 25}], 
          0.1206844257742101]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.1206844257742101], DiskBox[2, 0.1206844257742101], 
         DiskBox[3, 0.1206844257742101], DiskBox[4, 0.1206844257742101], 
         DiskBox[5, 0.1206844257742101], DiskBox[6, 0.1206844257742101], 
         DiskBox[7, 0.1206844257742101], DiskBox[8, 0.1206844257742101], 
         DiskBox[9, 0.1206844257742101], DiskBox[10, 0.1206844257742101], 
         DiskBox[11, 0.1206844257742101], DiskBox[12, 0.1206844257742101], 
         DiskBox[13, 0.1206844257742101], DiskBox[14, 0.1206844257742101], 
         DiskBox[15, 0.1206844257742101], DiskBox[16, 0.1206844257742101], 
         DiskBox[17, 0.1206844257742101], DiskBox[18, 0.1206844257742101], 
         DiskBox[19, 0.1206844257742101], DiskBox[20, 0.1206844257742101], 
         DiskBox[21, 0.1206844257742101], DiskBox[22, 0.1206844257742101], 
         DiskBox[23, 0.1206844257742101], DiskBox[24, 0.1206844257742101], 
         DiskBox[25, 0.1206844257742101], DiskBox[26, 0.1206844257742101]}}]],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{625.1041666666673, Automatic}]], "Output",
 CellChangeTimes->{{3.8840158072246017`*^9, 3.8840158505646763`*^9}, 
   3.884015890708253*^9, 3.8840159526522417`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"6e34a7e9-7877-49df-9211-28afaa2e6bd0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["For a list of weights we use ", "Text"],
 StyleBox["HighestWeights", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884015467337222*^9, 3.884015524667067*^9}, {
  3.88401587047622*^9, 3.884015961224642*^9}, {3.884016014535932*^9, 
  3.884016031624633*^9}},ExpressionUUID->"8c462406-9185-434e-8326-\
aa4eb5e82164"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighestWeights", "[", "weightList", "]"}]], "Input",
 CellLabel->
  "In[197]:=",ExpressionUUID->"eb701bd3-cf62-4acb-a58f-eff6039b8aa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"(1, 1, 1)\"\>", ",", "\<\"(2, 2, 0)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.884015861663813*^9, 3.884015886501742*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"f1c743e6-f1aa-4d41-822d-afdc82c625b4"]
}, Open  ]],

Cell[TextData[{
 StyleBox["For an expression which is given by a sum of characters we can use \
", "Text"],
 StyleBox["HighestWeightsFrom", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884015467337222*^9, 3.884015524667067*^9}, {
  3.88401587047622*^9, 3.884015961224642*^9}, {3.884016014535932*^9, 
  3.884016088350728*^9}},ExpressionUUID->"bb267da4-7bfd-4c38-9c22-\
638c6a43d479"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testCharacter", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Chi]", "[", "ir", "]"}], "[", 
      RowBox[{"z1", ",", "z2", ",", "z3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ir", ",", "irrepList"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8840161866950483`*^9, 3.884016192239356*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"c1946b83-913f-4ebb-b5b2-bb9ff51aeec1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HighestWeightsFrom", "[", "g", "]"}], "[", 
  RowBox[{"testCharacter", ",", 
   RowBox[{"{", 
    RowBox[{"z1", ",", "z2", ",", "z3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884016126890112*^9, 3.884016130373678*^9}, {
  3.884016195161972*^9, 3.884016201147814*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"0ef9ed62-0233-4479-b969-96a539385276"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"(2, 2, 0)\"\>", ",", "\<\"(1, 1, 1)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.884016201648612*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"b5a080b2-2670-4a99-86ae-5c757aa3a1e8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1512, 916},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CommonDefaultFormatTypes->{"Output"->StandardForm},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34198238-be23-4156-b652-397db17bc3a0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 82, "Section",ExpressionUUID->"b661c40a-4385-4ae6-be4e-5d7f719fa41a"],
Cell[CellGroupData[{
Cell[765, 29, 155, 3, 65, "Subsection",ExpressionUUID->"29d58b42-35b8-495d-bf29-a9cd8fe45bde"],
Cell[923, 34, 329, 6, 62, "Input",ExpressionUUID->"1c573df5-af7d-4920-af24-0326480323d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1289, 45, 174, 3, 65, "Subsection",ExpressionUUID->"868099ee-d77a-4353-8ef8-adb99d4bac0b"],
Cell[CellGroupData[{
Cell[1488, 52, 155, 3, 54, "Subsubsection",ExpressionUUID->"0b62021d-7957-402c-bbae-b0abbb5a78f4"],
Cell[1646, 57, 541, 14, 41, "Text",ExpressionUUID->"dcce6ae0-d0c8-4769-a567-1f03955f8438"],
Cell[CellGroupData[{
Cell[2212, 75, 377, 7, 36, "Input",ExpressionUUID->"dbf9e049-4076-4667-9cc9-ce6103aad4fe"],
Cell[2592, 84, 296, 5, 40, "Output",ExpressionUUID->"fb2e382f-6ab4-4d6b-a285-21252c8c1ece"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2925, 94, 483, 13, 36, "Input",ExpressionUUID->"128e6245-4034-4425-8826-73db089382b6"],
Cell[3411, 109, 269, 4, 40, "Output",ExpressionUUID->"68679287-e39d-418a-8602-98cdf52f25ca"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3729, 119, 235, 4, 44, "Subsubsection",ExpressionUUID->"473735e5-61fe-4ef4-a905-35a260a119cc"],
Cell[3967, 125, 542, 15, 41, "Text",ExpressionUUID->"65c57878-5b09-4275-988d-621d66362723"],
Cell[CellGroupData[{
Cell[4534, 144, 571, 14, 36, "Input",ExpressionUUID->"ed9a2da5-dd19-49f8-acf3-27e68cddc5c4"],
Cell[5108, 160, 430, 10, 40, "Output",ExpressionUUID->"5a961c14-88a9-4316-8f67-66a464afdde2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5575, 175, 1165, 30, 137, "Input",ExpressionUUID->"7b276194-24d6-4032-a47c-0884fbbb9bb6"],
Cell[6743, 207, 883, 25, 40, "Output",ExpressionUUID->"31f6cb21-2eb5-4fe6-9cf5-68c217fbf639"],
Cell[7629, 234, 603, 13, 40, "Output",ExpressionUUID->"6479d747-a092-43fc-95a2-4e1fde1334fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8269, 252, 443, 11, 36, "Input",ExpressionUUID->"ca173b40-2b8f-4ccf-9a99-cbc04afc9e90"],
Cell[8715, 265, 580, 12, 34, "Message",ExpressionUUID->"89f7a9f9-56b6-4c9b-aa44-364a1c9b113c"],
Cell[9298, 279, 254, 6, 40, "Output",ExpressionUUID->"2c0e1de0-9094-475a-b86f-ebfdae87d190"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9601, 291, 248, 4, 44, "Subsubsection",ExpressionUUID->"868981db-0d2f-462e-936c-2e7af404a16c"],
Cell[9852, 297, 438, 14, 41, "Text",ExpressionUUID->"44040783-32a4-46aa-be33-5e6934d02587"],
Cell[CellGroupData[{
Cell[10315, 315, 413, 8, 62, "Input",ExpressionUUID->"b5a0fa3b-2043-461c-b957-eda786f8da88"],
Cell[10731, 325, 271, 5, 40, "Output",ExpressionUUID->"f82e110f-c3f7-4d11-b067-dcd98f67950e"],
Cell[11005, 332, 609, 18, 57, "Output",ExpressionUUID->"1c5e23b2-f160-42db-9a58-960c4287c0c3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11663, 356, 265, 4, 44, "Subsubsection",ExpressionUUID->"1f08ea82-80ed-4b46-b345-f17c7cbd86f5"],
Cell[CellGroupData[{
Cell[11953, 364, 813, 19, 87, "Input",ExpressionUUID->"7fab4dd9-d7ed-44bc-a09d-e999a1a6e576"],
Cell[12769, 385, 765, 22, 57, "Output",ExpressionUUID->"959bfddf-410d-47e7-98c4-98ebc4d5ba1e"],
Cell[13537, 409, 763, 22, 57, "Output",ExpressionUUID->"03d78e57-447d-4f5b-ad84-6df4169e0fbe"],
Cell[14303, 433, 178, 2, 40, "Output",ExpressionUUID->"399291cf-4948-4820-98a5-de7b44f6d4cb"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14542, 442, 221, 4, 45, "Subsection",ExpressionUUID->"e8032ead-062f-4292-a277-68cd63f72543"],
Cell[14766, 448, 897, 22, 68, "Text",ExpressionUUID->"9871147f-6019-4d71-808c-fcc6cda8e7af"],
Cell[CellGroupData[{
Cell[15688, 474, 409, 9, 36, "Input",ExpressionUUID->"5ad76150-6782-4bb5-aa2f-79208a46e8e6"],
Cell[16100, 485, 1679, 51, 101, "Output",ExpressionUUID->"5d79d71c-fcb0-4f14-89c4-366b587a24dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17816, 541, 439, 10, 36, "Input",ExpressionUUID->"dd26873a-248e-479a-8823-de688f87fd9e"],
Cell[18258, 553, 1521, 49, 101, "Output",ExpressionUUID->"e0543beb-d823-4b50-85e0-751c72710af3"]
}, Open  ]],
Cell[19794, 605, 279, 7, 41, "Text",ExpressionUUID->"8ea1185e-eb63-49e4-857b-f52cb60aa19f"],
Cell[CellGroupData[{
Cell[20098, 616, 261, 5, 36, "Input",ExpressionUUID->"d5ed359c-86ac-4467-a781-b8c056d5dc3e"],
Cell[20362, 623, 283, 7, 57, "Output",ExpressionUUID->"0a7614f7-3b92-4956-8143-a0fc68c8820e"]
}, Open  ]],
Cell[20660, 633, 315, 9, 41, "Text",ExpressionUUID->"22b1a6cb-7df2-4bb2-a7f1-77555bef841f"],
Cell[CellGroupData[{
Cell[21000, 646, 448, 12, 36, "Input",ExpressionUUID->"e38fec6f-2eda-49a9-b22c-13260803b2f7"],
Cell[21451, 660, 152, 2, 40, "Output",ExpressionUUID->"ee347e0c-a2e5-4c20-a76b-0756e69ee072"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21640, 667, 1310, 39, 62, "Input",ExpressionUUID->"8c353f3d-18f9-4145-8312-6effb0ccd62a"],
Cell[22953, 708, 175, 2, 40, "Output",ExpressionUUID->"caeba353-0d33-4415-b754-7eeb4de23f0f"]
}, Open  ]],
Cell[23143, 713, 410, 11, 41, "Text",ExpressionUUID->"f4078465-72c1-40f0-9a54-dd0e81779ebf"],
Cell[CellGroupData[{
Cell[23578, 728, 1166, 30, 112, "Input",ExpressionUUID->"6ced0bc0-05e4-46fc-927a-a0d6506207af"],
Cell[24747, 760, 957, 30, 57, "Output",ExpressionUUID->"98f90d3c-832f-4dd3-aec0-ba489849762a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25753, 796, 268, 4, 45, "Subsection",ExpressionUUID->"c85958a0-425b-4cc6-b012-b2ae8d4a1fb3"],
Cell[26024, 802, 483, 12, 42, "Text",ExpressionUUID->"06ae731a-70be-4dca-a85f-54f58ed8d30a"],
Cell[CellGroupData[{
Cell[26532, 818, 801, 22, 87, "Input",ExpressionUUID->"b31750e3-a27f-48a7-8ff0-8d6bc3bdf9ec"],
Cell[27336, 842, 1172, 31, 40, "Output",ExpressionUUID->"1ca44523-fa3e-49e8-87c3-5489985d5704"],
Cell[28511, 875, 1325, 39, 66, "Output",ExpressionUUID->"84813759-6e65-45d4-a9a0-14548c2506aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29873, 919, 658, 17, 112, "Input",ExpressionUUID->"6604e00d-ae31-458c-ac2b-a190f3f8cc45"],
Cell[30534, 938, 2718, 104, 66, "Output",ExpressionUUID->"f21ad6b1-f2c5-456a-8384-0438e08adc63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33289, 1047, 434, 9, 87, "Input",ExpressionUUID->"3be6b673-e4c4-4c48-80ed-d802b4b9eff6"],
Cell[33726, 1058, 7344, 195, 183, "Output",ExpressionUUID->"b25960d6-fdde-4e78-baf1-70cfce122c12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41107, 1258, 417, 10, 36, "Input",ExpressionUUID->"31d52b63-1799-4455-82b5-86e505d404c9"],
Cell[41527, 1270, 1776, 54, 66, "Output",ExpressionUUID->"9b562023-5feb-4a1a-8792-361007ab4555"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43340, 1329, 559, 16, 36, "Input",ExpressionUUID->"18d75325-db77-4f5c-ae4f-ebce898ede3c"],
Cell[43902, 1347, 181, 3, 40, "Output",ExpressionUUID->"fa528121-1898-45ee-8c28-5275662071f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44132, 1356, 309, 5, 65, "Subsection",ExpressionUUID->"17697f98-b914-4fc1-896b-ef20324aa0e8"],
Cell[44444, 1363, 295, 6, 41, "Text",ExpressionUUID->"29abf6a9-19fa-423b-8991-45fdec7e7437"],
Cell[CellGroupData[{
Cell[44764, 1373, 882, 24, 112, "Input",ExpressionUUID->"936a9579-9d30-4bb9-bc32-276b255144fa"],
Cell[45649, 1399, 560, 13, 40, "Output",ExpressionUUID->"dccd830f-334f-47ae-a711-3355fcb38686"]
}, Open  ]],
Cell[46224, 1415, 375, 8, 41, "Text",ExpressionUUID->"97a453d2-9e9d-47d1-86eb-159b6c14ae4d"],
Cell[CellGroupData[{
Cell[46624, 1427, 511, 12, 36, "Input",ExpressionUUID->"1ab32007-7b29-48f3-ad61-739d5206e474"],
Cell[47138, 1441, 228951, 3742, 306, "Output",ExpressionUUID->"6e34a7e9-7877-49df-9211-28afaa2e6bd0"]
}, Open  ]],
Cell[276104, 5186, 339, 7, 41, "Text",ExpressionUUID->"8c462406-9185-434e-8326-aa4eb5e82164"],
Cell[CellGroupData[{
Cell[276468, 5197, 159, 3, 36, "Input",ExpressionUUID->"eb701bd3-cf62-4acb-a58f-eff6039b8aa6"],
Cell[276630, 5202, 254, 5, 40, "Output",ExpressionUUID->"f1c743e6-f1aa-4d41-822d-afdc82c625b4"]
}, Open  ]],
Cell[276899, 5210, 383, 8, 41, "Text",ExpressionUUID->"bb267da4-7bfd-4c38-9c22-638c6a43d479"],
Cell[277285, 5220, 457, 12, 36, "Input",ExpressionUUID->"c1946b83-913f-4ebb-b5b2-bb9ff51aeec1"],
Cell[CellGroupData[{
Cell[277767, 5236, 394, 9, 36, "Input",ExpressionUUID->"0ef9ed62-0233-4479-b969-96a539385276"],
Cell[278164, 5247, 230, 5, 40, "Output",ExpressionUUID->"b5a080b2-2670-4a99-86ae-5c757aa3a1e8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

