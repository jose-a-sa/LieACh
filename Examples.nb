(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    138445,       3007]
NotebookOptionsPosition[    129734,       2849]
NotebookOutlinePosition[    130186,       2866]
CellTagsIndexPosition[    130143,       2863]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["LieARTCharacters", "Section",
 CellChangeTimes->{{3.88401097970796*^9, 
  3.884010987393569*^9}},ExpressionUUID->"b661c40a-4385-4ae6-be4e-\
5d7f719fa41a"],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.8840110155713863`*^9, 
  3.884011023950601*^9}},ExpressionUUID->"29d58b42-35b8-495d-bf29-\
a9cd8fe45bde"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "LieARTCharacters`"}]}], "Input",
 CellChangeTimes->{{3.884010936915288*^9, 3.8840109628442802`*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"1c573df5-af7d-4920-af24-0326480323d3"],

Cell[CellGroupData[{

Cell[BoxData["\<\"LieART 2.1.0\"\>"], "Print",
 CellChangeTimes->{3.902332949530336*^9},
 CellLabel->
  "During evaluation of \
In[688]:=",ExpressionUUID->"88ca7f65-d09e-4970-9e33-b66f1ea8c311"],

Cell[BoxData["\<\"last revised 31 March 2022\"\>"], "Print",
 CellChangeTimes->{3.902332949531567*^9},
 CellLabel->
  "During evaluation of \
In[688]:=",ExpressionUUID->"40761bac-26d1-4094-b046-fb6bfa630f50"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LieART extension/modding", "Subsection",
 CellChangeTimes->{{3.884010990795101*^9, 
  3.8840110102941313`*^9}},ExpressionUUID->"868099ee-d77a-4353-8ef8-\
adb99d4bac0b"],

Cell[CellGroupData[{

Cell["Rank", "Subsubsection",
 CellChangeTimes->{{3.884011316485297*^9, 
  3.884011316971752*^9}},ExpressionUUID->"0b62021d-7957-402c-bbae-\
b0abbb5a78f4"],

Cell[TextData[{
 StyleBox["Rank", "CodeText"],
 " now works with ",
 StyleBox["ProductAlgebra", "CodeText"],
 ", ",
 StyleBox["ProductIrrep", "CodeText"],
 " and ",
 StyleBox["ProductWeight", "CodeText"],
 ", returning the rank of the underlying algebra."
}], "Text",
 CellChangeTimes->{{3.884011095810356*^9, 3.884011121809248*^9}, {
  3.884011170762121*^9, 3.8840112338187017`*^9}, {3.8840112768966007`*^9, 
  3.884011308137843*^9}, {3.884011395898981*^9, 
  3.884011396663286*^9}},ExpressionUUID->"dcce6ae0-d0c8-4769-a567-\
1f03955f8438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rank", "@", 
  RowBox[{"ProductAlgebra", "[", 
   RowBox[{"A2", ",", "A2", ",", "A2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.88401103316008*^9, 3.8840110465447903`*^9}, {
  3.8840110824829283`*^9, 3.884011083383575*^9}, {3.884011238853725*^9, 
  3.8840112684876328`*^9}},
 CellLabel->
  "In[690]:=",ExpressionUUID->"dbf9e049-4076-4667-9cc9-ce6103aad4fe"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.884011046910884*^9, 3.884011083851695*^9, {3.884011261798167*^9, 
   3.8840112746491337`*^9}, 3.884012081405504*^9, 3.8840122904090548`*^9, 
   3.88401284108405*^9, 3.902332959525908*^9},
 CellLabel->
  "Out[690]=",ExpressionUUID->"1a53bf1f-0d86-4006-a197-4cb51e1f7562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rank", "@", 
  RowBox[{"ProductWeight", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Weight", "[", "A2", "]"}], "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Weight", "[", "A2", "]"}], "[", 
     RowBox[{"1", ",", "1"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Weight", "[", "A2", "]"}], "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[691]:=",ExpressionUUID->"128e6245-4034-4425-8826-73db089382b6"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.884011046910884*^9, 3.884011083851695*^9, {3.884011261800785*^9, 
   3.884011272888282*^9}, 3.8840122913428907`*^9, 3.884012842776554*^9, 
   3.902332960917362*^9},
 CellLabel->
  "Out[691]=",ExpressionUUID->"59716a32-c8e2-46a9-8d44-7dbb16700090"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Algebra", "Subsubsection",
 CellChangeTimes->{{3.8840113550059757`*^9, 3.884011355012158*^9}, 
   3.884011385331081*^9, {3.884012970332817*^9, 
   3.8840129709355793`*^9}},ExpressionUUID->"473735e5-61fe-4ef4-a905-\
35a260a119cc"],

Cell[TextData[{
 StyleBox["Algebra", "CodeText"],
 " gives the correct result for ",
 StyleBox["ProductIrrep", "CodeText"],
 ", ",
 StyleBox["ProductWeight", "CodeText"],
 ", ",
 StyleBox["IrrepPlus", "CodeText"],
 " and ",
 StyleBox["IrrepTimes", "CodeText"],
 " returning the algebra we are working with."
}], "Text",
 CellChangeTimes->{{3.884011404072083*^9, 3.884011408495973*^9}, {
  3.884011476540657*^9, 3.8840115800470123`*^9}, {3.884011730772943*^9, 
  3.884011731501114*^9}},ExpressionUUID->"65c57878-5b09-4275-988d-\
621d66362723"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Algebra", "@", 
  RowBox[{"ProductIrrep", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", "A1", "]"}], "[", "1", "]"}], ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "D2", "]"}], "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "B2", "]"}], "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.884011583008068*^9, 3.884011611158246*^9}, {
  3.884011657056391*^9, 3.884011665509986*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"ed9a2da5-dd19-49f8-acf3-27e68cddc5c4"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubscriptBox["A", "1"], "\[Times]", 
   SubscriptBox["D", "2"], "\[Times]", 
   SubscriptBox["B", "2"]}],
  DisplayForm]], "Output",
 CellChangeTimes->{3.884011611725185*^9, 3.884011666290289*^9, 
  3.88401208331526*^9, 3.884012255724965*^9, 3.8840122923419867`*^9, 
  3.884012845296873*^9, 3.8840129661411753`*^9, 3.9023329641955013`*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"8dc7e600-caf1-4729-a436-52b7f7157314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"IrrepPlus", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ProductIrrep", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Irrep", "[", "A2", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A2", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A2", "]"}], "[", 
      RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"IrrepTimes", "[", 
    RowBox[{"3", ",", 
     RowBox[{"ProductIrrep", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Irrep", "[", "A2", "]"}], "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", "A2", "]"}], "[", 
        RowBox[{"1", ",", "0"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", "A2", "]"}], "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Algebra"}]}], "Input",
 CellChangeTimes->{{3.884011679640655*^9, 3.884011763547717*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"7b276194-24d6-4032-a47c-0884fbbb9bb6"],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox[
    RowBox[{
    "(", "\<\"(10)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{"3", 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(01)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm]}],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.884011694657383*^9, {3.884011756031642*^9, 3.884011763879632*^9}, 
   3.88401212031386*^9, 3.884012173230687*^9, 3.884012256612632*^9, 
   3.8840122934815397`*^9, {3.8840124826928864`*^9, 3.884012486043446*^9}, 
   3.884012739952858*^9, {3.884012795784227*^9, 3.884012874981475*^9}, 
   3.884012933400621*^9, 3.884012964623252*^9, 3.9023329743758793`*^9},
 CellLabel->
  "Out[693]=",ExpressionUUID->"36b41cc9-2c8c-4ace-a212-0259e34d968a"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubscriptBox["A", "2"], "\[Times]", 
   SubscriptBox["A", "2"], "\[Times]", 
   SubscriptBox["A", "2"]}],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.884011694657383*^9, {3.884011756031642*^9, 3.884011763879632*^9}, 
   3.88401212031386*^9, 3.884012173230687*^9, 3.884012256612632*^9, 
   3.8840122934815397`*^9, {3.8840124826928864`*^9, 3.884012486043446*^9}, 
   3.884012739952858*^9, {3.884012795784227*^9, 3.884012874981475*^9}, 
   3.884012933400621*^9, 3.884012964623252*^9, 3.902332974378274*^9},
 CellLabel->
  "Out[694]=",ExpressionUUID->"bba64efc-7171-4636-befc-7a93e2350fb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Algebra", "@", 
  RowBox[{"IrrepPlus", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", "D2", "]"}], "[", 
     RowBox[{"1", ",", "0"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "A2", "]"}], "[", 
     RowBox[{"0", ",", "1"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.884012508820093*^9, 3.884012535253869*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"ca173b40-2b8f-4ccf-9a99-cbc04afc9e90"],

Cell[BoxData[
 TemplateBox[{
  "Algebra", "irrplusdiff", 
   "\"IrrepPlus contains irreps of different algebras \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[\\\"A\\\", \\\"2\\\"], \\\",\
\\\", SubscriptBox[\\\"D\\\", \\\"2\\\"]}], \\\"}\\\"}]\\).\"", 2, 695, 66, 
   20336083389840376946, "Local", "LieART`Algebra"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.884012876751007*^9, 3.884012892900065*^9}, {
   3.884012931675845*^9, 3.884012962265718*^9}, 3.9023329770956707`*^9},
 CellLabel->
  "During evaluation of \
In[695]:=",ExpressionUUID->"07bb5558-3693-4793-9525-da9218c6490f"],

Cell[BoxData[
 RowBox[{"Algebra", "[", 
  TagBox[
   RowBox[{"\<\"(10)\"\>", "+", "\<\"(01)\"\>"}],
   DisplayForm], "]"}]], "Output",
 CellChangeTimes->{3.884012962284778*^9, 3.902332977104025*^9},
 CellLabel->
  "Out[695]=",ExpressionUUID->"13a683f2-f889-4f5b-82e4-121f753c2cc7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Irrep / ProductIrrep and Weight / Product Weight", "Subsubsection",
 CellChangeTimes->{{3.884012997349537*^9, 3.884013011135583*^9}, {
  3.884013118784316*^9, 
  3.884013149715111*^9}},ExpressionUUID->"868981db-0d2f-462e-936c-\
2e7af404a16c"],

Cell[TextData[{
 StyleBox["Irrep", "CodeText"],
 "/",
 StyleBox["Weight", "CodeText"],
 " of ",
 StyleBox["ProductAlgebra", "CodeText"],
 " automatically expands to ",
 StyleBox["ProductIrrep", "CodeText"],
 "/",
 StyleBox["ProductWeight.", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884013023233449*^9, 3.88401305182836*^9}, {
   3.884013156472313*^9, 3.884013188552456*^9}, 
   3.902332995945417*^9},ExpressionUUID->"44040783-32a4-46aa-be33-\
5e6934d02587"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Irrep", "[", 
   RowBox[{"ProductAlgebra", "[", 
    RowBox[{"A1", ",", "A2", ",", "A1"}], "]"}], "]"}], "[", 
  RowBox[{"1", ",", "1", ",", "0", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.884013063225379*^9, 3.884013102142991*^9}},
 CellLabel->
  "In[698]:=",ExpressionUUID->"b5a0fa3b-2043-461c-b957-eda786f8da88"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\<\"(1)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(2)\"\>", ")"}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.884013084912125*^9, 3.884013102371204*^9}, {
  3.902332988150983*^9, 3.9023330090404863`*^9}},
 CellLabel->
  "Out[698]=",ExpressionUUID->"f626a8a9-f03f-47a5-8698-0ae6043181db"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"ProductIrrep", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", "1", "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", "2", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.884013084912125*^9, 3.884013102371204*^9}, {
  3.902332988150983*^9, 3.902333009042609*^9}},
 CellLabel->
  "Out[699]//FullForm=",ExpressionUUID->"34775543-9baa-4de7-9bad-\
0f660921192b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["WeylDimensionFormula", "Subsubsection",
 CellChangeTimes->{{3.884012997349537*^9, 3.884013011135583*^9}, {
  3.884013118784316*^9, 3.884013149715111*^9}, {3.88401320706824*^9, 
  3.884013214301572*^9}},ExpressionUUID->"1f08ea82-80ed-4b46-b345-\
f17c7cbd86f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeylDimensionFormula", "[", 
   RowBox[{"ProductAlgebra", "[", 
    RowBox[{"A2", ",", "A2", ",", "A2"}], "]"}], "]"}], "[", 
  RowBox[{"x1", ",", "x2", ",", "y1", ",", "y2", ",", "z1", ",", "z2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WeylDimensionFormula", "[", "A2", "]"}], "[", 
   RowBox[{"x1", ",", "x2"}], "]"}], 
  RowBox[{
   RowBox[{"WeylDimensionFormula", "[", "A2", "]"}], "[", 
   RowBox[{"y1", ",", "y2"}], "]"}], 
  RowBox[{
   RowBox[{"WeylDimensionFormula", "[", "A2", "]"}], "[", 
   RowBox[{"z1", ",", "z2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "==", "%%"}]}], "Input",
 CellChangeTimes->{{3.8840132233881207`*^9, 3.884013307498105*^9}},
 CellLabel->
  "In[700]:=",ExpressionUUID->"7fab4dd9-d7ed-44bc-a09d-e999a1a6e576"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "y1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "z1", "+", "z2"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8840132355048447`*^9, 3.8840133078880672`*^9}, 
   3.902333017445068*^9},
 CellLabel->
  "Out[700]=",ExpressionUUID->"a10f421b-47e0-4a88-be9e-6bab9387ccb1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x1", "+", "x2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "y1", "+", "y2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z1"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "z2"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "z1", "+", "z2"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8840132355048447`*^9, 3.8840133078880672`*^9}, 
   3.902333017446804*^9},
 CellLabel->
  "Out[701]=",ExpressionUUID->"44d50ca5-4afa-4b21-96a1-16320ff1f43e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8840132355048447`*^9, 3.8840133078880672`*^9}, 
   3.902333017448328*^9},
 CellLabel->
  "Out[702]=",ExpressionUUID->"6298ee3c-093f-40e5-8285-c660dcad9142"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Computation of characters", "Subsection",
 CellChangeTimes->{{3.884013332545327*^9, 3.884013344086482*^9}, {
  3.88401342795712*^9, 
  3.884013429317543*^9}},ExpressionUUID->"e8032ead-062f-4292-a277-\
68cd63f72543"],

Cell[TextData[{
 StyleBox["\[Chi][", "CodeText"],
 StyleBox["irrep", "CodeText",
  FontSlant->"Italic"],
 StyleBox["]", "CodeText"],
 " computes the \[OpenCurlyDoubleQuote]pure function\[CloseCurlyDoubleQuote] \
using ",
 StyleBox["WeightSystem[", "CodeText"],
 StyleBox["irrep", "CodeText",
  FontSlant->"Italic"],
 StyleBox["]", "CodeText"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "of LieART and saves it in the current session memory since the computation \
of the weights can be time consuming.\nThe variable ",
 StyleBox["$SaveCharacterDefinitions", "CodeText"],
 " can be modified if memory is a concern."
}], "Text",
 CellChangeTimes->{{3.884013023233449*^9, 3.88401305182836*^9}, {
  3.884013156472313*^9, 3.884013188552456*^9}, {3.8840134959102182`*^9, 
  3.884013683813949*^9}, {3.884013716423148*^9, 
  3.8840137515174093`*^9}},ExpressionUUID->"9871147f-6019-4d71-808c-\
fcc6cda8e7af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]", "[", 
  RowBox[{
   RowBox[{"Irrep", "[", "E6", "]"}], "[", 
   RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884013431735806*^9, 3.884013481911578*^9}, {
  3.884014037091353*^9, 3.884014044055287*^9}, {3.884014113066992*^9, 
  3.884014120375955*^9}},ExpressionUUID->"5ad76150-6782-4bb5-aa2f-\
79208a46e8e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "+", 
   FractionBox["#2", "#1"], "+", 
   FractionBox["#3", "#2"], "+", 
   FractionBox["#2", "#4"], "+", 
   FractionBox["#3", 
    RowBox[{"#1", " ", "#4"}]], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#3"}], 
    RowBox[{"#2", " ", "#4"}]], "+", 
   FractionBox["#4", "#3"], "+", 
   FractionBox["1", "#5"], "+", 
   FractionBox["#4", 
    RowBox[{"#1", " ", "#5"}]], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#4"}], 
    RowBox[{"#2", " ", "#5"}]], "+", 
   FractionBox[
    RowBox[{"#2", " ", "#4"}], 
    RowBox[{"#3", " ", "#5"}]], "+", 
   FractionBox["#5", "#1"], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#5"}], "#2"], "+", 
   FractionBox[
    RowBox[{"#2", " ", "#5"}], "#3"], "+", 
   FractionBox["#5", "#4"], "+", 
   FractionBox["#1", "#6"], "+", 
   FractionBox["#2", 
    RowBox[{"#1", " ", "#6"}]], "+", 
   FractionBox["#3", 
    RowBox[{"#2", " ", "#6"}]], "+", 
   FractionBox["#4", "#6"], "+", 
   FractionBox["#3", 
    RowBox[{"#5", " ", "#6"}]], "+", 
   FractionBox[
    RowBox[{"#3", " ", "#5"}], 
    RowBox[{"#4", " ", "#6"}]], "+", 
   FractionBox["#6", "#2"], "+", 
   FractionBox[
    RowBox[{"#1", " ", "#6"}], "#3"], "+", 
   FractionBox[
    RowBox[{"#2", " ", "#6"}], 
    RowBox[{"#1", " ", "#3"}]], "+", 
   FractionBox[
    RowBox[{"#4", " ", "#6"}], "#3"], "+", 
   FractionBox["#6", "#5"], "+", 
   FractionBox[
    RowBox[{"#5", " ", "#6"}], "#4"]}], "&"}]], "Output",
 CellChangeTimes->{{3.884013435221586*^9, 3.884013482531439*^9}, {
   3.884014037581314*^9, 3.884014044430498*^9}, 3.884014115474679*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"5d79d71c-fcb0-4f14-89c4-366b587a24dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"Irrep", "[", "E6", "]"}], "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
   "]"}], "[", 
  RowBox[{"z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8840139520136833`*^9, 3.884013960416803*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"dd26873a-248e-479a-8823-de688f87fd9e"],

Cell[BoxData[
 RowBox[{"z1", "+", 
  FractionBox["z2", "z1"], "+", 
  FractionBox["z3", "z2"], "+", 
  FractionBox["z2", "z4"], "+", 
  FractionBox["z3", 
   RowBox[{"z1", " ", "z4"}]], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z3"}], 
   RowBox[{"z2", " ", "z4"}]], "+", 
  FractionBox["z4", "z3"], "+", 
  FractionBox["1", "z5"], "+", 
  FractionBox["z4", 
   RowBox[{"z1", " ", "z5"}]], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z4"}], 
   RowBox[{"z2", " ", "z5"}]], "+", 
  FractionBox[
   RowBox[{"z2", " ", "z4"}], 
   RowBox[{"z3", " ", "z5"}]], "+", 
  FractionBox["z5", "z1"], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z5"}], "z2"], "+", 
  FractionBox[
   RowBox[{"z2", " ", "z5"}], "z3"], "+", 
  FractionBox["z5", "z4"], "+", 
  FractionBox["z1", "z6"], "+", 
  FractionBox["z2", 
   RowBox[{"z1", " ", "z6"}]], "+", 
  FractionBox["z3", 
   RowBox[{"z2", " ", "z6"}]], "+", 
  FractionBox["z4", "z6"], "+", 
  FractionBox["z3", 
   RowBox[{"z5", " ", "z6"}]], "+", 
  FractionBox[
   RowBox[{"z3", " ", "z5"}], 
   RowBox[{"z4", " ", "z6"}]], "+", 
  FractionBox["z6", "z2"], "+", 
  FractionBox[
   RowBox[{"z1", " ", "z6"}], "z3"], "+", 
  FractionBox[
   RowBox[{"z2", " ", "z6"}], 
   RowBox[{"z1", " ", "z3"}]], "+", 
  FractionBox[
   RowBox[{"z4", " ", "z6"}], "z3"], "+", 
  FractionBox["z6", "z5"], "+", 
  FractionBox[
   RowBox[{"z5", " ", "z6"}], "z4"]}]], "Output",
 CellChangeTimes->{3.8840139605396233`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"e0543beb-d823-4b50-85e0-751c72710af3"]
}, Open  ]],

Cell[TextData[{
 "By default, ",
 StyleBox["Algebra[A][n]", "CodeText"],
 " algebra family is used if a list of Dynkin labels is provided."
}], "Text",
 CellChangeTimes->{{3.8840141323679323`*^9, 
  3.884014193564559*^9}},ExpressionUUID->"8ea1185e-eb63-49e4-857b-\
f52cb60aa19f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.884014206789999*^9, 3.884014211179237*^9}},
 CellLabel->
  "In[703]:=",ExpressionUUID->"d5ed359c-86ac-4467-a781-b8c056d5dc3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "+", 
   FractionBox["#2", "#1"], "+", 
   FractionBox["1", "#3"], "+", 
   FractionBox["#3", "#2"]}], "&"}]], "Output",
 CellChangeTimes->{3.8840142115932827`*^9, 3.902333055208967*^9},
 CellLabel->
  "Out[703]=",ExpressionUUID->"2bb9f3ab-c3af-4fe2-a5ab-42bfeba5265f"]
}, Open  ]],

Cell[TextData[{
 "There are different ways of calling ",
 StyleBox["\[Chi]", "CodeText"],
 ". Additionally, ",
 StyleBox["ProductAlgebra", "CodeText"],
 " also is compatible."
}], "Text",
 CellChangeTimes->{{3.8840142274545383`*^9, 
  3.884014285918055*^9}},ExpressionUUID->"22b1a6cb-7df2-4bb2-a7f1-\
77555bef841f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{"E6", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "==", 
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"Irrep", "[", "E6", "]"}], "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"e38fec6f-2eda-49a9-b22c-13260803b2f7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.884014123971818*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"ee347e0c-a2e5-4c20-a76b-0756e69ee072"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"ProductAlgebra", "[", 
     RowBox[{"A2", ",", "B2", ",", "C2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}], "==", 
  RowBox[{"\[Chi]", "[", 
   RowBox[{"ProductIrrep", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Irrep", "[", "A", "]"}], "[", 
      RowBox[{"1", ",", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "B", "]"}], "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "C", "]"}], "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "]"}], "]"}], "==", 
  RowBox[{"\[Chi]", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A2", ",", "B2", ",", "C2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8840142992751303`*^9, 3.884014400340033*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"8c353f3d-18f9-4145-8312-6effb0ccd62a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.88401437786381*^9, 3.884014401927328*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"caeba353-0d33-4415-b754-7eeb4de23f0f"]
}, Open  ]],

Cell[TextData[{
 "More importantly, ",
 StyleBox["IrrepPlus", "CodeText"],
 " and ",
 StyleBox["IrrepTimes", "CodeText"],
 " automatically expand and give the correct result in terms of character sum \
and multiplication."
}], "Text",
 CellChangeTimes->{{3.8840142274545383`*^9, 3.884014285918055*^9}, {
  3.884014446437587*^9, 
  3.88401452909198*^9}},ExpressionUUID->"f4078465-72c1-40f0-9a54-\
dd0e81779ebf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]", "[", 
  RowBox[{"IrrepPlus", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProductIrrep", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Irrep", "[", "A2", "]"}], "[", 
       RowBox[{"1", ",", "0"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "A2", "]"}], "[", 
       RowBox[{"1", ",", "0"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "A2", "]"}], "[", 
       RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"IrrepTimes", "[", 
     RowBox[{"3", ",", 
      RowBox[{"ProductIrrep", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Irrep", "[", "A2", "]"}], "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "A2", "]"}], "[", 
         RowBox[{"1", ",", "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "A2", "]"}], "[", 
         RowBox[{"0", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.884014425104817*^9, 3.884014432679089*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"6ced0bc0-05e4-46fc-927a-a0d6506207af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "#1"], "+", 
      FractionBox["#1", "#2"], "+", "#2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"#3", "+", 
      FractionBox["1", "#4"], "+", 
      FractionBox["#4", "#3"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "#5"], "+", 
      FractionBox["#5", "#6"], "+", "#6"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#1", "+", 
      FractionBox["1", "#2"], "+", 
      FractionBox["#2", "#1"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"#3", "+", 
      FractionBox["1", "#4"], "+", 
      FractionBox["#4", "#3"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "#5"], "+", 
      FractionBox["#5", "#6"], "+", "#6"}], ")"}]}]}], "&"}]], "Output",
 CellChangeTimes->{3.884014433141383*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"98f90d3c-832f-4dd3-aec0-ba489849762a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Character sum decomposition", "Subsection",
 CellChangeTimes->{{3.884013332545327*^9, 3.884013344086482*^9}, {
  3.88401342795712*^9, 3.884013429317543*^9}, {3.88401458263761*^9, 
  3.884014603647668*^9}},ExpressionUUID->"c85958a0-425b-4cc6-b012-\
b2ae8d4a1fb3"],

Cell[TextData[{
 "Assume a random ansatz for a product algebra of three ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "2"], TraditionalForm]],ExpressionUUID->
  "abccd0e4-0f98-4452-a9cc-36fe8807ad3b"],
 " algebras"
}], "Text",
 CellChangeTimes->{{3.8840142274545383`*^9, 3.884014285918055*^9}, {
  3.884014616646057*^9, 3.88401462862405*^9}, {3.884014677494151*^9, 
  3.884014713596581*^9}},ExpressionUUID->"06ae731a-70be-4dca-a85f-\
54f58ed8d30a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ProductAlgebra", "[", 
    RowBox[{"A2", ",", "A2", ",", "A2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"irrepSampleList", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", 
      RowBox[{"Rank", "[", "g", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"irrepList", "=", 
  RowBox[{
   RowBox[{"Irrep", "[", "g", "]"}], "@@@", "irrepSampleList"}]}]}], "Input",
 CellChangeTimes->{{3.88401463255737*^9, 3.884014675203121*^9}, {
  3.884014722465705*^9, 3.8840148323384523`*^9}, {3.8840153583371058`*^9, 
  3.884015389134953*^9}},
 CellLabel->
  "In[704]:=",ExpressionUUID->"b31750e3-a27f-48a7-8ff0-8d6bc3bdf9ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0", ",", "3", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "2", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "3", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "1", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "2", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.884014664723146*^9, 3.8840146754032907`*^9}, {
   3.884014723175087*^9, 3.884014728278356*^9}, {3.884014777200972*^9, 
   3.8840148325646753`*^9}, {3.884015359029847*^9, 3.88401538930338*^9}, 
   3.902333071583069*^9},
 CellLabel->
  "Out[705]=",ExpressionUUID->"d9a82582-81c5-4de2-a34b-ba99f3572bf2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
    "(", "\<\"(21)\"\>", ",", "\<\"(03)\"\>", ",", "\<\"(31)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(21)\"\>", ",", "\<\"(22)\"\>", ",", "\<\"(31)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(23)\"\>", ",", "\<\"(13)\"\>", ",", "\<\"(31)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(01)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(11)\"\>", ",", "\<\"(01)\"\>", ",", "\<\"(22)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(33)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(11)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(20)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(20)\"\>", ")"}],
    DisplayForm], ",", 
   TagBox[
    RowBox[{
    "(", "\<\"(11)\"\>", ",", "\<\"(23)\"\>", ",", "\<\"(21)\"\>", ")"}],
    DisplayForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.884014664723146*^9, 3.8840146754032907`*^9}, {
   3.884014723175087*^9, 3.884014728278356*^9}, {3.884014777200972*^9, 
   3.8840148325646753`*^9}, {3.884015359029847*^9, 3.88401538930338*^9}, 
   3.902333071585446*^9},
 CellLabel->
  "Out[706]=",ExpressionUUID->"863fe315-62ab-45fc-9dfe-b059c197d50b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"irrepAnsatz", "=", 
  RowBox[{"IrrepPlus", "@@", 
   RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rep", ",", "i"}], "}"}], ",", 
       RowBox[{"IrrepTimes", "[", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"First", "@", "i"}], "]"}], ",", "rep"}], "]"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "irrepList"}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.884014882883583*^9, 3.884015039033518*^9}},
 CellLabel->
  "In[707]:=",ExpressionUUID->"6604e00d-ae31-458c-ac2b-a190f3f8cc45"],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox[
    RowBox[{
     FractionBox["7", "2"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(21)\"\>", ",", "\<\"(03)\"\>", ",", "\<\"(31)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["17", "4"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(21)\"\>", ",", "\<\"(22)\"\>", ",", "\<\"(31)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["14", "3"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(23)\"\>", ",", "\<\"(13)\"\>", ",", "\<\"(31)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["89", "18"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(01)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["277", "54"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(11)\"\>", ",", "\<\"(01)\"\>", ",", "\<\"(22)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["1709", "324"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(33)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(11)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["10489", "1944"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(20)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(20)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm], "+", 
   TagBox[
    RowBox[{
     FractionBox["64109", "11664"], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
        "(", "\<\"(11)\"\>", ",", "\<\"(23)\"\>", ",", "\<\"(21)\"\>", ")"}],
        DisplayForm],
       StandardForm],
      Format[#, StandardForm]& ]}],
    DisplayForm]}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.884014887494569*^9, 3.884014893802636*^9}, {
   3.884015008121768*^9, 3.88401503969662*^9}, {3.884015360817031*^9, 
   3.884015390890664*^9}, 3.902333075244231*^9},
 CellLabel->
  "Out[707]=",ExpressionUUID->"34635ab9-c0d6-4394-bb03-8eb275fc3c9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ansatz", "=", 
  RowBox[{"Expand", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "[", "irrepAnsatz", "]"}], "[", 
    RowBox[{"z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
    "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8840150441394587`*^9, 3.884015080348651*^9}},
 CellLabel->
  "In[708]:=",ExpressionUUID->"3be6b673-e4c4-4c48-80ed-d802b4b9eff6"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{
       FractionBox["9329", 
        RowBox[{"81", " ", "z3"}]], "+", 
       FractionBox["3418", 
        RowBox[{"81", " ", 
          SuperscriptBox["z1", "3"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"3418", " ", 
          SuperscriptBox["z1", "3"]}], 
        RowBox[{"81", " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"1709", " ", 
          SuperscriptBox["z1", "3"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "6"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"1709", " ", "z1"}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "5"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"1709", " ", 
          SuperscriptBox["z1", "4"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "5"], " ", "z3"}]], "+", 
       FractionBox["1709", 
        RowBox[{"81", " ", "z1", " ", 
          SuperscriptBox["z2", "4"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"3418", " ", 
          SuperscriptBox["z1", "2"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "4"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"1709", " ", 
          SuperscriptBox["z1", "5"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "4"], " ", "z3"}]], "+", 
       FractionBox["3418", 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "3"], " ", "z3"}]], "+", 
       FractionBox["1709", 
        RowBox[{"81", " ", 
          SuperscriptBox["z1", "3"], " ", 
          SuperscriptBox["z2", "3"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"3418", " ", 
          SuperscriptBox["z1", "3"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "3"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"1709", " ", 
          SuperscriptBox["z1", "6"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "3"], " ", "z3"}]], "+", 
       FractionBox["3418", 
        RowBox[{"81", " ", 
          SuperscriptBox["z1", "2"], " ", 
          SuperscriptBox["z2", "2"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"4249", " ", "z1"}], 
        RowBox[{"54", " ", 
          SuperscriptBox["z2", "2"], " ", "z3"}]], "+", 
       FractionBox[
        RowBox[{"3418", " ", 
          SuperscriptBox["z1", "4"]}], 
        RowBox[{"81", " ", 
          SuperscriptBox["z2", "2"], " ", "z3"}]], "+", 
       FractionBox["1709", 
        RowBox[{"81", " ", 
          SuperscriptBox["z1", "4"], " ", "z2", " ", "z3"}]], "+", 
       TemplateBox[{"18447"}, "OutputSizeLimit`Skeleton"], "+", 
       FractionBox[
        RowBox[{"277", " ", "z1", " ", "z2", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z3", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", 
          SuperscriptBox["z2", "2"], " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z1", " ", "z3", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"27", " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z1", " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", 
          SuperscriptBox["z2", "2"], " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z1", " ", "z2", " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", 
          SuperscriptBox["z1", "2"], " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z2", " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z2", " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", 
          SuperscriptBox["z1", "2"], " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z1", " ", "z2", " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", 
          SuperscriptBox["z2", "2"], " ", "z3", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z1", " ", "z4", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"27", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z1", " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", 
          SuperscriptBox["z2", "2"], " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z1", " ", "z2", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", 
          SuperscriptBox["z1", "2"], " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z2", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z2", " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", 
          SuperscriptBox["z1", "2"], " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", "z1", " ", "z2", " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", 
          SuperscriptBox["z5", "2"]}]], "+", 
       FractionBox[
        RowBox[{"277", " ", 
          SuperscriptBox["z2", "2"], " ", "z4", " ", 
          SuperscriptBox["z6", "4"]}], 
        RowBox[{"54", " ", "z1", " ", 
          SuperscriptBox["z5", "2"]}]]}], Short[#, 8]& ], "line" -> 708, 
   "sessionID" -> 20336083389840376946, "byteCount" -> 8440464, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.8840150808013163`*^9, {3.884015368999968*^9, 3.884015392804146*^9}, 
   3.902333077406461*^9},
 CellLabel->
  "Out[708]=",ExpressionUUID->"fdb5d073-780b-4645-a3e6-3ae7967742d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomp", "=", 
  RowBox[{
   RowBox[{"CharacterDecomposition", "[", "g", "]"}], "[", 
   RowBox[{"ansatz", ",", 
    RowBox[{"{", 
     RowBox[{"z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8840151014955482`*^9, 3.8840151538422537`*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"31d52b63-1799-4455-82b5-86e505d404c9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(21)\"\>", ",", "\<\"(22)\"\>", ",", "\<\"(31)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["17", "4"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(23)\"\>", ",", "\<\"(13)\"\>", ",", "\<\"(31)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["14", "3"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(33)\"\>", ",", "\<\"(12)\"\>", ",", "\<\"(11)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["1709", "324"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(11)\"\>", ",", "\<\"(23)\"\>", ",", "\<\"(21)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["64109", "11664"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(20)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(20)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["10489", "1944"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(21)\"\>", ",", "\<\"(03)\"\>", ",", "\<\"(31)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["7", "2"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(01)\"\>", ",", "\<\"(10)\"\>", ",", "\<\"(01)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["89", "18"]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{
     "(", "\<\"(11)\"\>", ",", "\<\"(01)\"\>", ",", "\<\"(22)\"\>", ")"}],
     DisplayForm], "\[Rule]", 
    FractionBox["277", "54"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8840151216155653`*^9, 3.884015145434812*^9}, {
   3.884015372442933*^9, 3.884015396657662*^9}, 3.902333090513754*^9},
 CellLabel->
  "Out[709]=",ExpressionUUID->"1a616054-e69f-45c5-b5f4-722d13427ab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"KeyValueMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#2", " ", 
        RowBox[{
         RowBox[{"\[Chi]", "[", "#1", "]"}], "[", 
         RowBox[{
         "z1", ",", "z2", ",", "z3", ",", "z4", ",", "z5", ",", "z6"}], 
         "]"}]}], "&"}], ",", "decomp"}], "]"}]}], "-", "ansatz"}], "//", 
  "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.884015270791093*^9, 3.884015350220532*^9}},
 CellLabel->
  "In[710]:=",ExpressionUUID->"18d75325-db77-4f5c-ae4f-ebce898ede3c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8840153097916327`*^9, 3.8840153986157207`*^9}, 
   3.902333118021716*^9},
 CellLabel->
  "Out[710]=",ExpressionUUID->"ef958e83-1a55-412f-877d-dd5bfa8c5317"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Highest weights", "Subsection",
 CellChangeTimes->{{3.884013332545327*^9, 3.884013344086482*^9}, {
  3.88401342795712*^9, 3.884013429317543*^9}, {3.88401458263761*^9, 
  3.884014603647668*^9}, {3.8840154239375973`*^9, 
  3.8840154317888393`*^9}},ExpressionUUID->"17697f98-b914-4fc1-896b-\
ef20324aa0e8"],

Cell["\<\
For the computation of the decomposition it is necessary to order the \
dominant weights and extract the highest weights from a given expression.\
\>", "Text",
 CellChangeTimes->{{3.884015467337222*^9, 
  3.884015524667067*^9}},ExpressionUUID->"29abf6a9-19fa-423b-8991-\
45fdec7e7437"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "B3"}], ";"}], "\n", 
 RowBox[{"irrepSampleList", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"Rank", "[", "g", "]"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"irrepList", "=", 
   RowBox[{
    RowBox[{"Irrep", "[", "g", "]"}], "@@@", "irrepSampleList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"WeightSystem", "/@", "irrepList"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.884015521853207*^9, 3.884015548449753*^9}, {
   3.884015606029909*^9, 3.884015687673534*^9}, 3.884015745475643*^9, {
   3.884015837624578*^9, 3.884015846781291*^9}},
 CellLabel->
  "In[747]:=",ExpressionUUID->"936a9579-9d30-4bb9-bc32-276b255144fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8840155401950903`*^9, 3.8840155548924303`*^9}, {
   3.8840156359715567`*^9, 3.884015690623682*^9}, 3.88401574572849*^9, {
   3.8840158378888083`*^9, 3.884015848867319*^9}, 3.884015884507325*^9, {
   3.9023331417616367`*^9, 3.902333188210496*^9}},
 CellLabel->
  "Out[748]=",ExpressionUUID->"de7da0df-eb99-4080-aa8c-e54b3194394c"]
}, Open  ]],

Cell[TextData[{
 "The highest weights can be computed as the  root nodes of a relation graph. \
We compute the well-known weak ordering using ",
 StyleBox["DominantWeightOrder", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884015467337222*^9, 3.884015524667067*^9}, {
  3.88401587047622*^9, 
  3.884015961224642*^9}},ExpressionUUID->"97a453d2-9e9d-47d1-86eb-\
159b6c14ae4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelationGraph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DominantWeightOrder", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], ">", "0"}], " ", "&"}], ",", 
   RowBox[{"Union", "@", 
    RowBox[{"DominantWeights", "@", "weightList"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884015783817086*^9, 3.8840158285849*^9}, 
   3.884015888820827*^9, {3.884015948673883*^9, 3.884015952273016*^9}},
 CellLabel->
  "In[751]:=",ExpressionUUID->"1ab32007-7b29-48f3-ad61-739d5206e474"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       LieART`Weight[LieART`B][0, 0, 0], 
       LieART`Weight[LieART`B][0, 0, 1], 
       LieART`Weight[LieART`B][0, 0, 3], 
       LieART`Weight[LieART`B][0, 1, 0], 
       LieART`Weight[LieART`B][0, 1, 1], 
       LieART`Weight[LieART`B][0, 1, 3], 
       LieART`Weight[LieART`B][0, 2, 1], 
       LieART`Weight[LieART`B][1, 0, 0], 
       LieART`Weight[LieART`B][1, 0, 1], 
       LieART`Weight[LieART`B][1, 0, 3], 
       LieART`Weight[LieART`B][1, 1, 1], 
       LieART`Weight[LieART`B][1, 2, 1], 
       LieART`Weight[LieART`B][2, 0, 0], 
       LieART`Weight[LieART`B][2, 0, 1], 
       LieART`Weight[LieART`B][2, 0, 3], 
       LieART`Weight[LieART`B][2, 1, 1], 
       LieART`Weight[LieART`B][3, 0, 1]}, {
       SparseArray[
       Automatic, {17, 17}, 0, {
        1, {{0, 3, 15, 23, 24, 34, 36, 40, 42, 53, 58, 65, 65, 65, 73, 74, 76,
           79}, {{4}, {8}, {13}, {3}, {5}, {6}, {7}, {9}, {10}, {11}, {12}, {
          14}, {15}, {16}, {17}, {6}, {7}, {10}, {11}, {12}, {15}, {16}, {
          17}, {13}, {3}, {6}, {7}, {10}, {11}, {12}, {14}, {15}, {16}, {
          17}, {12}, {15}, {6}, {12}, {15}, {16}, {4}, {13}, {3}, {5}, {6}, {
          7}, {10}, {11}, {12}, {14}, {15}, {16}, {17}, {6}, {7}, {12}, {
          15}, {16}, {6}, {7}, {10}, {12}, {15}, {16}, {17}, {6}, {7}, {10}, {
          11}, {12}, {15}, {16}, {17}, {12}, {12}, {15}, {12}, {15}, {16}}}, 
         Pattern}], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxMXHk81O8TR7mvdR+72F2sm133WeNMKemQIqWSShSlS0UHUUkHpYTkiCQU
UlJNSCElqZQ7R3KkQ0WU3yf7bX/+8nr3PM8885l5ZuY9Tx60tVsXr+fh4uJa
LczF9fdn6GK9SzxAgtQPK35yMw0x4yPjRs91FiyVdpzFe0AAy7a/yOIiMUH7
GJ2YJ49LE9f+/ff/5htj4593xDjrv3Fp3BhwyX/FEwOQcTy9kJuqhjHzn0+N
szEda2S0p+1nhLoHFDx+HzP9bz0J5VsyiHm6/82nYnzXILHe4r9xCs7Utw8d
6zf8b1wTc3abT5Nnghliw8R8a46+xoKy1ACXf/MZ2FjYQoybcfQbtPxMYBvO
fv99N0e/Goe/8qU52NLebho2xpCOt9PsQ8KQolfTsDRWGrVMsw8Jl7eef/tq
UJuDN7673GH6TJ0zP8iISk2QV+Hoz/zM3u/f99efvmt/iE+Jo+/ndXJNBsEq
HPv61rUR+xly5GeEvJ2GpbF754NpWB5zt05OwxRUe9M4zV9UFNCrNYzP0+PI
y65csOJ3pTZHXl9ev4jINw2OvNt7L/21K0feRPjd67M7zDjrl+7sIORbcdYv
9ftC4Fmc9aMzlUedlFU580mUO803Zypw5n+ee6Z0fC+JM9/nP3/9289HrMnm
bKLw/+2zYw7jRwSJYx+3sAqdKC15jv/7Vvt/XZeryjkf++xSf9K9LTj7V2q9
nzof//YftTuw9MY1jf/7M6H+o2wY7f/6dZW/k/klx9GvoNFo6nz+0+/zNeZz
1Jfi6FfvvC6Z4i3L0W9jP8VKTU6Nox+FLDdTo3kWZz9XrcOyxbttOfspP/09
dHGvHWe/WSKjS7gE7Dn7Sb43dwt6bsfZ75n156uKm+w4+yUp/epRm2XFkT9S
XMTnc2YWR36o0J6fNReBIz/t7Q9Cvh1H/pPvSX/txsHmyw51ijlqcPY73xHP
3SGhydlv97F04qc+Z3526NUp/G/+7ZHMqfj/N3775uW/6zj4vGfAF8Vxtf+f
z+BFWmQuBkf++dplWR0zNDj2k48vuBF3UJfj32xSPvFTmyNv46vcKfxPnnxE
0rT8Q0fnh68XdmXr/T+fiTZNi28KWrv/jXdTznq1a++mYTo6RH0gsDln/u7S
1THvd6pz7ClP+msP6v/t5wtCRU/p//++4bAXIZ9UOfLiBd9OyyfyuHJh9zRM
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
/UQ+LG4T+ZNe7Xk0rraLqPdVV0T+pD7zZ3hwPtiClitL5E9KGnM480G9LQw+
8BT5k6aRpxLzyVYynz4tXN3mEGAL+vdHbI0g5tNlDa1ZLhNtoe3y3DpjAp8P
2fImr7G2hXNOtatnPqFgWfWTmmcatrA8MCSo+wfB9599al08QOAFuu4peW0q
Xpi2MZHeKIDauHbeIT4VP9juKVO9LYDodS+0jsyi4r79ehutcgRAUvowUXMF
FXeemnS/cS1fgr/ztjfNmWvPh3hefdQiAn8L7mhPLiHwU3LI+ROtBTS0Xfjl
VO8tHoQozZK99YKGOT5BISQCfymY38j6Jk3HrQXr9upP4kF06bc10dYEH/S3
NpQm6n3Rzc7Y2T503Ltki/rDR1y4Kiwq37GZjmW1keFrk7mQZOrsqJZPR9/D
o9kys7hgnrS/61sNHbOjFzNWyBD4kGYy+ak0A+8+w6+PyjhgqHs0LZ7NwFvn
dPfT13FAceX3VzLzGbhXdrVyhB0HPBhWyrMTGMh/dX9R8QgOPBe681efYeAl
c6M936rYcL5w4owFjxgo1xeRQjvKhpdxpvP0OxjIca1cNmUVG2Zc/Ox/msDf
+h/Fep6/+bupr02k9/mbvyXamiI90N/8vTf+okgv9Dd/L8ZWiPREf/M36t4k
kd7ob/6qGIFIj/Q3f+O35ov0Sn/z90nPdpGe6W/+Fjy8Evr0uhAONDSL/Lzq
5hvIjnhE5GeKk8jPa3zBZR2D50I4q5om8vMaurT5pMVrIcw7u07k5zUcLY7t
r+aI/Lw8+i6JPh+eVyfy82pi64uu179phMjPC01LRN/3Smgl8vPy+fYnf4WS
/KU18lqnBwjBixG75j6Rv03rDdx2E///fWOvtC35FPxfUVceD/XXRpVIm2TL
bnZLO2NmzPpMUolKKmtZohL9tKcoSdpLi6IiFJGtnVTSU5Z2pLRooYSiVYpE
3mvmNf15P8NY7jn3nnO/c8+JKRkw1nScLaRvsPvu85iKowtbjqvo2kIza/oG
v04qXverOgxdPIhjruBvN6WhOK9Ap/It0Tfrzo56NJGGF/KTjC+V8cCcouYs
CaChzqLo3E9ZPFA3Cs94tIX4y+IlpetjeOC1VM1qxwkaLlymPjHEhQc9uv55
sa9p+OJDRGWpAQ/2KrWyhDrEL467tjyyiQsDLfK2bZ5KR+NJxbSkAi4E7c95
4h9Kx+/M+EYTsn4XcJ5r1J+gI7+aU9g/kAvfDHmCntt07Jh1MtVhMhc04cHs
go90HJX4IvGHORdMUg95qhM/cESbLetX7M+Q59n6WHyS9S++apHn2XY4jZT1
M155K8+z9dmUJ+tvPKTCl+XZxmOZrN9xlZs8z/akhqOs/9HlmTzPdsOyibL7
tlZb5Xm2lq9zZP2R2n7yPNt0j12yfslfQTtl57tt7Gtk/oTw0/W97HzXocaU
zK8Quu0lsvPddIcCMv9CGMQ7JjvfVdkSTfAhBL0x8vPdpdvk4/FM+fnui9ny
r3eiyM93p7XI3y/ERH6+e8tJ/vPiTOXnu76vXQlehP/yf4okBC9CYI3/++Eg
WX8XSc0JXoSwrz7DSmWuKWYv1CB4EULZ4G3vbqSb4opRHQQvQrhz6kjHrTZT
LDhYS/AigOk1ywheKBiVUEbwIoCkhFyCFwqW2+cSvAigOk6F4IWCCQdiCV4E
8PN+KMELBUPeXCL6l6/A758A07P9zvKhkLv84nXiT4pEheppkXwIXK53eDbx
J3mBu2MvzeKDI+262S/iT+oa9oisaXxYNN07+BTxu9I8HEpptYWC7398/FRo
+PQpq1/4TVuYODxOxdKY+JFpNwwm7beFAemj5/WMp2Gyxi6PcG9b6Mq74f8W
aFhlvv06ZbQtjJHMNKp0oqH38OwE1xQufDmXsSL1GA1L6n3dNhG/umSbrnXX
WxoOSD/97VgLG5JuJPjW0Oio7xq1OPOWNeyZx+0UzafjwLbP17KuWgF7/sce
1gE6lm9q+Zz0eALE3Ty/4nARHUN+h3VvHTYBzu/cP3Mn8ScNvonNPoHjYVve
1qP9VRl4o7l3vxQq8ph1iuXjvjzm1Hj5uC+POThQPu7LYw62kY/78pjT/n6W
jfvymHVK5OO+POabW+XjvjzmNDv5uO/5ROLZCrJfC2EdS35fZ3t4KNmvye9T
KL+v45/xnuzXQjh2cY/svo6V9UiyX5PXB++Q3df5ZjKc7NcCCLtVLbuvczLo
AdmvBXCwZo3svo697kyyXwvAcHag7L5ODTWe7NcC0B6dK7uvcyRsDsGvQIHf
y9atL6g+Ani59Z6rbrcJhjt0aFdPFoAf/8VHTUdTrL226EbkGAGYqucVee83
xcZdohcMLQFo9vOu/v3AFGPyNyy42c6HpEHNuiuVKFgjZni5vuSD88kh79V1
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
yoMJbh9vHrlOR94Bv7oTf7iw2HN5P33i36SZo8qD13HhUmb31kYVBlYWtyT+
MBeC4LW8j2Si46VUh8lCKKmU95F0pU0t7B8ohFsB8j6SzsrTjSYxQrA6Ku8j
EVc8oSUVCMEg5P99JMkPlkc2CWFt/StZH0nixP2VpQYimPLbX9ZHcumy6cQQ
FxHsPRsl6yPR7AkrXR8jgqmq8j6ShdfOBC48LYJlp1xkfST633UGx5P9fcRV
rqyPZGzKuUz1+yIYM0neR5J6J2LKg8ciQDt5H0l4UGR9xVOy/xTI+0gubM3b
qP9EBHNT5X0k0wxMdDPJ97sqy/tIJptfzYm4LoLK5/I+kpSzO6XHMkWKfLP6
db3nJSJFvtkxp97zFJEi3wwte89bRIp8M1et22nn3UWKfDNv1fzYlCkiRb7Z
c2U95mOuSJFvdmvIZ3cHC5Ei38zUxGacspFIkW/GGXR5bGs7R5FvtqygZaXX
a44i32zDzbDVQuQo8s3mMQKsD6dwFPlmmm8zzi6M4CjyzRLb7T/menAU+Wad
i8V1/1lxFPlmY6wOHDqlxlHkm7FdxapzX9ko9FTh+Eu6BWds4OaxpxMORzJx
pYlfxuDNNrCh63zM+VwmupraFzjNtoGw465Hd9YwcbG1r0ME0wYKNpbMMh7I
wjTPC57J7WzgHf9zeak1CzUOCz6dvcuGrj9/7of6sDDz3Z/uswls6Dlaule8
m4XL7X7sS/6PDZND3bsxn4X+l6knIyRsKI+9ZNDzloVaUcpFZ4exgbMShmzR
MMPhdz7r1b6xhoVhZwMEQjOcu7PuwtCLxK/m9DMzX2iG9aUvd/N2WcNQNa6L
w24zLNxYm7ogwBq27p3ZmHTGDOvOtXTuklpDsdCx3rzCDJ18lA6cp1pDqY6l
Q9MnM1Teabzo6QBr2K33aWTNQHNcsLpIpMYW/X9+KOh9s+FqjZcIPsjmh4Jv
qYtM120X/X9+KPjxsCS4Ll/0//mh4FrjlUlazaL/zw8FdxV0F4ygiv8/PxSk
LX5H3k8MsbL5IeuZBSUt5JgYxsnmh4rv//Z+XvSfXvhTN6Jqhb4EHk8rnh4a
SdazOwl+T8n6drsw4K9tLvHreXPovf3V1PLThza8oGJ8hnBk3SoJvIvYpyEh
/pyfPFu0lYwHV+it3DyehhMTjx5u9if6qWjSFTsvGuYkqVM0iH4/MF2rcetW
sj6lX3j1U1cCX8OjO6acpaFzz9KJU4aIFXrBzKXzTUaRCBLZ7kfHED8geLxl
wvsVhA/+BaO1iB/YGzWI38UQAVe1QdjwlI4Gvrs7vj4TQpjhm7upSgxsCh70
341dQihITX08w4KB309tiQ8SCeFbko1nozMDueqdod+/CoA27ND8oFAGXktb
qj7npABmfCl6XZPIwL83nn1eOpKvwC9n0R7PzZds4ebULFs+wW/jumtvw2fZ
QsQlpTP2OUxU7wjYMu8LDzZeu13r+oyJp+t3SOi7eVA0v6f8v34sLBSY6Vaa
8WBiQkb4LksW2ivBQP8SLgxajQ05LiycNOGx5itfLmh+cBhWvZ6F18rreIJu
Dsxvt2vtn8LCjOeB6yOPcuDTiTOHOKUsNEi+Gpw5mAMzWkcplf5mYZ3H43yP
rTYQesf6/SNLM/yldtHzwCAbCGCUwXx3M/TM8XBzjmeDtmq9zuIogvdJt3Pi
xrJh93+7/L+eNkPtyj+eARXWUOZZaPHrvhkGObf7XVlPxg/XBYa3kK8vvXLz
8BiC37IbppsIfg9VL5TlKfbhN2WaPG+xD78ax5JkeYx9+H1X7CfLa+zDr84d
sex8uQ+/2ek2srzHPvym+UyW5UH24Vfpx3JZXmQffot882Sfd1Y8L7YpoVic
FUBY9SY9Q4Jfv67p1dLNAvBrcrW4m03FHfkuB0fOFkB3rkOe+CkV9/pXuWUx
BOBk4V4Y3kPFUOWHzM6ffHD2iBJHmhH8xk3sUr3NBzXxHYHTDBp+M7R+WRnP
h7XPLC7VrqJh5KGkW26BfIhnZmTwjxA8w6kBIxfZKvBrdxqcq1i2oLu9WCmI
6N0ZZxav5TTx4HHuwnsDMul4xMUg1C6D4OVTVu2ASjoaH3Z3+b2IB1p2sRDU
RseGNTQ1dxYP4s6bfGbrMrC5LfSITwMX1HjTGwJsyHqr6aGskcaFRU9NLDpn
EX37sHTqkgVcOLcntqCtV9+aFQUGU7jw0TM7ds4WBsakhhguI+v3ie3hZfml
DFyXVby6+oQN3MtXU2rvz8Rxwuurk36zwf+DC+gImHje3cvwni8bgow8t48I
YWJPz/FA92fWUOdiUt2SwEQDq63zHOYTfOxOtkgrYaLSV432xFYrMLr9Opr/
gYmXOFLe7HgrqBvwovEM0buVD7Mof5X/rXe3prT+uvzrH16KTpdZjv3wDy/F
38wKfZ//w8sTU93smbf/4eWrzYH2zkv/8KJtffTEghP/8GI/cmzmtj3/8BL5
bqbs+UAfXlRWlYSa+wjhh5JNQj3Rc5oZs/Z8Jfpl0uFR7JZ0KmZFtDsWjhEC
3+b0dMf7VCz7nZcfo0V+fl1Wk/InKi7V2/tgUYcAdI9Y99cZRMOEmg17JxE8
/vWceDyCRkMX2Prb7IYAdlk8KwAeDQ86pGuMOCGAQuXWOV7TaOjxq7aqh+Az
9uPBFeXuNEwclBt6tZQPuX9fLDBOo6HRzKCBzXp8+Dro5j7RRxo+KRsZFRNu
Cx5DpnaMNafjreV5TRmfedDcf1nid186fnKy43GW8SD1m82GrbF0nOV1c5Wt
Eg+inyTGN9+g45eEccfOp3Bh75nUL5RGOpaox2QnOXPhesS0zeaqDPwfo6IA
GA==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[
          BezierCurveBox[{1, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
           225, 226, 227, 4}], 0.09962216625745958], 
         ArrowBox[{1, 8}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{1, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
           251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 13}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
            273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 
           286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 3}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307,
            308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 
           321, 322, 323, 5}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
            334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 
           347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 
           360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 
           373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 
           386, 387, 388, 389, 390, 391, 392, 393, 394, 6}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
            405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 
           418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
           431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 
           444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 
           7}], 0.09962216625745958], ArrowBox[{2, 9}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
            467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 
           480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 
           493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 
           506, 507, 508, 509, 10}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
            520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 
           533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 
           546, 547, 548, 549, 550, 551, 552, 553, 11}], 0.09962216625745958],
          ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0NciggEAQOGfay/RrREZ2SqyslIZySoUSRGFiPLkvovvPMAJlRqZ+kAQ
BAUGGZYRRhkjzDgTRJhkimlmiDLLHPMssMgSy6wQI06CVdZIss4Gm2yxTYod
dtljnwPSHJIhS44jjjnhlDxnFDjngkuuuKZIiRtuuaNMhXseqPJIjSfqNHjm
hSavvNGizTsffNLhi2+6/PBLjz5/DPn8D2vyILU=
           "]], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
            653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 
           666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 14}], 
          0.09962216625745958], ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0FkiQgEAQNHHBqzBllqCBbArYyWKFEqlQmgQMiRKkiEJ/87HuQu4s3ML
ofmpIAhCTLMoSyyzwiprhIkQZZ0YG2wSJ8EW2yTZIUWaXfbYJ0OWA3LkKXBI
kRJljjjmhAqnnHFOlRp1GlzQ5JIrrmlxwy133NPmgQ6PPNGlxzN9XhjwypA3
3vngkxFfjPlmwg+//DHj4T8hS0Lv
           "]], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
            768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 
           781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 
           794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 
           807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 
           820, 821, 822, 823, 824, 825, 826, 827, 828, 16}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{2, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
            839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 
           852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 
           865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 
           878, 879, 880, 881, 17}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
            892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 
           905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 
           918, 919, 920, 921, 922, 923, 924, 925, 6}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
            936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 
           949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 7}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
            971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 
           984, 985, 986, 10}], 0.09962216625745958], 
         ArrowBox[{3, 11}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
            997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 
           1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 
           1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 
           1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 
           1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 12}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 
           1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 
           1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 
           1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 
           1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 
           1101, 15}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
           1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 
           1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
           1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 
           1143, 1144, 1145, 16}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{3, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 
           1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 
           1165, 1166, 1167, 1168, 1169, 1170, 1171, 17}], 
          0.09962216625745958], ArrowBox[{4, 13}, 0.09962216625745958], 
         ArrowBox[{5, 3}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 
           1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 
           1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 
           1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 
           1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 
           1224, 6}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 
           1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 
           1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 
           1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 
           1266, 1267, 1268, 7}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 
           1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 
           1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 
           1299, 1300, 1301, 1302, 1303, 10}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 
           1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 
           1323, 1324, 1325, 1326, 1327, 1328, 1329, 11}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 
           1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 
           1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 
           1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 
           1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 
           1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 
           1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 12}], 
          0.09962216625745958], ArrowBox[{5, 14}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 
           1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 
           1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 
           1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 
           1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 
           1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 15}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 
           1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 
           1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 
           1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 
           1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 
           1515, 16}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{5, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 
           1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 
           1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 
           1546, 1547, 1548, 1549, 1550, 17}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{6, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 
           1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 
           1570, 1571, 1572, 1573, 1574, 1575, 1576, 12}], 
          0.09962216625745958], ArrowBox[{6, 15}, 0.09962216625745958], 
         ArrowBox[{7, 6}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{7, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 
           1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 
           1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 
           1607, 1608, 1609, 1610, 1611, 12}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{7, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 
           1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 
           1631, 1632, 1633, 1634, 1635, 1636, 1637, 15}], 
          0.09962216625745958], ArrowBox[{7, 16}, 0.09962216625745958], 
         ArrowBox[{8, 4}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{8, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 
           1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 
           1657, 1658, 1659, 1660, 1661, 1662, 1663, 13}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 
           1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 
           1683, 1684, 1685, 1686, 1687, 1688, 1689, 3}], 
          0.09962216625745958], ArrowBox[{9, 5}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 
           1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 
           1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 
           1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 
           1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 
           1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 6}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 
           1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 
           1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 
           1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 
           1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 
           1804, 7}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 
           1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 
           1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 
           1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 
           1846, 1847, 1848, 10}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 
           1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 
           1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 
           1879, 1880, 1881, 1882, 1883, 11}], 0.09962216625745958], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwN0Fk2AlAAANDXV8c5bcKW+iYNSIZSUgiFjEWGTKGEIjbpftwN3Ol0IZ6P
hBDiTDETDWGWBHMkSZEmwzwLLJJliRzLrLDKGnkKrFOkxAZlNqlQZYttdqix
yx771GlwwCFHNDnmhFPOOOeCFm0uuaLDNTfcckeXex545Ilnerzwyht9Brwz
5INPvhgx5psfJvzyR8zhPyx1LWM=
           "]], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 
           1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 
           1983, 1984, 1985, 1986, 1987, 1988, 1989, 14}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 
           1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 
           2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 
           2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 
           2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 
           2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 
           2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 15}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 
           2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 
           2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 
           2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 
           2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 
           2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 16}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{9, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 
           2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 
           2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 
           2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 
           2164, 2165, 2166, 17}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{10, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 
           2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 
           2186, 2187, 2188, 2189, 2190, 2191, 2192, 6}], 
          0.09962216625745958], ArrowBox[{10, 7}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{10, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 
           2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 
           2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 
           2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 
           2234, 2235, 2236, 12}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{10, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 
           2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 
           2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 
           2267, 2268, 2269, 2270, 2271, 15}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{10, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 
           2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 
           2291, 2292, 2293, 2294, 2295, 2296, 2297, 16}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{11, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 
           2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 
           2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 
           2328, 2329, 2330, 2331, 2332, 6}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{11, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 
           2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 
           2352, 2353, 2354, 2355, 2356, 2357, 2358, 7}], 
          0.09962216625745958], ArrowBox[{11, 10}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{11, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 
           2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 
           2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 
           2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 
           2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 
           2411, 12}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{11, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 
           2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 
           2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 
           2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 
           2453, 2454, 2455, 15}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{11, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 
           2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 
           2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 
           2486, 2487, 2488, 2489, 2490, 16}], 0.09962216625745958], 
         ArrowBox[{11, 17}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 
           2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 
           2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 
           2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 
           2532, 2533, 2534, 6}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 
           2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 
           2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 
           2565, 2566, 2567, 2568, 2569, 7}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 
           2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 
           2589, 2590, 2591, 2592, 2593, 2594, 2595, 10}], 
          0.09962216625745958], ArrowBox[{14, 11}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 
           2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 
           2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 
           2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 
           2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 
           2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 12}], 
          0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 
           2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
           2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
           2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 
           2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 
           2710, 15}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 
           2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 
           2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 
           2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 
           2752, 2753, 2754, 16}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{14, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 
           2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 
           2774, 2775, 2776, 2777, 2778, 2779, 2780, 17}], 
          0.09962216625745958], ArrowBox[{15, 12}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{16, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 
           2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 
           2800, 2801, 2802, 2803, 2804, 2805, 2806, 12}], 
          0.09962216625745958], ArrowBox[{16, 15}, 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{17, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 
           2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 
           2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 
           2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 
           2848, 2849, 2850, 12}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{17, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 
           2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 
           2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 
           2881, 2882, 2883, 2884, 2885, 15}], 0.09962216625745958], 
         ArrowBox[
          BezierCurveBox[{17, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 
           2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 
           2905, 2906, 2907, 2908, 2909, 2910, 2911, 16}], 
          0.09962216625745958]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.09962216625745958], DiskBox[2, 0.09962216625745958], 
         DiskBox[3, 0.09962216625745958], DiskBox[4, 0.09962216625745958], 
         DiskBox[5, 0.09962216625745958], DiskBox[6, 0.09962216625745958], 
         DiskBox[7, 0.09962216625745958], DiskBox[8, 0.09962216625745958], 
         DiskBox[9, 0.09962216625745958], DiskBox[10, 0.09962216625745958], 
         DiskBox[11, 0.09962216625745958], DiskBox[12, 0.09962216625745958], 
         DiskBox[13, 0.09962216625745958], DiskBox[14, 0.09962216625745958], 
         DiskBox[15, 0.09962216625745958], DiskBox[16, 0.09962216625745958], 
         DiskBox[17, 0.09962216625745958]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9023331623658657`*^9, 3.902333189353632*^9}},
 CellLabel->
  "Out[751]=",ExpressionUUID->"7c0b06b1-eb72-4481-b6b4-2a5e6a6b8c21"]
}, Open  ]],

Cell[TextData[{
 StyleBox["For a list of weights we use ", "Text"],
 StyleBox["HighestWeights", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884015467337222*^9, 3.884015524667067*^9}, {
  3.88401587047622*^9, 3.884015961224642*^9}, {3.884016014535932*^9, 
  3.884016031624633*^9}},ExpressionUUID->"8c462406-9185-434e-8326-\
aa4eb5e82164"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighestWeights", "[", "weightList", "]"}]], "Input",
 CellLabel->
  "In[753]:=",ExpressionUUID->"eb701bd3-cf62-4acb-a58f-eff6039b8aa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"(1, 2, 1)\"\>", ",", "\<\"(2, 0, 0)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.884015861663813*^9, 3.884015886501742*^9}, {
  3.9023332116670237`*^9, 3.9023332181755657`*^9}},
 CellLabel->
  "Out[753]=",ExpressionUUID->"ff89b8c1-75f9-404d-b50a-c69438743df5"]
}, Open  ]],

Cell[TextData[{
 StyleBox["For an expression which is given by a sum of characters we can use \
", "Text"],
 StyleBox["HighestWeightsFrom", "CodeText"]
}], "Text",
 CellChangeTimes->{{3.884015467337222*^9, 3.884015524667067*^9}, {
  3.88401587047622*^9, 3.884015961224642*^9}, {3.884016014535932*^9, 
  3.884016088350728*^9}},ExpressionUUID->"bb267da4-7bfd-4c38-9c22-\
638c6a43d479"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testCharacter", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Chi]", "[", "ir", "]"}], "[", 
      RowBox[{"z1", ",", "z2", ",", "z3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ir", ",", "irrepList"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8840161866950483`*^9, 3.884016192239356*^9}},
 CellLabel->
  "In[754]:=",ExpressionUUID->"c1946b83-913f-4ebb-b5b2-bb9ff51aeec1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HighestWeightsFrom", "[", "g", "]"}], "[", 
  RowBox[{"testCharacter", ",", 
   RowBox[{"{", 
    RowBox[{"z1", ",", "z2", ",", "z3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884016126890112*^9, 3.884016130373678*^9}, {
  3.884016195161972*^9, 3.884016201147814*^9}},
 CellLabel->
  "In[755]:=",ExpressionUUID->"0ef9ed62-0233-4479-b969-96a539385276"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"(2, 0, 0)\"\>", ",", "\<\"(1, 2, 1)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.884016201648612*^9, 3.902333221868874*^9},
 CellLabel->
  "Out[755]=",ExpressionUUID->"47ddc669-3c8b-469a-a506-671f0059aa1e"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1512, 916},
WindowMargins->{{266, Automatic}, {Automatic, -309}},
CommonDefaultFormatTypes->{"Output"->StandardForm},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34198238-be23-4156-b652-397db17bc3a0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 82, "Section",ExpressionUUID->"b661c40a-4385-4ae6-be4e-5d7f719fa41a"],
Cell[CellGroupData[{
Cell[765, 29, 155, 3, 65, "Subsection",ExpressionUUID->"29d58b42-35b8-495d-bf29-a9cd8fe45bde"],
Cell[CellGroupData[{
Cell[945, 36, 333, 7, 62, "Input",ExpressionUUID->"1c573df5-af7d-4920-af24-0326480323d3"],
Cell[CellGroupData[{
Cell[1303, 47, 194, 4, 29, "Print",ExpressionUUID->"88ca7f65-d09e-4970-9e33-b66f1ea8c311"],
Cell[1500, 53, 208, 4, 29, "Print",ExpressionUUID->"40761bac-26d1-4094-b046-fb6bfa630f50"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1769, 64, 174, 3, 65, "Subsection",ExpressionUUID->"868099ee-d77a-4353-8ef8-adb99d4bac0b"],
Cell[CellGroupData[{
Cell[1968, 71, 155, 3, 54, "Subsubsection",ExpressionUUID->"0b62021d-7957-402c-bbae-b0abbb5a78f4"],
Cell[2126, 76, 541, 14, 41, "Text",ExpressionUUID->"dcce6ae0-d0c8-4769-a567-1f03955f8438"],
Cell[CellGroupData[{
Cell[2692, 94, 382, 8, 36, "Input",ExpressionUUID->"dbf9e049-4076-4667-9cc9-ce6103aad4fe"],
Cell[3077, 104, 323, 6, 40, "Output",ExpressionUUID->"1a53bf1f-0d86-4006-a197-4cb51e1f7562"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3437, 115, 488, 14, 36, "Input",ExpressionUUID->"128e6245-4034-4425-8826-73db089382b6"],
Cell[3928, 131, 300, 6, 40, "Output",ExpressionUUID->"59716a32-c8e2-46a9-8d44-7dbb16700090"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4277, 143, 235, 4, 44, "Subsubsection",ExpressionUUID->"473735e5-61fe-4ef4-a905-35a260a119cc"],
Cell[4515, 149, 542, 15, 41, "Text",ExpressionUUID->"65c57878-5b09-4275-988d-621d66362723"],
Cell[CellGroupData[{
Cell[5082, 168, 576, 15, 36, "Input",ExpressionUUID->"ed9a2da5-dd19-49f8-acf3-27e68cddc5c4"],
Cell[5661, 185, 459, 11, 40, "Output",ExpressionUUID->"8dc7e600-caf1-4729-a436-52b7f7157314"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6157, 201, 1170, 31, 137, "Input",ExpressionUUID->"7b276194-24d6-4032-a47c-0884fbbb9bb6"],
Cell[7330, 234, 912, 26, 40, "Output",ExpressionUUID->"36b41cc9-2c8c-4ace-a212-0259e34d968a"],
Cell[8245, 262, 630, 14, 40, "Output",ExpressionUUID->"bba64efc-7171-4636-befc-7a93e2350fb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8912, 281, 448, 12, 36, "Input",ExpressionUUID->"ca173b40-2b8f-4ccf-9a99-cbc04afc9e90"],
Cell[9363, 295, 610, 12, 34, "Message",ExpressionUUID->"07bb5558-3693-4793-9525-da9218c6490f"],
Cell[9976, 309, 281, 7, 40, "Output",ExpressionUUID->"13a683f2-f889-4f5b-82e4-121f753c2cc7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10306, 322, 248, 4, 44, "Subsubsection",ExpressionUUID->"868981db-0d2f-462e-936c-2e7af404a16c"],
Cell[10557, 328, 462, 14, 41, "Text",ExpressionUUID->"44040783-32a4-46aa-be33-5e6934d02587"],
Cell[CellGroupData[{
Cell[11044, 346, 418, 9, 62, "Input",ExpressionUUID->"b5a0fa3b-2043-461c-b957-eda786f8da88"],
Cell[11465, 357, 327, 7, 40, "Output",ExpressionUUID->"f626a8a9-f03f-47a5-8698-0ae6043181db"],
Cell[11795, 366, 662, 20, 57, "Output",ExpressionUUID->"34775543-9baa-4de7-9bad-0f660921192b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[12506, 392, 265, 4, 44, "Subsubsection",ExpressionUUID->"1f08ea82-80ed-4b46-b345-f17c7cbd86f5"],
Cell[CellGroupData[{
Cell[12796, 400, 817, 20, 87, "Input",ExpressionUUID->"7fab4dd9-d7ed-44bc-a09d-e999a1a6e576"],
Cell[13616, 422, 795, 24, 57, "Output",ExpressionUUID->"a10f421b-47e0-4a88-be9e-6bab9387ccb1"],
Cell[14414, 448, 795, 24, 57, "Output",ExpressionUUID->"44d50ca5-4afa-4b21-96a1-16320ff1f43e"],
Cell[15212, 474, 210, 4, 40, "Output",ExpressionUUID->"6298ee3c-093f-40e5-8285-c660dcad9142"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[15483, 485, 221, 4, 45, "Subsection",ExpressionUUID->"e8032ead-062f-4292-a277-68cd63f72543"],
Cell[15707, 491, 897, 22, 68, "Text",ExpressionUUID->"9871147f-6019-4d71-808c-fcc6cda8e7af"],
Cell[CellGroupData[{
Cell[16629, 517, 409, 9, 36, "Input",ExpressionUUID->"5ad76150-6782-4bb5-aa2f-79208a46e8e6"],
Cell[17041, 528, 1679, 51, 101, "Output",ExpressionUUID->"5d79d71c-fcb0-4f14-89c4-366b587a24dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18757, 584, 439, 10, 36, "Input",ExpressionUUID->"dd26873a-248e-479a-8823-de688f87fd9e"],
Cell[19199, 596, 1521, 49, 101, "Output",ExpressionUUID->"e0543beb-d823-4b50-85e0-751c72710af3"]
}, Open  ]],
Cell[20735, 648, 279, 7, 41, "Text",ExpressionUUID->"8ea1185e-eb63-49e4-857b-f52cb60aa19f"],
Cell[CellGroupData[{
Cell[21039, 659, 265, 6, 36, "Input",ExpressionUUID->"d5ed359c-86ac-4467-a781-b8c056d5dc3e"],
Cell[21307, 667, 309, 8, 57, "Output",ExpressionUUID->"2bb9f3ab-c3af-4fe2-a5ab-42bfeba5265f"]
}, Open  ]],
Cell[21631, 678, 315, 9, 41, "Text",ExpressionUUID->"22b1a6cb-7df2-4bb2-a7f1-77555bef841f"],
Cell[CellGroupData[{
Cell[21971, 691, 448, 12, 36, "Input",ExpressionUUID->"e38fec6f-2eda-49a9-b22c-13260803b2f7"],
Cell[22422, 705, 152, 2, 40, "Output",ExpressionUUID->"ee347e0c-a2e5-4c20-a76b-0756e69ee072"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22611, 712, 1310, 39, 62, "Input",ExpressionUUID->"8c353f3d-18f9-4145-8312-6effb0ccd62a"],
Cell[23924, 753, 175, 2, 40, "Output",ExpressionUUID->"caeba353-0d33-4415-b754-7eeb4de23f0f"]
}, Open  ]],
Cell[24114, 758, 410, 11, 41, "Text",ExpressionUUID->"f4078465-72c1-40f0-9a54-dd0e81779ebf"],
Cell[CellGroupData[{
Cell[24549, 773, 1166, 30, 112, "Input",ExpressionUUID->"6ced0bc0-05e4-46fc-927a-a0d6506207af"],
Cell[25718, 805, 957, 30, 57, "Output",ExpressionUUID->"98f90d3c-832f-4dd3-aec0-ba489849762a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[26724, 841, 268, 4, 45, "Subsection",ExpressionUUID->"c85958a0-425b-4cc6-b012-b2ae8d4a1fb3"],
Cell[26995, 847, 452, 11, 42, "Text",ExpressionUUID->"06ae731a-70be-4dca-a85f-54f58ed8d30a"],
Cell[CellGroupData[{
Cell[27472, 862, 801, 22, 87, "Input",ExpressionUUID->"b31750e3-a27f-48a7-8ff0-8d6bc3bdf9ec"],
Cell[28276, 886, 1200, 32, 40, "Output",ExpressionUUID->"d9a82582-81c5-4de2-a34b-ba99f3572bf2"],
Cell[29479, 920, 1353, 40, 66, "Output",ExpressionUUID->"863fe315-62ab-45fc-9dfe-b059c197d50b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30869, 965, 658, 17, 112, "Input",ExpressionUUID->"6604e00d-ae31-458c-ac2b-a190f3f8cc45"],
Cell[31530, 984, 2713, 104, 101, "Output",ExpressionUUID->"34635ab9-c0d6-4394-bb03-8eb275fc3c9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34280, 1093, 434, 9, 87, "Input",ExpressionUUID->"3be6b673-e4c4-4c48-80ed-d802b4b9eff6"],
Cell[34717, 1104, 6549, 170, 181, "Output",ExpressionUUID->"fdb5d073-780b-4645-a3e6-3ae7967742d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41303, 1279, 417, 10, 36, "Input",ExpressionUUID->"31d52b63-1799-4455-82b5-86e505d404c9"],
Cell[41723, 1291, 1770, 54, 101, "Output",ExpressionUUID->"1a616054-e69f-45c5-b5f4-722d13427ab7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43530, 1350, 559, 16, 36, "Input",ExpressionUUID->"18d75325-db77-4f5c-ae4f-ebce898ede3c"],
Cell[44092, 1368, 207, 4, 40, "Output",ExpressionUUID->"ef958e83-1a55-412f-877d-dd5bfa8c5317"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44348, 1378, 309, 5, 45, "Subsection",ExpressionUUID->"17697f98-b914-4fc1-896b-ef20324aa0e8"],
Cell[44660, 1385, 295, 6, 41, "Text",ExpressionUUID->"29abf6a9-19fa-423b-8991-45fdec7e7437"],
Cell[CellGroupData[{
Cell[44980, 1395, 882, 24, 112, "Input",ExpressionUUID->"936a9579-9d30-4bb9-bc32-276b255144fa"],
Cell[45865, 1421, 612, 14, 40, "Output",ExpressionUUID->"de7da0df-eb99-4080-aa8c-e54b3194394c"]
}, Open  ]],
Cell[46492, 1438, 375, 8, 41, "Text",ExpressionUUID->"97a453d2-9e9d-47d1-86eb-159b6c14ae4d"],
Cell[CellGroupData[{
Cell[46892, 1450, 511, 12, 36, "Input",ExpressionUUID->"1ab32007-7b29-48f3-ad61-739d5206e474"],
Cell[47406, 1464, 79908, 1310, 254, "Output",ExpressionUUID->"7c0b06b1-eb72-4481-b6b4-2a5e6a6b8c21"]
}, Open  ]],
Cell[127329, 2777, 339, 7, 41, "Text",ExpressionUUID->"8c462406-9185-434e-8326-aa4eb5e82164"],
Cell[CellGroupData[{
Cell[127693, 2788, 159, 3, 36, "Input",ExpressionUUID->"eb701bd3-cf62-4acb-a58f-eff6039b8aa6"],
Cell[127855, 2793, 307, 6, 40, "Output",ExpressionUUID->"ff89b8c1-75f9-404d-b50a-c69438743df5"]
}, Open  ]],
Cell[128177, 2802, 383, 8, 41, "Text",ExpressionUUID->"bb267da4-7bfd-4c38-9c22-638c6a43d479"],
Cell[128563, 2812, 457, 12, 36, "Input",ExpressionUUID->"c1946b83-913f-4ebb-b5b2-bb9ff51aeec1"],
Cell[CellGroupData[{
Cell[129045, 2828, 394, 9, 36, "Input",ExpressionUUID->"0ef9ed62-0233-4479-b969-96a539385276"],
Cell[129442, 2839, 252, 5, 40, "Output",ExpressionUUID->"47ddc669-3c8b-469a-a506-671f0059aa1e"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

